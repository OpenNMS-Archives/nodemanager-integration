VERSION 3
#
# Created using xnmtrap by admin on Thu Nov 22 12:08:25
#
# Configuration for event formats and actions.
# This configuration file is used by pmd, xnmevents, and ovactiond.
#
# The Hewlett-Packard shipped version of this file can be found in
# /opt/OV/newconfig/OVEVENT-MIN/conf/$LANG/trapd.conf, where $LANG is
# your native language (by default, "C").  This file documents the HP
# internal events, as well as setting a template for other events
# (sometimes called traps).  HP does not support users sending any of the
# HP OpenView events, unless otherwise documented.  See the trapd.conf(4)
# manpage for more information on the format of events in this file.
#
# The HP internal event names all start with the characters:
# "OV", and can be listed using the command:
#           grep '^EVENT OV' /opt/OV/newconfig/OVEVENT-MIN/conf/$LANG/trapd.conf
#
#
# WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
#   Do not modify this file directly, use xnmtrap via the
#   OVW menu item 'Options:Event Configuration', or
#   merge in your changes via 'xnmevents -load FILE'.
#   On Unix, see trapd.conf(4), xnmtrap(1), and xnmevents(1) manpages
#   for details, on Windows NT, see trapd.conf, xnmtrap, and xnmevents
#   reference pages in the help file.
# WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
#
#
############################################################################
#
# Display Categories:
#
# Categories 0 and 1 are required, and cannot be modified by the user,
# however, their category names never show up.  These can be used
# as categories in the trap formats below to "IGNORE" (don't log or
# display) or to "LOGONLY" (don't display) events.
# Category 2 is required but it's title may be changed via this file.
#
#
CATEGORY 0 "IGNORE" "IGNORE"
CATEGORY 1 "LOGONLY" "LOGONLY"
CATEGORY 2 "Error Alarms" "Error Alarms"
CATEGORY 3 "Threshold Alarms" "Threshold Alarms"
CATEGORY 4 "Status Alarms" "Status Alarms"
CATEGORY 5 "Configuration Alarms" "Configuration Alarms"
CATEGORY 6 "Application Alert Alarms" "Application Alert Alarms"
CATEGORY 7 "Cisco Alarms"
CATEGORY 8 "SC2200" "SC2200"
CATEGORY 9 "CiscoWorks Alarms"
CATEGORY 10 "J20-GGSN" "J20-GGSN"
CATEGORY 11 "Juniper"
CATEGORY 12 "Cisco 5800" "Cisco 5800"
CATEGORY 13 "NAS: Controller E1 Down" "NAS: Controller E1 Down"
CATEGORY 14 "SEGNALAZIONI DA SC2200" "SEGNALAZIONI DA SC2200"
CATEGORY 15 "SCE2000" "SCE2000"
CATEGORY 16 "Allarmi Ambientali" "Allarmi Ambientali"
CATEGORY 17 "CCR Alarms" "CCR Alarms"
CATEGORY 18 "Cisco IPBA" "Cisco IPBA"
CATEGORY 19 "RADIUS CHECK" "RADIUS CHECK"
CATEGORY 63 "Problem Diagnosis Alarms" "Problem Diagnosis Alarms"
############################################################################
#
# Operator-initiated (manual) Actions:
#
ACTION 60 "Print Alarms" printEvents
SDESC
Print alarms to printer with title and some filtering.
EDESC
ACTION 60 "Print Alarms with Topology Information" printEvents -s
SDESC
Print alarms to printer with topology information for every
alarm source.
EDESC
ACTION 0 "Browse MIB" ovmibBrwEvent
SDESC
Bring up the SNMP MIB browser, on the first source defined
by the list of indicated events.
EDESC
ACTION 20 "Sort Alarms by Severity" sortEvents -s
SDESC
Sort the alarms based on severity, and pass them to
a dialog in which you may do further sorting or printing.
EDESC
ACTION 20 "Sort Alarms by Source" sortEvents -n
SDESC
Sort the alarms based on source, and pass them to a
dialog in which you may do further sorting or printing.
EDESC
ACTION 20 "Sort Alarms by Message" sortEvents -m
SDESC
Sort the alarms based on the message string, and pass them
to a dialog in which you may do further sorting or printing.
EDESC
ACTION 20 "Sort Alarms by Source Frequency" freqSortEvnt -s
SDESC
Sort the alarms based on frequency of alarm source.
This is useful to find out which source sends the
most alarms.
EDESC
ACTION 20 "Sort Alarms by Alarm Frequency" freqSortEvnt -e
SDESC
Sort the alarms based on frequency of alarm type.
This is useful to find out type of alarm is most
frequently sent.
EDESC
ACTION 20 "Sort Alarms by Source and Alarm Frequency" freqSortEvnt -c
SDESC
Sort the alarms based on frequency of the combination of
alarm type and source.  This is useful to find out which
alarm and source combination is the most common.
EDESC
ACTION 0 "Search Event Database for Source" sourceEvents
SDESC
Search the OpenView Event Database for events with the same
source as the current event.  This will include events that
have the same HP OpenView object identifier as the source,
or have the source in the message string.

This action is useful if you want to find all events for a
given source.  Log only events are not included.

Note:
The results of this action may take a long time to display.
Depending on the size of your logfile and the number of
sources selected, it could take as much as five minutes.
If you want to limit this action to a fixed amount of time,
You can used xnmtrap to configure the maximum amount of
time that the action command can run before it is
terminated.  If you specify a time of 0 (zero, the default
value), xnmevents will not wait for the action command to
return, and the action will proceed until it has completed.
EDESC
ACTION 0 "Search Event Database for Source (include Log Only events)" sourceEvents -l
SDESC
Search the OpenView Event Database for events with the same
source as the current event.  This will include events that
have the same HP OpenView object identifier as the source,
or have the source in the message string.

This action is useful if you want to find all events for
a given source, including log only events.

Note:
The results of this action may take a long time to display.
Depending on the size of your logfile and the number of
sources selected, it could take as much as five minutes.
If you want to limit this action to a fixed amount of time,
You can used xnmtrap to configure the maximum amount of
time that the action command can run before it is
terminated.  If you specify a time of 0 (zero, the default
value), xnmevents will not wait for the action command to
return, and the action will proceed until it has completed.
EDESC
ACTION 20 "Sort Alarms by OAD Name" sortEvents -o
SDESC
Sort the alarms based on OAD name, and pass them to a
dialog in which you may do further sorting or printing.
EDESC
############################################################################
#
# Enterprises:
#
OID_ALIAS x25-packet-layer .1.3.6.1.2.1.10.5
OID_ALIAS dial-control .1.3.6.1.2.1.10.21.2
OID_ALIAS frame-relay .1.3.6.1.2.1.10.32
OID_ALIAS ospfTrap .1.3.6.1.2.1.14.16
OID_ALIAS bgp .1.3.6.1.2.1.15
OID_ALIAS bgp4 .1.3.6.1.2.1.15.7
OID_ALIAS rmon .1.3.6.1.2.1.16
OID_ALIAS dot1dBridge .1.3.6.1.2.1.17
OID_ALIAS RepeaterMgmt .1.3.6.1.2.1.22
OID_ALIAS snaLU .1.3.6.1.2.1.34.1.1.5
OID_ALIAS snaNode .1.3.6.1.2.1.34.1.1.10
OID_ALIAS sna-sdlc .1.3.6.1.2.1.41.1.3
OID_ALIAS dlsw-MIB .1.3.6.1.2.1.46.1
OID_ALIAS rcVrrpNotifications .1.3.6.1.2.1.46.1.3
OID_ALIAS entityMIBTraps .1.3.6.1.2.1.47.2
OID_ALIAS vrrpMIB .1.3.6.1.2.1.68
OID_ALIAS pingMIB .1.3.6.1.2.1.80
OID_ALIAS rsvpNotifications .1.3.6.1.3.71.2
OID_ALIAS Experimental .1.3.6.1.3.118
OID_ALIAS ENTERPRISES .1.3.6.1.4.1
OID_ALIAS ibm8272TsPort .1.3.6.1.4.1.2.6.66.1.2.2
OID_ALIAS imb8272TsDmns .1.3.6.1.4.1.2.6.66.1.2.3
OID_ALIAS cisco .1.3.6.1.4.1.9
OID_ALIAS cat2600 .1.3.6.1.4.1.9.1.111.1.2.1.2
OID_ALIAS cat2600-port .1.3.6.1.4.1.9.1.111.1.2.2
OID_ALIAS CiscoPro316T .1.3.6.1.4.1.9.1.147
OID_ALIAS CiscoPro316C .1.3.6.1.4.1.9.1.148
OID_ALIAS CiscoPro3116 .1.3.6.1.4.1.9.1.149
OID_ALIAS Catalyst116T .1.3.6.1.4.1.9.1.150
OID_ALIAS Catalyst116C .1.3.6.1.4.1.9.1.151
OID_ALIAS Catalyst1116 .1.3.6.1.4.1.9.1.152
OID_ALIAS Ent-.1.3.6.1.4.1.9.1.301 .1.3.6.1.4.1.9.1.301
OID_ALIAS Cisco-FastHubMibObj .1.3.6.1.4.1.9.2.11.1
OID_ALIAS ciscoStack .1.3.6.1.4.1.9.5
OID_ALIAS Ent-.1.3.6.1.4.1.9.5.7 .1.3.6.1.4.1.9.5.7
OID_ALIAS LS1010sysID .1.3.6.1.4.1.9.5.11.2
OID_ALIAS ciscoEsConfig .1.3.6.1.4.1.9.5.14.1.1
OID_ALIAS ciscoEsStack .1.3.6.1.4.1.9.5.14.2
OID_ALIAS ciscoEsPort .1.3.6.1.4.1.9.5.14.4
OID_ALIAS ciscoEsEChannel .1.3.6.1.4.1.9.5.14.6
OID_ALIAS ciscoEsVLANs .1.3.6.1.4.1.9.5.14.8
OID_ALIAS ciscoFlashMIBTrapPrefix .1.3.6.1.4.1.9.9.10.1.3
OID_ALIAS ciscoEnvMonMIBNotificationPrefix .1.3.6.1.4.1.9.9.13.3
OID_ALIAS ciscoPingMIBTrapPrefix .1.3.6.1.4.1.9.9.16.2
OID_ALIAS cisco-isdnu-ifMIB .1.3.6.1.4.1.9.9.18.2
OID_ALIAS cipCardTraps .1.3.6.1.4.1.9.9.20.1.5
OID_ALIAS ciscoRptrMIBTrapPrefix .1.3.6.1.4.1.9.9.22.3
OID_ALIAS dspuPuTraps .1.3.6.1.4.1.9.9.24.1.4.4
OID_ALIAS dspuLuTraps .1.3.6.1.4.1.9.9.24.1.5.3
OID_ALIAS dspuSapTraps .1.3.6.1.4.1.9.9.24.1.6.2
OID_ALIAS ciscoIsdnMibTrapPrefix .1.3.6.1.4.1.9.9.26.2
OID_ALIAS cisco-sdllc .1.3.6.1.4.1.9.9.28.2
OID_ALIAS rsrbNotificationPrefix .1.3.6.1.4.1.9.9.29.2
OID_ALIAS cisco-stun .1.3.6.1.4.1.9.9.30.2
OID_ALIAS cipCsnaNotificationPrefix .1.3.6.1.4.1.9.9.33.2
OID_ALIAS cisco-bstun .1.3.6.1.4.1.9.9.35.2
OID_ALIAS ciscoSyslogMIBNotificationPrefix .1.3.6.1.4.1.9.9.41.2
OID_ALIAS rttMonNotificationsPrefix .1.3.6.1.4.1.9.9.42.2
OID_ALIAS ciscoConfigManMIBNotificationPrefix .1.3.6.1.4.1.9.9.43.2
OID_ALIAS ciscoICsuDsuMIBNotificationPrefix .1.3.6.1.4.1.9.9.44.3
OID_ALIAS cieMIBTrapPrefix .1.3.6.1.4.1.9.9.52.2
OID_ALIAS cisco-channel .1.3.6.1.4.1.9.9.61.2
OID_ALIAS voice-dial-ctrl .1.3.6.1.4.1.9.9.63.2
OID_ALIAS vlan-membership .1.3.6.1.4.1.9.9.68.2
OID_ALIAS cisco-dlsw-ext .1.3.6.1.4.1.9.9.74.2
OID_ALIAS cHsrpMIBNotificationPrefix .1.3.6.1.4.1.9.9.106.2
OID_ALIAS ciscoBgp4MIB .1.3.6.1.4.1.9.9.187
OID_ALIAS cisco-sna-llc .1.3.6.1.4.1.9.10.8.2
OID_ALIAS ciscoDlswTraps .1.3.6.1.4.1.9.10.9.1.7
OID_ALIAS cisco-accounting .1.3.6.1.4.1.9.10.17.3
OID_ALIAS cPopMgmtMIBNotificationPrefix .1.3.6.1.4.1.9.10.19.2
OID_ALIAS ciscoHealthMonMIBNotificationPrefix .1.3.6.1.4.1.9.10.28.3
OID_ALIAS ciscoworks .1.3.6.1.4.1.9.14
OID_ALIAS OpenView .1.3.6.1.4.1.11.2.17.1
OID_ALIAS ipxTraps .1.3.6.1.4.1.23.2.5.5
OID_ALIAS Ent-.1.3.6.1.4.1.141.1.1.3 .1.3.6.1.4.1.141.1.1.3
OID_ALIAS kalpana-eps3config .1.3.6.1.4.1.197.3.1.1
OID_ALIAS kalpana-eps3stack .1.3.6.1.4.1.197.3.2
OID_ALIAS kalpana-eps3port .1.3.6.1.4.1.197.3.4
OID_ALIAS kalpana-eps3dmns .1.3.6.1.4.1.197.3.5
OID_ALIAS kalpana-eps3channel .1.3.6.1.4.1.197.3.6
OID_ALIAS atm-forum .1.3.6.1.4.1.353
OID_ALIAS dmiIndications .1.3.6.1.4.1.412.1.2
OID_ALIAS dmtfProcessorTable .1.3.6.1.4.1.412.2.4.5
OID_ALIAS dmtfMotherboardTable .1.3.6.1.4.1.412.2.4.6
OID_ALIAS dmtfLogicalMemoryTable .1.3.6.1.4.1.412.2.4.8
OID_ALIAS dmtfSystemCacheTable .1.3.6.1.4.1.412.2.4.9
OID_ALIAS dmtfPowerSupplyTable .1.3.6.1.4.1.412.2.4.16
OID_ALIAS dmtfCoolingDeviceTable .1.3.6.1.4.1.412.2.4.17
OID_ALIAS dmtfDisksTable .1.3.6.1.4.1.412.2.4.22
OID_ALIAS dmtfDiskControllerTable .1.3.6.1.4.1.412.2.4.25
OID_ALIAS dmtfPhysicalMemoryArrayTable .1.3.6.1.4.1.412.2.4.33
OID_ALIAS dmtfMassStoreLogicalDrivesTable .1.3.6.1.4.1.412.2.4.45
OID_ALIAS dmtfSystemResetTable .1.3.6.1.4.1.412.2.4.48
OID_ALIAS dmtfSystemHardwareSecurityTable .1.3.6.1.4.1.412.2.4.49
OID_ALIAS dmtfUPSBatteryTable .1.3.6.1.4.1.412.2.4.52
OID_ALIAS dmtfVoltageProbeTable .1.3.6.1.4.1.412.2.4.53
OID_ALIAS dmtfTemperatureProbeTable .1.3.6.1.4.1.412.2.4.54
OID_ALIAS dmtfElectricalCurrentProbeTable .1.3.6.1.4.1.412.2.4.55
OID_ALIAS dmtfPhysicalContainerGlobalTable .1.3.6.1.4.1.412.2.4.63
OID_ALIAS dmtfStructureDependencyTable .1.3.6.1.4.1.412.2.4.68
OID_ALIAS dmtfPortableBatteryTable .1.3.6.1.4.1.412.2.8.1
OID_ALIAS Grand-Junction-Networks-1 .1.3.6.1.4.1.437.1.1.1.1
OID_ALIAS Grand-Junction-Networks-2 .1.3.6.1.4.1.437.1.1.3
OID_ALIAS madgersw .1.3.6.1.4.1.494.4
OID_ALIAS ascend .1.3.6.1.4.1.529
OID_ALIAS foundry .1.3.6.1.4.1.1991
OID_ALIAS ManageX .1.3.6.1.4.1.2427
OID_ALIAS transpath .1.3.6.1.4.1.2496.1.1
OID_ALIAS juniperMIB .1.3.6.1.4.1.2636
OID_ALIAS mpls .1.3.6.1.4.1.2636.3.2
OID_ALIAS apsMIBNotifications .1.3.6.1.4.1.2636.3.24.2
OID_ALIAS jnxVpnMIB .1.3.6.1.4.1.2636.3.26
OID_ALIAS jnxTraps .1.3.6.1.4.1.2636.4
OID_ALIAS jnxRmonTraps .1.3.6.1.4.1.2636.4.3
OID_ALIAS jnxLdpTraps .1.3.6.1.4.1.2636.4.4
OID_ALIAS jnxCmNotifications .1.3.6.1.4.1.2636.4.5
OID_ALIAS jnxSonetNotifications .1.3.6.1.4.1.2636.4.6
OID_ALIAS jnxPMonNotifications .1.3.6.1.4.1.2636.4.7
OID_ALIAS jnxCollectorNotifications .1.3.6.1.4.1.2636.4.8
OID_ALIAS jnxPingNotifications .1.3.6.1.4.1.2636.4.9
OID_ALIAS jnxSpNotifications .1.3.6.1.4.1.2636.4.10
OID_ALIAS jnxBgpM2BaseScalars .1.3.6.1.4.1.2636.5.1.1.1
OID_ALIAS pcubeWorkgroup .1.3.6.1.4.1.5655.4
OID_ALIAS ggsnMIB .1.3.6.1.4.1.10923.1.1
OID_ALIAS snmpTraps .1.3.6.1.6.3.1.1.5
OID_ALIAS GGSN .2.436841.1.2
############################################################################
#
# Event formats and actions:
#
#
#
EVENT x25Restart .1.3.6.1.2.1.10.5.0.1 "Status Alarms" Warning
FORMAT X.25 Restart: $# args $*
SDESC
"This trap means the X.25 PLE sent or received a restart 
packet.  The restart that brings up the link should not 
send a x25Restart trap so the interface should send a 
linkUp trap.  Sending this trap means the agent does not 
send a linkDown and linkUp trap."
EDESC
#
#
#
EVENT x25Reset .1.3.6.1.2.1.10.5.0.2 "Status Alarms" Warning
FORMAT X.25 Reset: $# args $*
SDESC
"If the PLE sends or receives a reset, the agent should send 
an x25Reset trap."
EDESC
#
#
#
EVENT dialCtlPeerCallInfo .1.3.6.1.2.1.10.21.2.0.1 "Status Alarms" Normal
FORMAT dialCtlPeerCallInfo trap received from enterprise $E with $# arguments:  callHistoryPeerId=$1; callHistoryPeerIfIndex=$2;callHistoryLogicalIfIndex=$3; ifOperStatus=$4; callHistoryPeerAddress=$5; callHistoryPeerSubAddress=$6; callHistoryDisconnectCause=$7; callHistoryConnectTime=$8;callHistoryDisconnectTime=$9; callHistoryInfoType=$10;callHistoryCallOrigin=$11
SDESC
"This dialCtlPeerCallInformation trap/inform is sent to the manager whenever
 a successful call clears, or a failed call attemp is determined to have
 ultimately failed.  In the event that the call retry is active, then this is
 after all retry attempts have failed.  However, only one such trap is sent 
 between successful call attempts; subsequent call attemts result in no
 trap.  ifOperStatus will return the operational status of the virtual
 interface associated with the peer to whom this call was made to."
EDESC
#
#
#
EVENT dialCtlPeerCallSetup .1.3.6.1.2.1.10.21.2.0.2 "Status Alarms" Normal
FORMAT dialCtlPeerCallSetup trap received from enterprise $E with $# arguments: callActivePeerId=$1; callActivePeerIfIndex=$2;callActiveLogicalIfIndex=$3;ifOperStatus=$4;callActivePeerAddress=$5;callActivePeerSubAddress=$6;callActiveInfoType=$7;callActiveCallOrigin=$8
SDESC
"This dialCtlPeerCallSetup trap/inform is sent to the manager whenever a 
 call setup message is received or sent.  ifOperStatus will return the
 operational status of the virtual interface associated with the peer to
 whom this call was made to."
EDESC
#
#
#
EVENT frDLCIStatusChange .1.3.6.1.2.1.10.32.0.1 "Status Alarms" Warning
FORMAT Frame Relay PVC state change: frCircuitIfIndex=$1; frCircuitDlci=$2; frCircuitState=$3
SDESC
"This trap indicates that the indicated Virtual Circuit  
has changed state.  It has either been created or invalidated, 
or has toggled  between the active and inactive states."
EDESC
#
#
#
EVENT ospfVirtIfStateChang .1.3.6.1.2.1.14.16.2.1 "LOGONLY" Normal
FORMAT ospfVirtIfStateChang trap received from enterprise $E
SDESC
Long Descr.:
"An ospfIfStateChange trap signifies that there
has  been a change in the state of an OSPF vir-
tual interface.
This trap should be generated when  the  inter-
face  state  regresses  (e.g., goes from Point-
to-Point to Down) or progresses to  a  terminal
state (i.e., Point-to-Point)."
Variables:
  1: ospfRouterId
     Syntax="RouterID  (IP Address) "
     Descr="A  32-bit  integer  uniquely  identifying  the
router in the Autonomous System.

By  convention,  to  ensure  uniqueness,   this
should  default  to  the  value  of  one of the
router's IP interface addresses."
  2: ospfVirtIfAreaId
     Syntax="AreaID  (IP Address) "
     Descr="The  Transit  Area  that  the   Virtual   Link
traverses.  By definition, this is not 0.0.0.0"
  3: ospfVirtIfNeighbor
     Syntax="RouterID  (IP Address) "
     Descr="The Router ID of the Virtual Neighbor."
  4: ospfVirtIfState
     Syntax="Integer"
     Descr="OSPF virtual interface states."
EDESC
#
#
#
EVENT ospfNbrStateChange .1.3.6.1.2.1.14.16.2.2 "LOGONLY" Normal
FORMAT ospfNbrStateChange trap received from enterprise $E
SDESC
Long Descr.:
"An  ospfNbrStateChange  trap  signifies   that
there  has been a change in the state of a non-
virtual OSPF neighbor.   This  trap  should  be
generated  when  the  neighbor  state regresses
(e.g., goes from Attempt or Full  to  1-Way  or
Down)  or progresses to a terminal state (e.g.,
2-Way or Full).  When an  neighbor  transitions
from  or  to Full on non-broadcast multi-access
and broadcast networks, the trap should be gen-
erated  by the designated router.  A designated
router transitioning to Down will be  noted  by
ospfIfStateChange."
Variables:
  1: ospfRouterId
     Syntax="RouterID  (IP Address) "
     Descr="A  32-bit  integer  uniquely  identifying  the
router in the Autonomous System.

By  convention,  to  ensure  uniqueness,   this
should  default  to  the  value  of  one of the
router's IP interface addresses."
  2: ospfNbrIpAddr
     Syntax="IP Address"
     Descr="The IP address this neighbor is using  in  its
IP  Source  Address.  Note that, on addressless
links, this will not be 0.0.0.0,  but  the  ad-
dress of another of the neighbor's interfaces."
  3: ospfNbrAddressLessIndex
     Syntax="InterfaceIndex  (Integer) "
     Descr="On an interface having an  IP  Address,  zero.
On  addressless  interfaces,  the corresponding
value of ifIndex in the Internet Standard  MIB.
On  row  creation, this can be derived from the
instance."
  4: ospfNbrRtrId
     Syntax="RouterID  (IP Address) "
     Descr="A 32-bit integer (represented as a type  IpAd-
dress)  uniquely  identifying  the  neighboring
router in the Autonomous System."
  5: ospfNbrState
     Syntax="Integer"
     Descr="The State of the relationship with this Neigh-
bor."
EDESC
#
#
#
EVENT ospfVirtNbrStateChan .1.3.6.1.2.1.14.16.2.3 "LOGONLY" Normal
FORMAT ospfVirtNbrStateChange trap received from enterprise $E
SDESC
Long Descr.:
"An ospfIfStateChange trap signifies that there
has  been a change in the state of an OSPF vir-
tual neighbor.  This trap should  be  generated
when  the  neighbor state regresses (e.g., goes
from Attempt or  Full  to  1-Way  or  Down)  or
progresses to a terminal state (e.g., Full)."
Variables:
  1: ospfRouterId
     Syntax="RouterID  (IP Address) "
     Descr="A  32-bit  integer  uniquely  identifying  the
router in the Autonomous System.

By  convention,  to  ensure  uniqueness,   this
should  default  to  the  value  of  one of the
router's IP interface addresses."
  2: ospfVirtNbrArea
     Syntax="AreaID  (IP Address) "
     Descr="The Transit Area Identifier."
  3: ospfVirtNbrRtrId
     Syntax="RouterID  (IP Address) "
     Descr="A  32-bit  integer  uniquely  identifying  the
neighboring router in the Autonomous System."
  4: ospfVirtNbrState
     Syntax="Integer"
     Descr="The state of the  Virtual  Neighbor  Relation-
ship."
EDESC
#
#
#
EVENT ospfIfConfigError .1.3.6.1.2.1.14.16.2.4 "LOGONLY" Normal
FORMAT ospfIfConfigError trap received from enterprise $E
SDESC
Long Descr.:
"An ospfIfConfigError  trap  signifies  that  a
packet  has  been received on a non-virtual in-
terface  from  a  router  whose   configuration
parameters  conflict  with this router's confi-
guration parameters.  Note that the  event  op-
tionMismatch  should  cause  a  trap only if it
prevents an adjacency from forming."
Variables:
  1: ospfRouterId
     Syntax="RouterID  (IP Address) "
     Descr="A  32-bit  integer  uniquely  identifying  the
router in the Autonomous System.

By  convention,  to  ensure  uniqueness,   this
should  default  to  the  value  of  one of the
router's IP interface addresses."
  2: ospfIfIpAddress
     Syntax="IP Address"
     Descr="The IP address of this OSPF interface."
  3: ospfAddressLessIf
     Syntax="Integer"
     Descr="For the purpose of easing  the  instancing  of
addressed   and  addressless  interfaces;  This
variable takes the value 0 on  interfaces  with
IP  Addresses,  and  the corresponding value of
ifIndex for interfaces having no IP Address."
  4: ospfPacketSrc
     Syntax="IP Address"
     Descr="The IP address of an inbound packet that  can-
not be identified by a neighbor instance."
  5: ospfConfigErrorType
     Syntax="Integer"
     Descr="Potential types  of  configuration  conflicts.
Used  by the ospfConfigError and ospfConfigVir-
tError traps."
  6: ospfPacketType
     Syntax="Integer"
     Descr="OSPF packet types."
EDESC
#
#
#
EVENT ospfVirtIfConfigErro .1.3.6.1.2.1.14.16.2.5 "LOGONLY" Normal
FORMAT ospfVirtIfConfigError trap received from enterprise $E
SDESC
Long Descr.:
"An ospfConfigError trap signifies that a pack-
et  has  been  received  on a virtual interface
from a router  whose  configuration  parameters
conflict   with   this  router's  configuration
parameters.  Note that the event optionMismatch
should  cause a trap only if it prevents an ad-
jacency from forming."
Variables:
  1: ospfRouterId
     Syntax="RouterID  (IP Address) "
     Descr="A  32-bit  integer  uniquely  identifying  the
router in the Autonomous System.

By  convention,  to  ensure  uniqueness,   this
should  default  to  the  value  of  one of the
router's IP interface addresses."
  2: ospfVirtIfAreaId
     Syntax="AreaID  (IP Address) "
     Descr="The  Transit  Area  that  the   Virtual   Link
traverses.  By definition, this is not 0.0.0.0"
  3: ospfVirtIfNeighbor
     Syntax="RouterID  (IP Address) "
     Descr="The Router ID of the Virtual Neighbor."
  4: ospfConfigErrorType
     Syntax="Integer"
     Descr="Potential types  of  configuration  conflicts.
Used  by the ospfConfigError and ospfConfigVir-
tError traps."
  5: ospfPacketType
     Syntax="Integer"
     Descr="OSPF packet types."
EDESC
#
#
#
EVENT ospfIfAuthFailure .1.3.6.1.2.1.14.16.2.6 "LOGONLY" Normal
FORMAT ospfIfAuthFailure trap received from enterprise $E
SDESC
Long Descr.:
"An ospfIfAuthFailure  trap  signifies  that  a
packet  has  been received on a non-virtual in-
terface from a router whose authentication  key
or  authentication  type  conflicts  with  this
router's authentication key  or  authentication
type."
Variables:
  1: ospfRouterId
     Syntax="RouterID  (IP Address) "
     Descr="A  32-bit  integer  uniquely  identifying  the
router in the Autonomous System.

By  convention,  to  ensure  uniqueness,   this
should  default  to  the  value  of  one of the
router's IP interface addresses."
  2: ospfIfIpAddress
     Syntax="IP Address"
     Descr="The IP address of this OSPF interface."
  3: ospfAddressLessIf
     Syntax="Integer"
     Descr="For the purpose of easing  the  instancing  of
addressed   and  addressless  interfaces;  This
variable takes the value 0 on  interfaces  with
IP  Addresses,  and  the corresponding value of
ifIndex for interfaces having no IP Address."
  4: ospfPacketSrc
     Syntax="IP Address"
     Descr="The IP address of an inbound packet that  can-
not be identified by a neighbor instance."
  5: ospfConfigErrorType
     Syntax="Integer"
     Descr="Potential types  of  configuration  conflicts.
Used  by the ospfConfigError and ospfConfigVir-
tError traps."
  6: ospfPacketType
     Syntax="Integer"
     Descr="OSPF packet types."
EDESC
#
#
#
EVENT ospfVirtIfAuthFailur .1.3.6.1.2.1.14.16.2.7 "LOGONLY" Normal
FORMAT ospfVirtIfAuthFailure trap received from enterprise $E
SDESC
Long Descr.:
"An ospfVirtIfAuthFailure trap signifies that a
packet has been received on a virtual interface
from a router whose authentication key  or  au-
thentication  type conflicts with this router's
authentication key or authentication type."
Variables:
  1: ospfRouterId
     Syntax="RouterID  (IP Address) "
     Descr="A  32-bit  integer  uniquely  identifying  the
router in the Autonomous System.

By  convention,  to  ensure  uniqueness,   this
should  default  to  the  value  of  one of the
router's IP interface addresses."
  2: ospfVirtIfAreaId
     Syntax="AreaID  (IP Address) "
     Descr="The  Transit  Area  that  the   Virtual   Link
traverses.  By definition, this is not 0.0.0.0"
  3: ospfVirtIfNeighbor
     Syntax="RouterID  (IP Address) "
     Descr="The Router ID of the Virtual Neighbor."
  4: ospfConfigErrorType
     Syntax="Integer"
     Descr="Potential types  of  configuration  conflicts.
Used  by the ospfConfigError and ospfConfigVir-
tError traps."
  5: ospfPacketType
     Syntax="Integer"
     Descr="OSPF packet types."
EDESC
#
#
#
EVENT ospfIfRxBadPacket .1.3.6.1.2.1.14.16.2.8 "LOGONLY" Normal
FORMAT ospfIfRxBadPacket trap received from enterprise $E
SDESC
Long Descr.:
"An ospfIfRxBadPacket trap  signifies  that  an
OSPF  packet has been received on a non-virtual
interface that cannot be parsed."
Variables:
  1: ospfRouterId
     Syntax="RouterID  (IP Address) "
     Descr="A  32-bit  integer  uniquely  identifying  the
router in the Autonomous System.

By  convention,  to  ensure  uniqueness,   this
should  default  to  the  value  of  one of the
router's IP interface addresses."
  2: ospfIfIpAddress
     Syntax="IP Address"
     Descr="The IP address of this OSPF interface."
  3: ospfAddressLessIf
     Syntax="Integer"
     Descr="For the purpose of easing  the  instancing  of
addressed   and  addressless  interfaces;  This
variable takes the value 0 on  interfaces  with
IP  Addresses,  and  the corresponding value of
ifIndex for interfaces having no IP Address."
  4: ospfPacketSrc
     Syntax="IP Address"
     Descr="The IP address of an inbound packet that  can-
not be identified by a neighbor instance."
  5: ospfPacketType
     Syntax="Integer"
     Descr="OSPF packet types."
EDESC
#
#
#
EVENT ospfVirtIfRxBadPacke .1.3.6.1.2.1.14.16.2.9 "LOGONLY" Normal
FORMAT ospfVirtIfRxBadPacket trap from enterprise $E
SDESC
Long Descr.:
"An ospfRxBadPacket trap signifies that an OSPF
packet has been received on a virtual interface
that cannot be parsed."
Variables:
  1: ospfRouterId
     Syntax="RouterID  (IP Address) "
     Descr="A  32-bit  integer  uniquely  identifying  the
router in the Autonomous System.

By  convention,  to  ensure  uniqueness,   this
should  default  to  the  value  of  one of the
router's IP interface addresses."
  2: ospfVirtIfAreaId
     Syntax="AreaID  (IP Address) "
     Descr="The  Transit  Area  that  the   Virtual   Link
traverses.  By definition, this is not 0.0.0.0"
  3: ospfVirtIfNeighbor
     Syntax="RouterID  (IP Address) "
     Descr="The Router ID of the Virtual Neighbor."
  4: ospfPacketType
     Syntax="Integer"
     Descr="OSPF packet types."
EDESC
#
#
#
EVENT ospfTxRetransmit .1.3.6.1.2.1.14.16.2.10 "LOGONLY" Normal
FORMAT ospfTxRetransmit trap received from enterprise $E
SDESC
Long Descr.:
"An ospfTxRetransmit  trap  signifies  than  an
OSPF  packet  has  been retransmitted on a non-
virtual interface.  All packets that may be re-
transmitted  are associated with an LSDB entry.
The LS type, LS ID, and Router ID are  used  to
identify the LSDB entry."
Variables:
  1: ospfRouterId
     Syntax="RouterID  (IP Address) "
     Descr="A  32-bit  integer  uniquely  identifying  the
router in the Autonomous System.

By  convention,  to  ensure  uniqueness,   this
should  default  to  the  value  of  one of the
router's IP interface addresses."
  2: ospfIfIpAddress
     Syntax="IP Address"
     Descr="The IP address of this OSPF interface."
  3: ospfAddressLessIf
     Syntax="Integer"
     Descr="For the purpose of easing  the  instancing  of
addressed   and  addressless  interfaces;  This
variable takes the value 0 on  interfaces  with
IP  Addresses,  and  the corresponding value of
ifIndex for interfaces having no IP Address."
  4: ospfNbrRtrId
     Syntax="RouterID  (IP Address) "
     Descr="A 32-bit integer (represented as a type  IpAd-
dress)  uniquely  identifying  the  neighboring
router in the Autonomous System."
  5: ospfPacketType
     Syntax="Integer"
     Descr="OSPF packet types."
  6: ospfLsdbType
     Syntax="Integer"
     Descr="The type  of  the  link  state  advertisement.
Each  link state type has a separate advertise-
ment format."
  7: ospfLsdbLsid
     Syntax="IP Address"
     Descr="The Link State ID is an LS Type Specific field
containing either a Router ID or an IP Address;
it identifies the piece of the  routing  domain
that is being described by the advertisement."
  8: ospfLsdbRouterId
     Syntax="RouterID  (IP Address) "
     Descr="The 32 bit number that uniquely identifies the
originating router in the Autonomous System."
EDESC
#
#
#
EVENT ospfVirtIfTxRetransm .1.3.6.1.2.1.14.16.2.11 "LOGONLY" Normal
FORMAT ospfVirtIfTxRetransmit trap received from enterprise $E
SDESC
Long Descr.:
"An ospfTxRetransmit  trap  signifies  than  an
OSPF packet has been retransmitted on a virtual
interface.  All packets that may be retransmit-
ted  are  associated with an LSDB entry. The LS
type, LS ID, and Router ID are used to identify
the LSDB entry."
Variables:
  1: ospfRouterId
     Syntax="RouterID  (IP Address) "
     Descr="A  32-bit  integer  uniquely  identifying  the
router in the Autonomous System.

By  convention,  to  ensure  uniqueness,   this
should  default  to  the  value  of  one of the
router's IP interface addresses."
  2: ospfVirtIfAreaId
     Syntax="AreaID  (IP Address) "
     Descr="The  Transit  Area  that  the   Virtual   Link
traverses.  By definition, this is not 0.0.0.0"
  3: ospfVirtIfNeighbor
     Syntax="RouterID  (IP Address) "
     Descr="The Router ID of the Virtual Neighbor."
  4: ospfPacketType
     Syntax="Integer"
     Descr="OSPF packet types."
  5: ospfLsdbType
     Syntax="Integer"
     Descr="The type  of  the  link  state  advertisement.
Each  link state type has a separate advertise-
ment format."
  6: ospfLsdbLsid
     Syntax="IP Address"
     Descr="The Link State ID is an LS Type Specific field
containing either a Router ID or an IP Address;
it identifies the piece of the  routing  domain
that is being described by the advertisement."
  7: ospfLsdbRouterId
     Syntax="RouterID  (IP Address) "
     Descr="The 32 bit number that uniquely identifies the
originating router in the Autonomous System."
EDESC
#
#
#
EVENT ospfOriginateLsa .1.3.6.1.2.1.14.16.2.12 "LOGONLY" Normal
FORMAT ospfOriginateLsa trap received from enterprise $E
SDESC
Long Descr.:
"An ospfOriginateLsa trap signifies that a  new
LSA  has  been originated by this router.  This
trap should not be invoked for simple refreshes
of  LSAs  (which happesn every 30 minutes), but
instead will only be invoked  when  an  LSA  is
(re)originated due to a topology change.  Addi-
tionally, this trap does not include LSAs  that
are  being  flushed  because  they have reached
MaxAge."
Variables:
  1: ospfRouterId
     Syntax="RouterID  (IP Address) "
     Descr="A  32-bit  integer  uniquely  identifying  the
router in the Autonomous System.

By  convention,  to  ensure  uniqueness,   this
should  default  to  the  value  of  one of the
router's IP interface addresses."
  2: ospfLsdbAreaId
     Syntax="AreaID  (IP Address) "
     Descr="The 32 bit identifier of the Area  from  which
the LSA was received."
  3: ospfLsdbType
     Syntax="Integer"
     Descr="The type  of  the  link  state  advertisement.
Each  link state type has a separate advertise-
ment format."
  4: ospfLsdbLsid
     Syntax="IP Address"
     Descr="The Link State ID is an LS Type Specific field
containing either a Router ID or an IP Address;
it identifies the piece of the  routing  domain
that is being described by the advertisement."
  5: ospfLsdbRouterId
     Syntax="RouterID  (IP Address) "
     Descr="The 32 bit number that uniquely identifies the
originating router in the Autonomous System."
EDESC
#
#
#
EVENT ospfMaxAgeLsa .1.3.6.1.2.1.14.16.2.13 "LOGONLY" Normal
FORMAT ospfMaxAgeLsa trap received from enterprise $E
SDESC
Long Descr.:
"An ospfMaxAgeLsa trap signifies  that  one  of
the LSA in the router's link-state database has
aged to MaxAge."
Variables:
  1: ospfRouterId
     Syntax="RouterID  (IP Address) "
     Descr="A  32-bit  integer  uniquely  identifying  the
router in the Autonomous System.

By  convention,  to  ensure  uniqueness,   this
should  default  to  the  value  of  one of the
router's IP interface addresses."
  2: ospfLsdbAreaId
     Syntax="AreaID  (IP Address) "
     Descr="The 32 bit identifier of the Area  from  which
the LSA was received."
  3: ospfLsdbType
     Syntax="Integer"
     Descr="The type  of  the  link  state  advertisement.
Each  link state type has a separate advertise-
ment format."
  4: ospfLsdbLsid
     Syntax="IP Address"
     Descr="The Link State ID is an LS Type Specific field
containing either a Router ID or an IP Address;
it identifies the piece of the  routing  domain
that is being described by the advertisement."
  5: ospfLsdbRouterId
     Syntax="RouterID  (IP Address) "
     Descr="The 32 bit number that uniquely identifies the
originating router in the Autonomous System."
EDESC
#
#
#
EVENT ospfLsdbOverflow .1.3.6.1.2.1.14.16.2.14 "LOGONLY" Normal
FORMAT ospfLsdbOverflow trap received from enterprise $E
SDESC
Long Descr.:
"An ospfLsdbOverflow trap  signifies  that  the
number of LSAs in the router's link-state data-
base has exceeded ospfExtLsdbLimit."
Variables:
  1: ospfRouterId
     Syntax="RouterID  (IP Address) "
     Descr="A  32-bit  integer  uniquely  identifying  the
router in the Autonomous System.

By  convention,  to  ensure  uniqueness,   this
should  default  to  the  value  of  one of the
router's IP interface addresses."
  2: ospfExtLsdbLimit
     Syntax="Integer (-1..'7FFFFFFF'h)"
     Descr="The  maximum   number   of   non-default   AS-
external-LSAs entries that can be stored in the
link-state database.  If the value is -1,  then
there is no limit.

When the number of non-default AS-external-LSAs
in   a  router's  link-state  database  reaches
ospfExtLsdbLimit, the router  enters  Overflow-
State.   The   router  never  holds  more  than
ospfExtLsdbLimit  non-default  AS-external-LSAs
in  its  database. OspfExtLsdbLimit MUST be set
identically in all routers attached to the OSPF
backbone  and/or  any regular OSPF area. (i.e.,
OSPF stub areas and NSSAs are excluded)."
EDESC
#
#
#
EVENT ospfLsdbApproachingO .1.3.6.1.2.1.14.16.2.15 "LOGONLY" Normal
FORMAT ospfLsdbApproachingOverflow trap received from enterprise $E
SDESC
Long Descr.:
"An ospfLsdbApproachingOverflow trap  signifies
that  the  number of LSAs in the router's link-
state database has exceeded ninety  percent  of
ospfExtLsdbLimit."
Variables:
  1: ospfRouterId
     Syntax="RouterID  (IP Address) "
     Descr="A  32-bit  integer  uniquely  identifying  the
router in the Autonomous System.

By  convention,  to  ensure  uniqueness,   this
should  default  to  the  value  of  one of the
router's IP interface addresses."
  2: ospfExtLsdbLimit
     Syntax="Integer (-1..'7FFFFFFF'h)"
     Descr="The  maximum   number   of   non-default   AS-
external-LSAs entries that can be stored in the
link-state database.  If the value is -1,  then
there is no limit.

When the number of non-default AS-external-LSAs
in   a  router's  link-state  database  reaches
ospfExtLsdbLimit, the router  enters  Overflow-
State.   The   router  never  holds  more  than
ospfExtLsdbLimit  non-default  AS-external-LSAs
in  its  database. OspfExtLsdbLimit MUST be set
identically in all routers attached to the OSPF
backbone  and/or  any regular OSPF area. (i.e.,
OSPF stub areas and NSSAs are excluded)."
EDESC
#
#
#
EVENT ospfIfStateChange .1.3.6.1.2.1.14.16.2.16 "LOGONLY" Normal
FORMAT ospfIfStateChange trap received from enterprise $E
SDESC
Long Descr.:
"An ospfIfStateChange trap signifies that there
has been a change in the state of a non-virtual
OSPF interface. This trap should  be  generated
when  the interface state regresses (e.g., goes
from Dr to Down) or progresses  to  a  terminal
state  (i.e.,  Point-to-Point, DR Other, Dr, or
Backup)."
Variables:
  1: ospfRouterId
     Syntax="RouterID  (IP Address) "
     Descr="A  32-bit  integer  uniquely  identifying  the
router in the Autonomous System.

By  convention,  to  ensure  uniqueness,   this
should  default  to  the  value  of  one of the
router's IP interface addresses."
  2: ospfIfIpAddress
     Syntax="IP Address"
     Descr="The IP address of this OSPF interface."
  3: ospfAddressLessIf
     Syntax="Integer"
     Descr="For the purpose of easing  the  instancing  of
addressed   and  addressless  interfaces;  This
variable takes the value 0 on  interfaces  with
IP  Addresses,  and  the corresponding value of
ifIndex for interfaces having no IP Address."
  4: ospfIfState
     Syntax="Integer"
     Descr="The OSPF Interface State."
EDESC
#
#
#
EVENT bgpEstablished .1.3.6.1.2.1.15.0.1 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The BGP Established event is generated when
the BGP FSM enters the ESTABLISHED state. "
Variables:
  1: bgpPeerRemoteAddr
     Syntax="IP Address"
     Descr="The remote IP address of this entry's BGP
peer."
  2: bgpPeerLastError
     Syntax="Octet String (SIZE(2))"
     Descr="The last error code and subcode seen by this
peer on this connection. If no error has
occurred, this field is zero. Otherwise, the
first byte of this two byte OCTET STRING
contains the error code; the second contains
the subcode."
  3: bgpPeerState
     Syntax="Integer"
     Descr="The bgp peer connection state. "
EDESC
#
#
#
EVENT bgpBackwardTransition .1.3.6.1.2.1.15.0.2 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The BGPBackwardTransition Event is generated
when the BGP FSM moves from a higher numbered
state to a lower numbered state."
Variables:
  1: bgpPeerRemoteAddr
     Syntax="IP Address"
     Descr="The remote IP address of this entry's BGP
peer."
  2: bgpPeerLastError
     Syntax="Octet String (SIZE(2))"
     Descr="The last error code and subcode seen by this
peer on this connection. If no error has
occurred, this field is zero. Otherwise, the
first byte of this two byte OCTET STRING
contains the error code; the second contains
the subcode."
  3: bgpPeerState
     Syntax="Integer"
     Descr="The bgp peer connection state. "
EDESC
#
#
#
EVENT bgp4Established .1.3.6.1.2.1.15.7.0.1 "Status Alarms" Normal
FORMAT bgpEstablished trap received from enterprise $E with $# args: bgpPeerLastError=$1; bgpPeerState=$2
SDESC
"The BGP Established event is generated when the BGP FSM enters 
the ESTABLISHED state."
EDESC
#
#
#
EVENT bgp4BackwardTranstion .1.3.6.1.2.1.15.7.0.2 "Status Alarms" Normal
FORMAT bgpBackwardTranstion trap received from enterprise $E with $# args:bgpPeerLastError=$1; bgpPeerState=$2
SDESC
"The BGPBackwardTransition Event is generated when the BGP FSM 
moves from a higher numbered state to a lower numbered state."
EDESC
#
#
#
EVENT J20-RMON-RISING-ALARM .1.3.6.1.2.1.16.0.1 "J20-GGSN" Major
FORMAT ALARM OPEN: GGSN charging, low disk space for CDRs, less than 25% available
NODES MIOT-G01.ippubbl.wind MIOT-U01.ippubbl.wind RMCC-G01.ippubbl.wind RMID-U01.ippubbl.wind
SDESC
This event is sent when an RMON device exceeds a
preconfigured threshold.
EDESC
#
#
#
EVENT RMON_Rise_Alarm .1.3.6.1.2.1.16.0.1 "Threshold Alarms" Warning
FORMAT RMON Rising Alarm: $2 exceeded threshold $5; value = $4. (Sample type = $3; alarm index = $1)
SDESC
This event is sent when an RMON device exceeds a
preconfigured threshold.
EDESC
#
#
#
EVENT J20-RMON-Falling-Alarm .1.3.6.1.2.1.16.0.2 "J20-GGSN" Normal
FORMAT ALARM CLEARED: GGSN charging, disk space for CDRs, more than 25% available
NODES MIOT-G01.ippubbl.wind MIOT-U01.ippubbl.wind RMCC-G01.ippubbl.wind RMID-U01.ippubbl.wind
SDESC
This event is sent when an RMON device falls below
a preconfigured threshold.
EDESC
#
#
#
EVENT RMON_Falling_Alarm .1.3.6.1.2.1.16.0.2 "Threshold Alarms" Warning
FORMAT RMON Falling Alarm: $2 fell below threshold $5; value = $4. (Sample type = $3; alarm index = $1)
SDESC
This event is sent when an RMON device falls below
a preconfigured threshold.
EDESC
#
#
#
EVENT RMON_Packet_Match .1.3.6.1.2.1.16.0.3 "Status Alarms" Normal
FORMAT RMON Packet Match trap: Matched channel index #$1 ($3); match count at $2
SDESC
This event is sent when an RMON device matches a
channel index.
EDESC
#
#
#
EVENT newRoot .1.3.6.1.2.1.17.0.1 "Status Alarms" Warning
FORMAT Spanning tree root change from enterprise $E
SDESC
"The newRoot trap indicates that the sending agent has become 
the new root of the Spanning Tree; the trap is sent by a bridge 
soon after its election as the new root, e.g., upon expiration
of the Topology Change Timer immediately subsequent to its election.
EDESC
#
#
#
EVENT topologyChange .1.3.6.1.2.1.17.0.2 "Status Alarms" Warning
FORMAT Spanning tree topology change from enterprise $E
SDESC
"A topologyChange trap is sent by a bridge when any of its configured 
ports transitions from the Learning state to the Forwarding state, or 
from the Forwarding state to the Blocking state.  The trap is not sent 
if a newRoot trap is sent for the same transition.
EDESC
#
#
#
EVENT rptrHealth .1.3.6.1.2.1.22.0.1 "Status Alarms" Warning
FORMAT Repeater health status change from enterprise $E with args: rptrOperStatus=$1
SDESC
"The rptrHealth trap conveys information related to the operational 
status of the repeater.  This trap is sent either when the value of
rptrOperStatus changes, or upon completion of a non-disruptive test.
 
The rptrHealth trap must contain the rptrOperStatus object.  
The agent may optionally include the rptrHealthText object in the 
varBind list.  See the rptrOperStatus and rptrHealthText objects 
for descriptions of the information that is sent.
EDESC
#
#
#
EVENT rptrGroupChange .1.3.6.1.2.1.22.0.2 "Status Alarms" Normal
FORMAT rptrGroupChange trap received from enterprise $E with $# args: rptrGroupIndex=$1
SDESC
"This trap is sent when a change occurs in the group structure of a 
repeater.  This occurs only when a group is logically or physically 
removed from or added to a repeater.  The varBind list contains the 
identifier of the group that was removed or added.
EDESC
#
#
#
EVENT rptrResetEvent .1.3.6.1.2.1.22.0.3 "Status Alarms" Warning
FORMAT rptrResetEvent trap received from enterprise $E with $# args:rptrOperStatus=$1
SDESC
"The rptrResetEvent trap conveys information related to the 
operational status of the repeater.  This trap is sent on 
completion of a repeater reset action.  A repeater reset action is 
defined as an a transition to the START state of Fig 9-2 in section 
9 [IEEE 802.3 Std], when triggered by a management command 
(e.g., an SNMP Set on the rptrReset object).
 
The rptrResetEvent trap is not sent when the agent restarts and 
sends an SNMP coldStart or warmStart trap.  However, it is 
recommended that a repeater agent send the rptrOperStatus object as 
an optional object with its coldStart and warmStart trap PDUs.
EDESC
#
#
#
EVENT snaLuStateChangeTrap .1.3.6.1.2.1.34.1.1.5.0.1 "Status Alarms" Normal
FORMAT snaLuStateChangeTrap received from enterprise $E with $# arguments: snaLuOperName=$1; snaLuOperSnaName=$2; snaLuOperState=$3
SDESC
"This trap indicates that the operational state (i.e., snaLuOperState value)
 of the LU has changed. The value of snaLuOperName indicates the name of the LU. The value of snaLuOperSnaName indicates the SNA name of LU. The value of 
 snaLuOperState indicates the current state after change."
EDESC
#
#
#
EVENT snaLuSessnBindFail .1.3.6.1.2.1.34.1.1.5.0.2 "Status Alarms" Normal
FORMAT snaLuSessnBindFailure trap received from enterprise $E with $# arguments: snaLuSessnLocalApplName=$1; snaLuSessnRemoteLuName=$2; snaLuSessnOperState=$3; snaLuSessnSenseData=$4
SDESC
"This trap indicates the failure of a BIND. The value of 
 snaLuSessnLocalApplName indicates the local application name. The value
 of snaLuSessnPartnerName indicates the partner name. The value of 
 snaLuSessnOperState indicates the current state after change. The value
 of snaLuSessnBindFailureReason indicates the failure reason. The Agent
 should not generate more than 1 trap of this type per minute to minimize
 the level of management traffic on the network."
EDESC
#
#
#
EVENT snaNodeStateChange .1.3.6.1.2.1.34.1.1.10.0.1 "Status Alarms" Normal
FORMAT snaNodeStateChange trap received from enterprise $E with $# arguments: snaNodeOperName=$1; snaNodeOperState=$2
SDESC
"This trap indicates that the operational state (i.e., value of the
 snaNodeOperState object) of a Node has changed. The following variables 
 are returned: snaNodeOperName - current name of the Node, with the instance
 identifying the Node; and, snaNodeOperState - current state after the change."
EDESC
#
#
#
EVENT snaNodeActFailTrap .1.3.6.1.2.1.34.1.1.10.0.2 "Status Alarms" Normal
FORMAT snaNodeActFailTrap received from enterprise $E with $# arguments: snaNodeOperName=$1; snaNodeOperState=$2
SDESC
"This trap indicates a Node activation failure. The value of snaNodeOperState
 indicates the current state after the activation attempt. The value of
 snaNodeOperActFailureReason indicates the failure reason."
EDESC
#
#
#
EVENT sdlcPortStatusChange .1.3.6.1.2.1.41.1.3.0.1 "Status Alarms" Warning
FORMAT sdlcPortStatusChange trap received from enterprise $E with $# args:ifIndex=$1; ifAdminStatus=$2; ifOperStatus=$3; sdlcPortOperLastFailTime=$4; sdlcPortOperLastFailCause=$5
SDESC
"This trap indicates that the state of an SDLC port has transitioned 
to active or inactive."
EDESC
#
#
#
EVENT sdlcLSStatusChange .1.3.6.1.2.1.41.1.3.0.2 "Status Alarms" Warning
FORMAT sdlcLSStatusChange trap received from enterprise $E with $# args:ifIndex=$1; sdlcLSAddress=$2; sdlcLSOperState=$3; sdlcLSAdminState=$4; sdlcLSOperLastFailTime=$5; sdlcLSOperLastFailCause=$6; sdlcLSOperLastFailFRMRInfo=$7; sdlcLSOperLastFailCtrlIn=$8; sdlcLSOperLastFailCtrlOut=$9; sdlcLSOperLastFailREPLYTOs=$10
SDESC
"This trap indicates that the state of an SDLC link station has 
transitioned to contacted or discontacted."
EDESC
#
#
#
EVENT dlswTrapCntlTConnPartnerReject .1.3.6.1.2.1.46.1.0.1 "Status Alarms" Warning
FORMAT dlswTrapCntlTConnPartnerReject trap received from enterprise $E with $# args: dlswTConnOperTDomain=$1;dlswTConnOperRemoteTAddr=$2
SDESC
"The dlswTrapCntlTConnPartnerReject trap is sent each time a transport
 connection is rejected by a partner DLSw during Capabilities Exchanges. 
 The emission of this trap is controlled by dlswTrapCntlTConnPartnerReject."
EDESC
#
#
#
EVENT dlswTrapTConnProtViolation .1.3.6.1.2.1.46.1.0.2 "Status Alarms" Warning
FORMAT dlswTrapTConnProtViolation trap received from enterprise $E with $# args: dlswTConnOperTDomain=$1;dlswTConnOperRemoteTAddr=$2
SDESC
"The dlswTrapTConnProtViolation trap is sent each time a protocol violation is
detected for a transport connection.  The emission of this trap is controlled 
by dlswTrapCntlTConnProtViolation."
EDESC
#
#
#
EVENT dlswTrapTConnUp .1.3.6.1.2.1.46.1.0.3 "Status Alarms" Warning
FORMAT dlswTrapTConnUp trap received from enterprise $E with $# args: dlswTConnOperTDomain=$1;dlswTConnOperRemoteTAddr=$2
SDESC
"The dlswTrapTConnUp trap is sent each time a transport connection enters
 `connected' state.  The emission of this trap is controlled by
  dlswTrapCntlTConn."
EDESC
#
#
#
EVENT dlswTrapTConnDown .1.3.6.1.2.1.46.1.0.4 "Status Alarms" Warning
FORMAT dlswTrapTConnDown trap received from enterprise $E with $# args: dlswTConnOperTDomain=$1; dlswTConnOperRemoteTAddr=$2
SDESC
"The dlswTrapTConnDown trap is sent each time a transport connection enters 
`disconnected' state.  The emission of this trap is controlled by
 dlswTrapCntlTConn."
EDESC
#
#
#
EVENT dlswTrapCircuitUp .1.3.6.1.2.1.46.1.0.5 "Status Alarms" Warning
FORMAT dlswTrapCircuitUp trap received from enterprise $E with $# args: dlswCircuitS1Mac=$1;dlswCircuitS1Sap=$2;dlswCircuitS2Mac=$3;dlswCircuitS2Sap=$4
SDESC
"The dlswTrapCircuitUp trap is sent each time a circuit enters `connected'
 state. The emission of this trap is controlled by dlswTrapCntlCircuit."
EDESC
#
#
#
EVENT dlswTrapCircuitDown .1.3.6.1.2.1.46.1.0.6 "Status Alarms" Warning
FORMAT dlswTrapCircuitDown trap received from enterprise $E with $# args: dlswCircuitS1Mac=$1;dlswCircuitS1Sap=$2;dlswCircuitS2Mac=$3;dlswCircuitS2Sap=$4
SDESC
"The dlswTrapCircuitDown trap is sent each time a circuit enters `disconnected'
 state.  The emission of this trap is controlled by dlswTrapCntlCircuit."
EDESC
#
#
#
EVENT rcVrrpTrapNewMaster .1.3.6.1.2.1.46.1.3.0.1 "Status Alarms" Normal
FORMAT rcVrrp New Master - vrid $2, ifIndex=$1
SDESC
Long Descr.:
"The newMaster trap indicates that the sending agent
has transitioned from 'Backup' state to 'Master' state."
Variables:
  1: ifIndex
     Syntax="InterfaceIndex  (Integer) (1..2147483647)"
     Descr="A unique value, greater than zero, for each interface.  It
is recommended that values are assigned contiguously
starting from 1.  The value for each interface sub-layer
must remain constant at least from one re-initialization of
the entity's network management system to the next re-
initialization."
  2: rcVrrpOperVrId
     Syntax="RcVrId  (Integer) (1..255)"
     Descr="This object contains the Virtual Router Identifier (VRID)."
  3: rcVrrpOperVirtualMacAddr
     Syntax="MacAddress  (Octet String) (SIZE(6))"
     Descr="The virtual MAC address of the virtual router. This is derived
as follows: 00-00-5E-00-01-<VRID>.

Where the first three octets consist of the IANA's OUI; The
next two octets indicate the address block of the VRRP protocol;
and the remaining octets consist of the VRID.

Although this object can be derived from the 'vrrpOperVrId'
object, it is included here, for completeness, so that it
is easily obtainable by a management application and can be
included in VRRP-related SNMP traps."
EDESC
#
#
#
EVENT rcVrrpTrapAuthFailure .1.3.6.1.2.1.46.1.3.0.2 "LOGONLY" Normal
FORMAT rcVrrpTrapAuthFailure: $*
SDESC
Long Descr.:
"A rcVrrpAuthFailure trap signifies that a packet has
been received from a router whose authentication key
or authentication type conflicts with this router's
authentication key or authentication type. Implementation
of this trap is optional."
Variables:
  1: ifIndex
     Syntax="InterfaceIndex  (Integer) (1..2147483647)"
     Descr="A unique value, greater than zero, for each interface.  It
is recommended that values are assigned contiguously
starting from 1.  The value for each interface sub-layer
must remain constant at least from one re-initialization of
the entity's network management system to the next re-
initialization."
  2: rcVrrpOperVrId
     Syntax="RcVrId  (Integer) (1..255)"
     Descr="This object contains the Virtual Router Identifier (VRID)."
  3: rcVrrpTrapPacketSrc
     Syntax="IP Address"
     Descr="The IP address of an inbound VRRP packet. Used by
rcVrrpTrapAuthFailure trap."
  4: rcVrrpTrapConfigErrorType
     Syntax="Integer"
     Descr="Potential types of configuration conflicts.
Used by rcVrrpAuthFailure trap."
EDESC
#
#
#
EVENT rcVrrpTrapStateTransition .1.3.6.1.2.1.46.1.3.0.3 "LOGONLY" Normal
FORMAT rcVrrpTrapStateTransition: $*
SDESC
Long Descr.:
"A rcVrrpTrapStateTransition trap signifies a state
transition has occurred on a particular rcVrrp interface.
Implementation of this trap is optional.  'vrrpOperIpAddr'
contains the IP address of the rcVrrp interface while
'ipAdEntAddr' contains the IP address assigned to
physical interface."
Variables:
  1: ifIndex
     Syntax="InterfaceIndex  (Integer) (1..2147483647)"
     Descr="A unique value, greater than zero, for each interface.  It
is recommended that values are assigned contiguously
starting from 1.  The value for each interface sub-layer
must remain constant at least from one re-initialization of
the entity's network management system to the next re-
initialization."
  2: rcVrrpTrapStateTransitionType
     Syntax="Integer"
     Descr="Potential types of state transitions.
Used by rcVrrpTrapStateTransition trap."
  3: rcVrrpTrapStateTransitionCause
     Syntax="Integer"
     Descr="Potential types of causes that will
generate a rcVrrpTrapStateTransition trap."
  4: rcVrrpOperVrId
     Syntax="RcVrId  (Integer) (1..255)"
     Descr="This object contains the Virtual Router Identifier (VRID)."
  5: rcVrrpOperIpAddr
     Syntax="IP Address"
     Descr="The assigned IP addresses that a virtual router is responsible
for backing up."
  6: ipAdEntAddr
     Syntax="IP Address"
     Descr="The IP address to which this entry's addressing information
pertains."
EDESC
#
#
#
EVENT entConfigChange .1.3.6.1.2.1.47.2.0.1 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An entConfigChange notification is generated when the value
of entLastChangeTime changes. It can be utilized by an NMS
to trigger logical/physical entity table maintenance polls.

An agent should not generate more than one entConfigChange
'notification-event' in a given time interval (five seconds
is the suggested default).  A 'notification-event' is the
transmission of a single trap or inform PDU to a list of
notification destinations.

If additional configuration changes occur within the
throttling period, then notification-events for these
changes should be suppressed by the agent until the current
throttling period expires.  At the end of a throttling
period, one notification-event should be generated if any
configuration changes occurred since the start of the
throttling period. In such a case, another throttling period
is started right away.

An NMS should periodically check the value of
entLastChangeTime to detect any missed entConfigChange
notification-events, e.g., due to throttling or transmission
loss."
EDESC
#
#
#
EVENT vrrpTrapNewMaster .1.3.6.1.2.1.68.0.1 "Status Alarms" Normal
FORMAT vrrpTrapNewMaster on $1
SDESC
Long Descr.:
"The newMaster trap indicates that the sending agent
has transitioned to 'Master' state."
Variables:
  1: vrrpOperMasterIpAddr
     Syntax="IP Address"
     Descr="The master router's real (primary) IP address. This is
the IP address listed as the source in VRRP advertisement
last received by this virtual router."
EDESC
#
#
#
EVENT vrrpTrapAuthFailure .1.3.6.1.2.1.68.0.2 "LOGONLY" Normal
FORMAT vrrpTrapAuthFailure - $*
SDESC
Long Descr.:
"A vrrpAuthFailure trap signifies that a packet has
been received from a router whose authentication key
or authentication type conflicts with this router's
authentication key or authentication type. Implementation
of this trap is optional."
Variables:
  1: vrrpTrapPacketSrc
     Syntax="IP Address"
     Descr="The IP address of an inbound VRRP packet. Used by
vrrpTrapAuthFailure trap."
  2: vrrpTrapAuthErrorType
     Syntax="Integer"
     Descr="Potential types of configuration conflicts.
Used by vrrpAuthFailure trap."
EDESC
#
#
#
EVENT pingProbeFailed .1.3.6.1.2.1.80.0.1 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"Generated when a probe failure is detected when the
corresponding pingCtlTrapGeneration object is set to
probeFailure(0) subject to the value of
pingCtlTrapProbeFailureFilter.  The object
pingCtlTrapProbeFailureFilter can be used to specify the
number of successive probe failures that are required
before this notification can be generated."
Variables:
  1: pingCtlTargetAddressType
	   Syntax="InetAddressType"
     Descr="Specifies the type of host address to be used at a remote
host for performing a ping operation."
  2: pingCtlTargetAddress
	   Syntax="InetAddress"
     Descr="Specifies the host address to be used at a remote host for
performing a ping operation.  The host address type is
determined by the object value of corresponding
pingCtlTargetAddressType.
A value for this object MUST be set prior to transitioning
its corresponding pingCtlEntry to active(1) via
pingCtlRowStatus."
  3: pingResultsOperStatus
	   Syntax="Integer"
     Descr="Reflects the operational state of a pingCtlEntry:
enabled(1)   - Test is active.
disabled(2)  - Test has stopped."
  4: pingResultsIpTargetAddressType
	   Syntax="InetAddressType"
     Descr="This objects indicates the type of address stored
in the corresponding pingResultsIpTargetAddress
object."
  5: pingResultsIpTargetAddress
	   Syntax="InetAddress"
     Descr="This objects reports the IP address associated
with a pingCtlTargetAddress value when the destination
address is specified as a DNS name.  The value of
this object should be a zero length octet string
when a DNS name is not specified or when a
specified DNS name fails to resolve."
  6: pingResultsMinRtt
	   Syntax="Unsigned32"
     Descr="The minimum ping round-trip-time (RTT) received.  A value
of 0 for this object implies that no RTT has been received."
     Units="milliseconds"
  7: pingResultsMaxRtt
	   Syntax="Unsigned32"
     Descr="The maximum ping round-trip-time (RTT) received.  A value
of 0 for this object implies that no RTT has been received."
     Units="milliseconds"
  8: pingResultsAverageRtt
	   Syntax="Unsigned32"
     Descr="The current average ping round-trip-time (RTT)."
     Units="milliseconds"
  9: pingResultsProbeResponses
	   Syntax="Unsigned32"
     Descr="Number of responses received for the corresponding
pingCtlEntry and pingResultsEntry.  The value of this object
MUST be reported as 0 when no probe responses have been
received."
     Units="responses"
 10: pingResultsSentProbes
	   Syntax="Unsigned32"
     Descr="The value of this object reflects the number of probes sent
for the corresponding pingCtlEntry and pingResultsEntry.
The value of this object MUST be reported as 0 when no probes
have been sent."
     Units="probes"
 11: pingResultsRttSumOfSquares
	   Syntax="Unsigned32"
     Descr="This object contains the sum of the squares for all ping
responses received.  Its purpose is to enable standard
deviation calculation.  The value of this object MUST
be reported as 0 when no ping responses have been
received."
     Units="milliseconds"
 12: pingResultsLastGoodProbe
	   Syntax="DateAndTime  (Octet String) (SIZE(8|11))"
     Descr="Date and time when the last response was received for
a probe."
EDESC
#
#
#
EVENT pingTestFailed .1.3.6.1.2.1.80.0.2 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"Generated when a ping test is determined to have failed
when the corresponding pingCtlTrapGeneration object is
set to testFailure(1).  In this instance
pingCtlTrapTestFailureFilter should specify the number of
probes in a test required to have failed in order to
consider the test as failed."
Variables:
  1: pingCtlTargetAddressType
	   Syntax="InetAddressType"
     Descr="Specifies the type of host address to be used at a remote
host for performing a ping operation."
  2: pingCtlTargetAddress
	   Syntax="InetAddress"
     Descr="Specifies the host address to be used at a remote host for
performing a ping operation.  The host address type is
determined by the object value of corresponding
pingCtlTargetAddressType.
A value for this object MUST be set prior to transitioning
its corresponding pingCtlEntry to active(1) via
pingCtlRowStatus."
  3: pingResultsOperStatus
	   Syntax="Integer"
     Descr="Reflects the operational state of a pingCtlEntry:
enabled(1)   - Test is active.
disabled(2)  - Test has stopped."
  4: pingResultsIpTargetAddressType
	   Syntax="InetAddressType"
     Descr="This objects indicates the type of address stored
in the corresponding pingResultsIpTargetAddress
object."
  5: pingResultsIpTargetAddress
	   Syntax="InetAddress"
     Descr="This objects reports the IP address associated
with a pingCtlTargetAddress value when the destination
address is specified as a DNS name.  The value of
this object should be a zero length octet string
when a DNS name is not specified or when a
specified DNS name fails to resolve."
  6: pingResultsMinRtt
	   Syntax="Unsigned32"
     Descr="The minimum ping round-trip-time (RTT) received.  A value
of 0 for this object implies that no RTT has been received."
     Units="milliseconds"
  7: pingResultsMaxRtt
	   Syntax="Unsigned32"
     Descr="The maximum ping round-trip-time (RTT) received.  A value
of 0 for this object implies that no RTT has been received."
     Units="milliseconds"
  8: pingResultsAverageRtt
	   Syntax="Unsigned32"
     Descr="The current average ping round-trip-time (RTT)."
     Units="milliseconds"
  9: pingResultsProbeResponses
	   Syntax="Unsigned32"
     Descr="Number of responses received for the corresponding
pingCtlEntry and pingResultsEntry.  The value of this object
MUST be reported as 0 when no probe responses have been
received."
     Units="responses"
 10: pingResultsSentProbes
	   Syntax="Unsigned32"
     Descr="The value of this object reflects the number of probes sent
for the corresponding pingCtlEntry and pingResultsEntry.
The value of this object MUST be reported as 0 when no probes
have been sent."
     Units="probes"
 11: pingResultsRttSumOfSquares
	   Syntax="Unsigned32"
     Descr="This object contains the sum of the squares for all ping
responses received.  Its purpose is to enable standard
deviation calculation.  The value of this object MUST
be reported as 0 when no ping responses have been
received."
     Units="milliseconds"
 12: pingResultsLastGoodProbe
	   Syntax="DateAndTime  (Octet String) (SIZE(8|11))"
     Descr="Date and time when the last response was received for
a probe."
EDESC
#
#
#
EVENT pingTestCompleted .1.3.6.1.2.1.80.0.3 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"Generated at the completion of a ping test when the
corresponding pingCtlTrapGeneration object is set to
testCompletion(4)."
Variables:
  1: pingCtlTargetAddressType
	   Syntax="InetAddressType"
     Descr="Specifies the type of host address to be used at a remote
host for performing a ping operation."
  2: pingCtlTargetAddress
	   Syntax="InetAddress"
     Descr="Specifies the host address to be used at a remote host for
performing a ping operation.  The host address type is
determined by the object value of corresponding
pingCtlTargetAddressType.
A value for this object MUST be set prior to transitioning
its corresponding pingCtlEntry to active(1) via
pingCtlRowStatus."
  3: pingResultsOperStatus
	   Syntax="Integer"
     Descr="Reflects the operational state of a pingCtlEntry:
enabled(1)   - Test is active.
disabled(2)  - Test has stopped."
  4: pingResultsIpTargetAddressType
	   Syntax="InetAddressType"
     Descr="This objects indicates the type of address stored
in the corresponding pingResultsIpTargetAddress
object."
  5: pingResultsIpTargetAddress
	   Syntax="InetAddress"
     Descr="This objects reports the IP address associated
with a pingCtlTargetAddress value when the destination
address is specified as a DNS name.  The value of
this object should be a zero length octet string
when a DNS name is not specified or when a
specified DNS name fails to resolve."
  6: pingResultsMinRtt
	   Syntax="Unsigned32"
     Descr="The minimum ping round-trip-time (RTT) received.  A value
of 0 for this object implies that no RTT has been received."
     Units="milliseconds"
  7: pingResultsMaxRtt
	   Syntax="Unsigned32"
     Descr="The maximum ping round-trip-time (RTT) received.  A value
of 0 for this object implies that no RTT has been received."
     Units="milliseconds"
  8: pingResultsAverageRtt
	   Syntax="Unsigned32"
     Descr="The current average ping round-trip-time (RTT)."
     Units="milliseconds"
  9: pingResultsProbeResponses
	   Syntax="Unsigned32"
     Descr="Number of responses received for the corresponding
pingCtlEntry and pingResultsEntry.  The value of this object
MUST be reported as 0 when no probe responses have been
received."
     Units="responses"
 10: pingResultsSentProbes
	   Syntax="Unsigned32"
     Descr="The value of this object reflects the number of probes sent
for the corresponding pingCtlEntry and pingResultsEntry.
The value of this object MUST be reported as 0 when no probes
have been sent."
     Units="probes"
 11: pingResultsRttSumOfSquares
	   Syntax="Unsigned32"
     Descr="This object contains the sum of the squares for all ping
responses received.  Its purpose is to enable standard
deviation calculation.  The value of this object MUST
be reported as 0 when no ping responses have been
received."
     Units="milliseconds"
 12: pingResultsLastGoodProbe
	   Syntax="DateAndTime  (Octet String) (SIZE(8|11))"
     Descr="Date and time when the last response was received for
a probe."
EDESC
#
#
#
EVENT newFlow .1.3.6.1.3.71.2.0.1 "Status Alarms" Normal
FORMAT newFlow trap received from enterprise $E with $# arguments: rsvpFlowIndex=$1; ifIndex=$2
SDESC
"The newFlow trap indicates that the originating system has installed a new
flow in its classifier, or (when reservation authorization is in view) is
prepared to install such a flow in the classifier and is requesting
authorization. The objects included with the Notification may be used to
read further information using the RSVP MIB. Authorization or non-authorization
may be enacted by a write to the variable rsvpFlowStatus."
EDESC
#
#
#
EVENT lostFlow .1.3.6.1.3.71.2.0.2 "Status Alarms" Normal
FORMAT lostFlow trap received from enterprise $E with $# arguments: rsvpFlowIndex=$1; ifIndex=$2
SDESC
"The lostFlow trap indicates that the originating system has removed a flow in
its classifier."
EDESC
#
#
#
EVENT Experimental-trap .1.3.6.1.3.118.0.* "IGNORE" Warning
FORMAT Received event $E. $# args: $*
SDESC
EDESC
#
#
#
EVENT EnterpriseDefault .1.3.6.1.4.1.* "Error Alarms" Normal
FORMAT Received event $o (enterprise:$e generic:$G specific:$S), no format in trapd.conf. $# args: $*
SDESC
This is the default event format used when an enterprise
specific event (trap) is received for which no format has
been configured (i.e. no event definition exists).

To configure the event (trap), select HP OpenView Network
Node Manager's "Options:Event Configuration" menu item, then
"Edit:Add->Event..." and create a definition.

This default definition is used if no definition has been
configured for a given event.  If this default event
definition is missing (i.e., removed from this file), a
hard-coded absolute default will be used.

If you running under a LANG which is not English(C) and are
not seeing a recently-installed third-party application
event, the third-party install script may have only made the
changes to your English C/trapd.conf file.  To merge-in
these changes to your non-english trapd.conf file, type
   "xnmevents -load /etc/opt/OV/share/conf/C/trapd.conf".

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT 8272TsTempThreshold .1.3.6.1.4.1.2.6.66.1.2.1.2.0.1 "Status Alarms" Warning
FORMAT ibm8272TsTempThreshold trap received from enterprise $E with $# args: sysName=$1; sysLocation=$2; ibm8272TsSysTemperature=$3
SDESC
"This trap is generated when the system temperature
             either exceeds 50 C or when it returns to normal(45 C)
             after exceeding the temperature. The variable
             ibm8272Ts2SysTemperature indicates the temperature
             condition at the time of the event."
EDESC
#
#
#
EVENT 8272TsPwrSupChange .1.3.6.1.4.1.2.6.66.1.2.1.2.0.2 "Status Alarms" Warning
FORMAT ibm8272TsPwrSupChange trap received from enterprise $E with $# args:sysName=$1; sysLocation=$2; ibm8272TsSysPwrStatus=$3
SDESC
"This trap is generated when the power supply status of
             the switch is inError or returns to normal.  This trap
             is only generated if the switch has more than one
             power supply and at least one of the other power
             supplies is operational."
EDESC
#
#
#
EVENT 8272TsFanChange .1.3.6.1.4.1.2.6.66.1.2.1.2.0.3 "Status Alarms" Warning
FORMAT ibm8272TsFanChange trap received from enterprise $E with $# args:sysName=$1; sysLocation=$2; ibm8272TsSysFanStatus=$3
SDESC
"This trap is generated when the fan status of
             the switch is inError or returns to normal."
EDESC
#
#
#
EVENT 8272TsVoltageChange .1.3.6.1.4.1.2.6.66.1.2.1.2.0.4 "Status Alarms" Warning
FORMAT ibm8272TsVoltageChange trap received from enterprise $E with $# args:sysName=$1; sysLocation=$2; ibm8272TsSysVoltageStatus=$3
SDESC
"This trap is generated when the voltage status of
             the switch is low or returns to normal."
EDESC
#
#
#
EVENT 827TsPortCfgLossTrap .1.3.6.1.4.1.2.6.66.1.2.2.0.1 "Status Alarms" Warning
FORMAT ibm8272TsPortCfgLossTrap received from enterprise $E with $# args:ibm8272TsPortIndex=$1;ibm8272TsPortCfgLoss=$2
SDESC
"This trap occurs when a port is disabled because
              it has exceeded its Configuration Loss Threshold
              within the configured Sampling Period."
EDESC
#
#
#
EVENT 8272TsBeaconStart .1.3.6.1.4.1.2.6.66.1.2.2.0.2 "Status Alarms" Warning
FORMAT ibm8272TsBeaconStart trap received from enterprise $E with $# args: ibm8272TsPortIndex=$1
SDESC
"This trap is generated when a port or a station local to a
            port begins to beacon. It is sent out only when a ring status
            change indicates that a station is beaconing."
EDESC
#
#
#
EVENT 8272TsBeaconEnd .1.3.6.1.4.1.2.6.66.1.2.2.0.3 "Status Alarms" Normal
FORMAT ibm8272TsBeaconEnd trap received from enterprise $E with $# args: ibm8272TsPortIndex=$1
SDESC
"This trap is generated when the ring status change indicates
            that a ring is no longer beaconing. This trap only occurs only
            once when the status actually changes."
EDESC
#
#
#
EVENT 8272TsMaxFrmSzExceed .1.3.6.1.4.1.2.6.66.1.2.2.0.4 "Status Alarms" Warning
FORMAT ibm8272TsMaxFrameSizeExceeded trap received from enterprise $E with $# args: ibm8272TsPortIndex=$1
SDESC
"This trap is generated when there has been a change in the
            number of oversized frames received (>4540 bytes) on the port.
            This trap is only sent once every ten minutes for any given port."
EDESC
#
#
#
EVENT 8272TsPtSwtMdChgTrap .1.3.6.1.4.1.2.6.66.1.2.2.0.5 "Status Alarms" Normal
FORMAT ibm8272TsPortSwitchModeChangeTrap received from enterprise $E with $# args: ibm8272TsPortIndex=$1; ibm8272TsPortSwitchMode=$2
SDESC
"This trap is generated only when the port changes
             from cut-through mode to store-and-forward mode based
             on the error trend calculations."
EDESC
#
#
#
EVENT 8272TsDmnNewRoot .1.3.6.1.4.1.2.6.66.1.2.3.0.1 "Status Alarms" Normal
FORMAT ibm8272TsDmnNewRoot trap received from enterprise $E with $# args: ibm8272TsDmnIndex=$1
SDESC
"This trap is a domain specific version of the
            newRoot trap as described in RFC1493.

            The newRoot trap indicates that the sending agent
            has become the new root of the Spanning Tree; the
            trap is sent by a bridge soon after its election
            as the new root, e.g., upon expiration of the
            Topology Change Timer immediately subsequent to
            its election.  Implementation of this trap is
            optional."
EDESC
#
#
#
EVENT 8272TsDmnTopoChg .1.3.6.1.4.1.2.6.66.1.2.3.0.2 "Status Alarms" Normal
FORMAT ibm8272TsDmnTopologyChange trap received from enterprise $E with $# args: ibm8272TsDmnIndex=$1
SDESC
"This trap is a domain specific version of the
            topologyChange trap as described in RFC1493.

            A topologyChange trap is sent by a bridge when
            any of its configured ports transitions from the
            Learning state to the Forwarding state, or from
            the Forwarding state to the Blocking state.  The
            trap is not sent if a newRoot trap is sent for the
            same transition.  Implementation of this trap is
            optional."
EDESC
#
#
#
EVENT WindConnect .1.3.6.1.4.1.9.* "Cisco IPBA" Warning
FORMAT Cisco default trap: generic: $G specific: $S args($#): $*
NODES BADE-E40.ippubbl.wind BOTE-E40.ippubbl.wind CAQU-E40.ippubbl.wind FICI-E40.ippubbl.wind GECA-E40.ippubbl.wind MICA-E40.ippubbl.wind MICA-E41.ippubbl.wind MICL-BRQX01.ippubbl.wind MICL-BRQX02.ippubbl.wind MIOT-CNIPAITNET01.ippubbl.wind MIOT-CNIPAITNET02.ippubbl.wind NAGI-E40.ippubbl.wind PACR-E40.ippubbl.wind PDUR-E40.ippubbl.wind RMSA-E40.ippubbl.wind RMSA-E41.ippubbl.wind RMTI-BRQX01.ippubbl.wind RMTI-BRQX02.ippubbl.wind TONI-E40.ippubbl.wind TSMO-E40.ippubbl.wind
SDESC
This is the trap used when no other Cisco trap is configured. 
generic:$G specific:$S args($#):$*
EDESC
#
#
#
EVENT Cisco_Default_Trap .1.3.6.1.4.1.9.* "Cisco Alarms" Warning
FORMAT Cisco default trap: generic: $G specific: $S args($#): $*
SDESC
This is the trap used when no other Cisco trap is configured. 
generic:$G specific:$S args($#):$*
EDESC
#
#
#
EVENT Cisco_reload .1.3.6.1.4.1.9.0.0 "Cisco Alarms" Warning
FORMAT Cisco_reload trap received from enterprise $E with $# arguments: sysUpTime=$1; whyReload=$2
SDESC
This event occurs when an Cisco entity is reinitializing.

A reload trap signifies that the sending
protocol entity is reinitializing itself such
that the agents configuration or the
protocol entity implementation may be altered.
EDESC
#
#
#
EVENT Cisco_tcpConnectClos .1.3.6.1.4.1.9.0.1 "LOGONLY" Normal
FORMAT TCP connection terminated. Trap received from enterprise $E with $# arguments: tslineSesType=$1; tcpConnState=$2; loctcpConnElapsed=$3; loctcpConnInBytes=$4; loctcpConnOutBytes=$5; tsLineUser=$6
SDESC
This event occurs when a tty connection is closed.

This trap signifies that a TCP conneciton
previously established with the sending
protocol entity for the purposes of tty
session, has been terminated.
EDESC
#
#
#
EVENT 2600TsDmnNewRoot .1.3.6.1.4.1.9.1.111.1.2.3.0.1 "Status Alarms" Warning
FORMAT 2600TsDmnNewRoot trap received from enterprise $E with $# arguments:
SDESC
EDESC
#
#
#
EVENT 2600TsDmnTopoChge .1.3.6.1.4.1.9.1.111.1.2.3.0.2 "Status Alarms" Warning
FORMAT 2600TsDmnTopoChge trap received from enterprise $E with $# arguments:
SDESC
EDESC
#
#
#
EVENT vtpConfigRevNumberError .1.3.6.1.4.1.9.9.46.2.0.1 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A configuration revision number error notification
signifies that a device has incremented its
vtpConfigRevNumberErrors counter.

Generation of this notification is suppressed if the
vtpNotificationsEnabled has the value 'false'.

The device must throttle the generation of consecutive
vtpConfigRevNumberError notifications so that there is at
least a five-second gap between notification of this type.
When notification are throttled, they are dropped, not
queued for sending at a future time.  (Note that
'generating' a notification means sending to all configured
recipients.)"
Variables:
  1: managementDomainConfigRevNumber
     Syntax="Gauge"
     Descr="The current Configuration Revision Number as known by 
the local device for this management domain when 
managementDomainVersionInUse is version1(1) or 
version2(2).

If managementDomainVersionInUse is version3(4), this 
object has the same value with vtpDatabaseRevisionNumber 
of VLAN database type.

This value is updated (if necessary) whenever a VTP
advertisement is received or generated. When in the
'no management-domain' state, this value is 0."
EDESC
#
#
#
EVENT vtpConfigDigestError .1.3.6.1.4.1.9.9.46.2.0.2 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A configuration digest error notification signifies that a
device has incremented its vtpConfigDigestErrors counter.

Generation of this notification is suppressed if the
vtpNotificationsEnabled has the value 'false'.

The device must throttle the generation of consecutive
vtpConfigDigestError notifications so that there is at least
a five-second gap between notification of this type.  When
notification are throttled, they are dropped, not queued for
sending at a future time.  (Note that 'generating' a
notification means sending to all configured recipients.)"
Variables:
  1: managementDomainConfigRevNumber
     Syntax="Gauge"
     Descr="The current Configuration Revision Number as known by 
the local device for this management domain when 
managementDomainVersionInUse is version1(1) or 
version2(2).

If managementDomainVersionInUse is version3(4), this 
object has the same value with vtpDatabaseRevisionNumber 
of VLAN database type.

This value is updated (if necessary) whenever a VTP
advertisement is received or generated. When in the
'no management-domain' state, this value is 0."
EDESC
#
#
#
EVENT vtpServerDisabled .1.3.6.1.4.1.9.9.46.2.0.3 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A VTP Server disabled notification is generated when the
local system is no longer able to function as a VTP Server
because the number of defined VLANs is greater than
vtpMaxVlanStorage.

Generation of this notification is suppressed if the
vtpNotificationsEnabled has the value 'false'."
Variables:
  1: managementDomainConfigRevNumber
     Syntax="Gauge"
     Descr="The current Configuration Revision Number as known by 
the local device for this management domain when 
managementDomainVersionInUse is version1(1) or 
version2(2).

If managementDomainVersionInUse is version3(4), this 
object has the same value with vtpDatabaseRevisionNumber 
of VLAN database type.

This value is updated (if necessary) whenever a VTP
advertisement is received or generated. When in the
'no management-domain' state, this value is 0."
  2: vtpMaxVlanStorage
     Syntax="Integer (-1..1023)"
     Descr="An estimate of the maximum number of VLANs about which the
local system can recover complete VTP information after a
reboot.  If the number of defined VLANs is greater than this
value, then the system can not act as a VTP Server. For a
device which has no means to calculate the estimated number,
this value is -1."
EDESC
#
#
#
EVENT vtpMtuTooBig .1.3.6.1.4.1.9.9.46.2.0.4 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A VTP MTU tooBig notification is generated when a VLAN's
MTU size is larger than can be supported either:

- by one or more of its trunk ports:
the included vtpVlanState has the value
'mtuTooBigForTrunk' and the included
vlanTrunkPortManagementDomain is for the first (or only)
trunk port,
or

- by the device itself:
vtpVlanState has the value 'mtuTooBigForDevice' and any
instance of vlanTrunkPortManagementDomain is included.

Devices which have no trunk ports do not send vtpMtuTooBig
notifications.

Generation of this notification is suppressed if the
vtpNotificationsEnabled has the value 'false'."
Variables:
  1: vlanTrunkPortManagementDomain
     Syntax="ManagementDomainIndex  (Integer) (1..255)"
     Descr="The value of managementDomainIndex for the management
domain on this trunk port.  Devices which support only one
management domain will support this object read-only."
  2: vtpVlanState
     Syntax="Integer"
     Descr="The state of this VLAN.

The state 'mtuTooBigForDevice' indicates that this device
cannot participate in this VLAN because the VLAN's MTU is
larger than the device can support.

The state 'mtuTooBigForTrunk' indicates that while this
VLAN's MTU is supported by this device, it is too large for
one or more of the device's trunk ports."
EDESC
#
#
#
EVENT vtpVersionOneDeviceDetected .1.3.6.1.4.1.9.9.46.2.0.6 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A VTP version one device detected notification is
generated by a device when:

a) a management domain has been put into version 2 mode
(as accessed by managementDomainVersionInUse).
b) 15 minutes has passed since a).
c) a version 1 PDU is detected on a trunk on the device
that is in that management domain which has a lower
revision number than the current configuration."
Variables:
  1: vlanTrunkPortManagementDomain
     Syntax="ManagementDomainIndex  (Integer) (1..255)"
     Descr="The value of managementDomainIndex for the management
domain on this trunk port.  Devices which support only one
management domain will support this object read-only."
EDESC
#
#
#
EVENT vlanTrunkPortDynamicStatusChange .1.3.6.1.4.1.9.9.46.2.0.7 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A vlanTrunkPortDynamicStatusChange notification is
generated by a device when the value of
vlanTrunkPortDynamicStatus object has been changed."
Variables:
  1: vlanTrunkPortDynamicStatus
     Syntax="Integer"
     Descr=" Indicates whether the specified interface is either
acting as a trunk or not. This is a result of the
vlanTrunkPortDynamicState and the ifOperStatus of the
trunk port itself."
EDESC
#
#
#
EVENT vtpLocalModeChanged .1.3.6.1.4.1.9.9.46.2.0.8 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A vtpLocalModeChanged notification is generated 
by a device when the value of the object 
managementDomainLocalMode is changed."
Variables:
  1: managementDomainLocalMode
     Syntax="Integer"
     Descr="The local VTP mode in this management domain when
managementDomainVersionInUse is version1(1) or
version2(2).

If managementDomainVersionInUse is version3(4), this 
object has the same value with vtpDatabaseLocalMode 
of VLAN database type.

- 'client' indicates that the local system is acting
as a VTP client.

- 'server' indicates that the local system is acting
as a VTP server.

- 'transparent' indicates that the local system does
not generate or listen to VTP messages, but forwards
messages. This mode can also be set by the device
itself when the amount of VLAN information is too
large for it to hold in DRAM.

- 'off' indicates that the local system does not
generate, listen to or forward any VTP messages."
EDESC
#
#
#
EVENT vtpVersionInUseChanged .1.3.6.1.4.1.9.9.46.2.0.9 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A vtpVersionInUseChanged notification is  
generated by a device when the value of the  
object managementDomainVersionInUse is 
changed."
Variables:
  1: managementDomainVersionInUse
     Syntax="Integer"
     Descr="The current version of the VTP that is in use by the
designated management domain. 

This object can be set to none(3) only when 
vtpVersion is none(3)."
EDESC
#
#
#
EVENT vtpVlanCreated .1.3.6.1.4.1.9.9.46.2.0.10 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A vtpVlanCreated notification is generated by a 
device when a VLAN is created. "
Variables:
  1: vtpVlanName
     Syntax="Display String (SIZE(1..32))"
     Descr="The name of this VLAN.  This name is used as the ELAN-name
for an ATM LAN-Emulation segment of this VLAN."
EDESC
#
#
#
EVENT vtpVlanDeleted .1.3.6.1.4.1.9.9.46.2.0.11 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A vtpVlanDeleted notification is generated by a
device when a VLAN is deleted. "
Variables:
  1: vtpVlanName
     Syntax="Display String (SIZE(1..32))"
     Descr="The name of this VLAN.  This name is used as the ELAN-name
for an ATM LAN-Emulation segment of this VLAN."
EDESC
#
#
#
EVENT vtpVlanRingNumberConflict .1.3.6.1.4.1.9.9.46.2.0.12 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A VTP ring number configuration conflict notification is
generated if, and only at the time when, a device learns of
a conflict between:

a) the ring number (vtpVlanPortLocalSegment) being used on a
token ring segment attached to the port identified by
ifIndex, and

b) the VTP-obtained ring number (vtpVlanRingNumber) for the
VLAN identified by vtpVlanIndex.

When such a conflict occurs, the bridge port is put into an
administrative down position until the conflict is resolved
through local/network management intervention.

This notification is only applicable to VLANs of type
'tokenRing'."
Variables:
  1: vtpVlanRingNumber
     Syntax="Integer (0..4095)"
     Descr="The ring number of this VLAN.  This object is only
instantiated when the value of the corresponding instance of
vtpVlanType has a value of 'fddi' or 'tokenRing' and Source
Routing is in use on this VLAN."
  2: ifIndex
     Syntax="InterfaceIndex  (Integer) (1..2147483647)"
     Descr="A unique value, greater than zero, for each interface.  It
is recommended that values are assigned contiguously
starting from 1.  The value for each interface sub-layer
must remain constant at least from one re-initialization of
the entity's network management system to the next re-
initialization."
  3: vtpVlanPortLocalSegment
     Syntax="Integer (0..65535)"
     Descr="The ring (segment) number in use on a 802.5 ring.  For
bridges supporting RFC 1525, this value is the same as given
by dot1dSrPortLocalSegment for the bridge port attached to
that ring.  When tokenRing VLANs are in use, each 'trNet'
VLAN can/does have a different instance of
dot1dSrPortLocalSegment for each physical port.  Note that
access to the particuler instance of dot1dSrPortLocalSegment
requires knowledge of how the agent supports the multiple
'contexts' required to implement RFC 1525 for multiple
VLANs; also note that the assignment of ifIndex values may
be different in different 'contexts'."
EDESC
#
#
#
EVENT oamPingCompTrap .1.3.6.1.4.1.9.10.15.2.0.1 "Status Alarms" Normal
FORMAT oamLoopbackPingCompleted received from enterprise $E with $# arguments: oamLoopbackPingCompleted=$1
SDESC
"A oamLoopbackPingCompleted trap is sent at the completion of a sequence of OAM 
loopback cells if such a trap was requested when the sequence was initiated."
EDESC
#
#
#
EVENT Cisco_Cold_Start .1.3.6.1.6.3.1.1.5.1.1.3.6.1.4.1.9 "Cisco Alarms" Warning
FORMAT Cold start: Trap received from enterprise $E with $# arguments: sysUpTime=$1; whyReload=$2
EXEC /export/home/admin/Tools/sendmail_cold_start "$A" "WARNING : IL ROUTER $A HA EFFETTUATO UN COLD START ( CAUSA : $2 ) *** ATTIVARE PROCEDURA DI CONTROLLO ***"
DISPLAY WARNING : IL ROUTER $A HA EFFETTUATO UN COLD START ( CAUSA : $2 ) *** ATTIVARE PROCEDURA DI CONTROLLO ***
SDESC
This event occurs when an Cisco is
powered up.

A coldStart trap signifies that the sending
protocol entity is reinitializing itself such
that the agent's configuration or the protocol
entity implementation may be altered.
EDESC
#
#
#
EVENT Cisco_Warm_Start .1.3.6.1.6.3.1.1.5.2.1.3.6.1.4.1.9 "Cisco Alarms" Normal
FORMAT Cisco Agent Up with No Changes (warmStart Trap)
SDESC
This event occurs when an Cisco agent is re-configured.

A warmStart trap signifies that the sending
protocol entity is reinitializing itself such
that neither the agent configuration nor the
protocol entity implementation is altered.
EDESC
#
#
#
EVENT Cisco_Link_Down .1.3.6.1.6.3.1.1.5.3.1.3.6.1.4.1.9 "LOGONLY" Minor
FORMAT linkDown trap received from enterprise $E with $# arguments: ifIndex=$1; ifDescr=$2; ifType=$3; locIfReason=$4
SDESC
This event occurs when the Cisco agent
detects an interface has gone down.

A linkDown trap signifies that the sending
protocol entity recognizes a failure in one of
the communication links represented in the
agent's configuration.
EDESC
#
#
#
EVENT Cisco_Link_Up .1.3.6.1.6.3.1.1.5.4.1.3.6.1.4.1.9 "LOGONLY" Normal
FORMAT linkUp trap received from enterprise $E with $# arguments: ifIndex=$1; ifDescr=$2; ifType=$3; locIfReason=$4
SDESC
This event occurs when the Cisco agent
detects an interface has come back up.

A linkUp trap signifies that the sending
protocol entity recognizes that one of the
communication links represented in the agent's
configuration has come up.
EDESC
#
#
#
EVENT Cisco_Auth_Failure .1.3.6.1.6.3.1.1.5.5.1.3.6.1.4.1.9 "IGNORE" Warning
FORMAT Authentication Failure trap received from enterprise $E with $# arguments: authAddr=$1
SDESC
This event occurs when the Cisco agent
detects an authentication failure
has occurred.

An authentication failure trap signifies that
the sending protocol entity is the addressee
of a protocol message that is not properly
authenticated.  While implementations of the
SNMP must be capable of generating this trap,
they must also be capable of suppressing the
emission of such traps via an implementation-
specific mechanism.
EDESC
#
#
#
EVENT Cisco_EGP_Down .1.3.6.1.6.3.1.1.5.6.1.3.6.1.4.1.9 "Cisco Alarms" Warning
FORMAT Cisco EGP Neighbor Down (egpNeighborLoss Trap) egpNeighAddr: $1
SDESC
An egpNeighborLoss trap signifies that an EGP
neighbor for whom the sending protocol entity
was an EGP peer has been marked down and the
peer relationship no longer obtains.
EDESC
#
#
#
EVENT TsTempThreshold .1.3.6.1.4.1.9.1.111.1.2.1.2.0.1 "Status Alarms" Warning
FORMAT TsTempThreshold trap received from enterprise $E with $# arguments:
SDESC
EDESC
#
#
#
EVENT TsPortCfgLossTrap .1.3.6.1.4.1.9.1.111.1.2.2.0.1 "Status Alarms" Warning
FORMAT TsPortCfgLossTrap trap received from enterprise $E with $# arguments:
SDESC
EDESC
#
#
#
EVENT TsBeaconStart .1.3.6.1.4.1.9.1.111.1.2.2.0.2 "Status Alarms" Warning
FORMAT TsBeaconStart trap received from enterprise $E with $# arguments:
SDESC
EDESC
#
#
#
EVENT TsBeaconEnd .1.3.6.1.4.1.9.1.111.1.2.2.0.3 "Status Alarms" Normal
FORMAT TsBeaconEnd trap received from enterprise $E with $# arguments:
SDESC
EDESC
#
#
#
EVENT TSMaxFrameSizeExceed .1.3.6.1.4.1.9.1.111.1.2.2.0.4 "Status Alarms" Warning
FORMAT TSMaxFrameSizeExceed trap received from enterprise $E with $# arguments:
SDESC
EDESC
#
#
#
EVENT TsPortSwitchModeChge .1.3.6.1.4.1.9.1.111.1.2.2.0.5 "Status Alarms" Warning
FORMAT TsPortSwitchModeChge trap received from enterprise $E with $# arguments:
SDESC
EDESC
#
#
#
EVENT CiscoPro316T_Cold_St .1.3.6.1.6.3.1.1.5.1.1.3.6.1.4.1.9.1.147 "Cisco Alarms" Normal
FORMAT CiscoPro316T on a power-on reset
SDESC
EDESC
#
#
#
EVENT CiscoPro316T_Warm_St .1.3.6.1.6.3.1.1.5.2.1.3.6.1.4.1.9.1.147 "Cisco Alarms" Normal
FORMAT CiscoPro316T is reset (warmStart Trap)
SDESC
EDESC
#
#
#
EVENT CiscoPro316T_Auth_Fa .1.3.6.1.6.3.1.1.5.5.1.3.6.1.4.1.9.1.147 "Cisco Alarms" Warning
FORMAT CiscoPro316T Incorrect Community Name (authenticationFailure Trap)
SDESC
EDESC
#
#
#
EVENT CiscoPro316C_Cold_St .1.3.6.1.6.3.1.1.5.1.1.3.6.1.4.1.9.1.148 "Cisco Alarms" Normal
FORMAT CiscoPro316C on a power-on reset
SDESC
EDESC
#
#
#
EVENT CiscoPro316C_Warm_St .1.3.6.1.6.3.1.1.5.2.1.3.6.1.4.1.9.1.148 "Cisco Alarms" Normal
FORMAT CiscoPro316C is reset (warmStart Trap)
SDESC
EDESC
#
#
#
EVENT CiscoPro316C_Auth_Fa .1.3.6.1.6.3.1.1.5.5.1.3.6.1.4.1.9.1.148 "Cisco Alarms" Warning
FORMAT CiscoPro316C Incorrect Community Name (authenticationFailure Trap)
SDESC
EDESC
#
#
#
EVENT CiscoPro3116_Cold_St .1.3.6.1.6.3.1.1.5.1.1.3.6.1.4.1.9.1.149 "Cisco Alarms" Normal
FORMAT CiscoPro3116 on a power-on reset
SDESC
EDESC
#
#
#
EVENT CiscoPro3116_Warm_St .1.3.6.1.6.3.1.1.5.2.1.3.6.1.4.1.9.1.149 "Cisco Alarms" Normal
FORMAT CiscoPro3116 is reset (warmStart Trap)
SDESC
EDESC
#
#
#
EVENT CiscoPro3116_Auth_Fa .1.3.6.1.6.3.1.1.5.5.1.3.6.1.4.1.9.1.149 "Cisco Alarms" Warning
FORMAT CiscoPro3116 Incorrect Community Name (authenticationFailure Trap)
SDESC
EDESC
#
#
#
EVENT Catalyst116T_Cold_St .1.3.6.1.6.3.1.1.5.1.1.3.6.1.4.1.9.1.150 "Cisco Alarms" Normal
FORMAT Catalyst116T on a power-on reset
SDESC
EDESC
#
#
#
EVENT Catalyst116T_Warm_St .1.3.6.1.6.3.1.1.5.2.1.3.6.1.4.1.9.1.150 "Cisco Alarms" Normal
FORMAT Catalyst116T is reset (warmStart Trap)
SDESC
EDESC
#
#
#
EVENT Catalyst116T_Auth_Fa .1.3.6.1.6.3.1.1.5.5.1.3.6.1.4.1.9.1.150 "Cisco Alarms" Warning
FORMAT Catalyst116T Incorrect Community Name (authenticationFailure Trap)
SDESC
EDESC
#
#
#
EVENT Catalyst116C_Cold_St .1.3.6.1.6.3.1.1.5.1.1.3.6.1.4.1.9.1.151 "Cisco Alarms" Normal
FORMAT Catalyst116C on a power-on reset
SDESC
EDESC
#
#
#
EVENT Catalyst116C_Warm_St .1.3.6.1.6.3.1.1.5.2.1.3.6.1.4.1.9.1.151 "Cisco Alarms" Normal
FORMAT Catalyst116C is reset (warmStart Trap)
SDESC
EDESC
#
#
#
EVENT Catalyst116C_Auth_Fa .1.3.6.1.6.3.1.1.5.5.1.3.6.1.4.1.9.1.151 "Cisco Alarms" Warning
FORMAT Catalyst116C Incorrect Community Name (authenticationFailure Trap)
SDESC
EDESC
#
#
#
EVENT Catalyst1116_Cold_St .1.3.6.1.6.3.1.1.5.1.1.3.6.1.4.1.9.1.152 "Cisco Alarms" Normal
FORMAT Catalyst1116 on a power-on reset
SDESC
EDESC
#
#
#
EVENT Catalyst1116_Warm_St .1.3.6.1.6.3.1.1.5.2.1.3.6.1.4.1.9.1.152 "Cisco Alarms" Normal
FORMAT Catalyst1116 is reset (warmStart Trap)
SDESC
EDESC
#
#
#
EVENT Catalyst1116_Auth_Fa .1.3.6.1.6.3.1.1.5.5.1.3.6.1.4.1.9.1.152 "Cisco Alarms" Warning
FORMAT Catalyst1116 Incorrect Community Name (authenticationFailure Trap)
SDESC
EDESC
#
#
#
EVENT Cold_Start_trap .1.3.6.1.6.3.1.1.5.1.1.3.6.1.4.1.9.1.301 "CCR Alarms" Warning
FORMAT Received event $E. $# args: $*
EXEC /export/home/admin/Tools/sendmail_cold_start "$A" "WARNING : IL ROUTER $A HA EFFETTUATO UN COLD START ( CAUSA : $2 ) *** ATTIVARE PROCEDURA DI CONTROLLO ***"
DISPLAY WARNING : IL ROUTER $A HA EFFETTUATO UN COLD START ( CAUSA : $2 ) *** ATTIVARE PROCEDURA DI CONTROLLO ***
SDESC
EDESC
#
#
#
EVENT mrLogon_Intruder .1.3.6.1.4.1.9.2.11.1.0.0 "Status Alarms" Major
FORMAT Possible logon intrusion
SDESC
EDESC
#
#
#
EVENT mrDiagnostic_Failure .1.3.6.1.4.1.9.2.11.1.0.1 "Error Alarms" Critical
FORMAT Diagnostic failure
SDESC
EDESC
#
#
#
EVENT mrRPS_Failure .1.3.6.1.4.1.9.2.11.1.0.2 "Status Alarms" Critical
FORMAT Redundant power supply failed
SDESC
EDESC
#
#
#
EVENT mrIp_Address_Change .1.3.6.1.4.1.9.2.11.1.0.3 "Error Alarms" Major
FORMAT Ip address change
SDESC
EDESC
#
#
#
EVENT lerAlarmOn .1.3.6.1.4.1.9.5.0.1 "Cisco Alarms" Warning
FORMAT FDDI Link Error Rate Alarm: Trap received from enterprise $E with $# arguments: fddimibPORTSMTIndex=$1; fddimibPORTIndex=$2
SDESC
"A lerAlarmOn trap signifies that the agent entity has detected 
that the fddimibPORTLerFlag object in the FDDI-SMT73-MIB 
(RFC 1512) has transitioned to the true(1) state for one of its ports.
The generation of this trap can be controlled by the 
fddimibPORTLerAlarm object in the FDDI-SMT73-MIB for each port."
EDESC
#
#
#
EVENT lerAlarmOff .1.3.6.1.4.1.9.5.0.2 "Cisco Alarms" Normal
FORMAT FDDI Link Error Rate Alarm reset: Trap received from enterprise $E with $# arguments: fddimibPORTSMTIndex=$1; fddimibPORTIndex=$2
SDESC
"A lerAlarmOff trap signifies that the agent entity has detected 
that the fddimibPORTLerFlag object in the FDDI-SMT73-MIB 
(RFC 1512) has transitioned to the false(2) state for one of its ports.
The generation of this trap can be controlled by the 
fddimibPORTLerAlarm object in the FDDI-SMT73-MIB for each port."
EDESC
#
#
#
EVENT moduleUp .1.3.6.1.4.1.9.5.0.3 "Status Alarms" Normal
FORMAT moduleUp trap received from enterprise $E with $# arguments: moduleIndex=$1
SDESC
"A moduleUp trap signifies that the agent entity has detected that 
the moduleStatus object in this MIB has transitioned to the ok(2) 
state for one of its modules.
The generation of this trap can be controlled by the 
sysEnableModuleTraps object."
EDESC
#
#
#
EVENT moduleDown .1.3.6.1.4.1.9.5.0.4 "Status Alarms" Major
FORMAT moduleDown trap received from enterprise $E with $# arguments: moduleIndex=$1
SDESC
"A moduleDown trap signifies that the agent entity has detected 
that the moduleStatus object in this MIB has transitioned out of 
the ok(2) state for one of its modules.
The generation of this trap can be controlled by the 
sysEnableModuleTraps object."
EDESC
#
#
#
EVENT chassisAlarmOn .1.3.6.1.4.1.9.5.0.5 "Cisco Alarms" Warning
FORMAT chassisAlarmOn trap received from enterprise $E with $# arguments: chassisTempAlarm=$1; chassisMinorAlarm=$2; chassisMajorAlarm=$3
SDESC
"A chassisAlarmOn trap signifies that the agent entity has 
detected the chassisTempAlarm, chassisMinorAlarm, or 
chassisMajorAlarm object in this MIB has transitioned to 
the on(2) state.  The generation of this trap can be controlled 
by the sysEnableChassisTraps object."
EDESC
#
#
#
EVENT chassisAlarmOff .1.3.6.1.4.1.9.5.0.6 "Cisco Alarms" Normal
FORMAT chassisAlarmOff trap received from enterprise $E with $# arguments: chassisTempAlarm=$1; chassisMinorAlarm=$2; chassisMajorAlarm=$3
SDESC
"A chassisAlarmOff trap signifies that the agent entity has 
detected the chassisTempAlarm, chassisMinorAlarm, or 
chassisMajorAlarm object in this MIB has transitioned to the 
off(1) state.  The generation of this trap can be controlled by the
sysEnableChassisTraps object."
EDESC
#
#
#
EVENT ipPermitDeniedTrap .1.3.6.1.4.1.9.5.0.7 "Cisco Alarms" Normal
FORMAT ipPermitDeniedTrap received from enterprise $E with $# arguments:  ipPermitDeniedAddress=$1; ipPermitDeniedAccess=$2
SDESC
"ipPermitDeniedTrap indicates that IP permit denied access happens. The
 generation of this trap can be controlled by the sysEnableIpPermitTraps
 object in this MIB."
EDESC
#
#
#
EVENT Stack_Cold_Start .1.3.6.1.6.3.1.1.5.1.1.3.6.1.4.1.9.5 "Cisco Alarms" Normal
FORMAT Cold Start trap received from enterprise $E with $# arguments: sysUpTime=$1; whyReload=$2
SDESC
This event occurs when a Cisco device is
powered up.

A coldStart trap signifies that the sending
protocol entity is reinitializing itself such
that the agent's configuration or the protocol
entity implementation may be altered.
EDESC
#
#
#
EVENT Stack_Warm_Start .1.3.6.1.6.3.1.1.5.2.1.3.6.1.4.1.9.5 "Cisco Alarms" Normal
FORMAT Cisco Agent Up with No Changes (warmStart Trap)
SDESC
This event occurs when a Cisco agent is re-configured.

A warmStart trap signifies that the sending
protocol entity is reinitializing itself such
that neither the agent configuration nor the
protocol entity implementation is altered.
EDESC
#
#
#
EVENT Stack_Link_Down .1.3.6.1.6.3.1.1.5.3.1.3.6.1.4.1.9.5 "Cisco Alarms" Minor
FORMAT linkDown trap received from enterprise $E with ifIndex=$1
SDESC
This event occurs when the Cisco agent
detects an interface has gone down.

A linkDown trap signifies that the sending
protocol entity recognizes a failure in one of
the communication links represented in the
agent's configuration.
EDESC
#
#
#
EVENT Stack_Link_Up .1.3.6.1.6.3.1.1.5.4.1.3.6.1.4.1.9.5 "Cisco Alarms" Normal
FORMAT linkUp trap received from enterprise $E with ifIndex=$1
SDESC
This event occurs when the Cisco agent
detects an interface has come back up.

A linkUp trap signifies that the sending
protocol entity recognizes that one of the
communication links represented in the agent's
configuration has come up.
EDESC
#
#
#
EVENT Stack_Auth_Failu .1.3.6.1.6.3.1.1.5.5.1.3.6.1.4.1.9.5 "Cisco Alarms" Warning
FORMAT Authentication Failure trap received from enterprise $E with $# arguments: authAddr=$1
SDESC
This event occurs when the Cisco agent
detects an authentication failure
has occurred.

An authentication failure trap signifies that
the sending protocol entity is the addressee
of a protocol message that is not properly
authenticated.  While implementations of the
SNMP must be capable of generating this trap,
they must also be capable of suppressing the
emission of such traps via an implementation-
specific mechanism.
EDESC
#
#
#
EVENT Auth_Failure .1.3.6.1.6.3.1.1.5.5.1.3.6.1.4.1.9.5.7 "IGNORE" Normal
FORMAT Authentication Failure - Received event $E. $# args: $*
SDESC
EDESC
#
#
#
EVENT LS1010ChassisFail .1.3.6.1.4.1.9.5.11.2.0.1 "Status Alarms" Warning
FORMAT LS1010ChassisFail trap received from enterprise $E with $# arguments: ciscoLS1010ChassisPs0Status=$1; ciscoLS1010ChassisPs1Status=$2; ciscoLS1010ChassisFanStatus=$3; ciscoLS1010Chassis12VoltStatus=$4; ciscoLS1010ChassisTempStatus=$5
SDESC
"Agent detects any chassis failure of ps0, ps1, fan, 12 volt and/or over
 temperature. The trap will be sent out every 1 minute."
EDESC
#
#
#
EVENT LS1010ChassisChg .1.3.6.1.4.1.9.5.11.2.0.2 "Status Alarms" Warning
FORMAT LS1010ChassisChg trap received from enterprise $E with $# arguments:
SDESC
"Agent detects any hot-swappable component change or changes in the chassis."
EDESC
#
#
#
EVENT ciscoEsStackCfgChang .1.3.6.1.4.1.9.5.14.1.1.0.1 "LOGONLY" Normal
FORMAT ciscoEsStackCfgChang trap received from enterprise $E with $# arguments: sysName=$1; sysLocation=$2; ciscoEsNumSwitches=$3
SDESC
Long Descr.:
"This trap is generated when there is a change in the 
stack configuration i.e. when either a new switch is 
added to the stack or a switch leaves a stack.
ciscoEsNumSwitches indicates the current number of switches
which are part of the stack. The management station has to 
update its stack information according to the
stack table."
Variables:
  1: sysName
     Syntax="Display String (SIZE(0..255))"
     Descr="An administratively-assigned name for this
managed node.  By convention, this is the node's
fully-qualified domain name."
  2: sysLocation
     Syntax="Display String (SIZE(0..255))"
     Descr="The physical location of this node (e.g.,
`telephone closet, 3rd floor')."
  3: ciscoEsNumSwitches
     Syntax="Integer"
     Descr="Total number of switches in the stack."
EDESC
#
#
#
EVENT ciscoEsStackProStack .1.3.6.1.4.1.9.5.14.1.1.0.2 "LOGONLY" Normal
FORMAT ciscoEsStackProStack trap received from enterprise $E with $# arguments: sysName=$1; sysLocation=$2; ciscoEsProStackMatrixStatus=$3
SDESC
Long Descr.:
"This trap is generated when the stack switches over
from primary to secondary Matrix or from 
secondary back to primary Matrix."
Variables:
  1: sysName
     Syntax="Display String (SIZE(0..255))"
     Descr="An administratively-assigned name for this
managed node.  By convention, this is the node's
fully-qualified domain name."
  2: sysLocation
     Syntax="Display String (SIZE(0..255))"
     Descr="The physical location of this node (e.g.,
`telephone closet, 3rd floor')."
  3: ciscoEsProStackMatrixStatus
     Syntax="Integer"
     Descr="Active Matrix module in the stack. This object 
is set to none if the switch is not connected to a
Matrix."
EDESC
#
#
#
EVENT ciscoEsStackTempChan .1.3.6.1.4.1.9.5.14.2.0.1 "LOGONLY" Normal
FORMAT ciscoEsStackTempChange trap received from enterprise $E with $# arguments: sysName=$1; sysLocation=$2; ciscoEsStackSwitchTemperature=$3
SDESC
Long Descr.:
"This trap is generated when the temperature in a 
switch exceeds normal or returns to normal."
Variables:
  1: sysName
     Syntax="Display String (SIZE(0..255))"
     Descr="An administratively-assigned name for this
managed node.  By convention, this is the node's
fully-qualified domain name."
  2: sysLocation
     Syntax="Display String (SIZE(0..255))"
     Descr="The physical location of this node (e.g.,
`telephone closet, 3rd floor')."
  3: ciscoEsStackSwitchTemperature
     Syntax="Integer"
     Descr="Temperature status of each switch."
EDESC
#
#
#
EVENT c3kTempurature_Chang .1.3.6.1.4.1.9.5.14.2.0.3 "Status Alarms" Critical
FORMAT Temperature state changed
SDESC
EDESC
#
#
#
EVENT ciscoEsPortStrNFwdEn .1.3.6.1.4.1.9.5.14.4.0.1 "LOGONLY" Normal
FORMAT ciscoEsPortStrNFwdEn trap received from enterprise $E with $# arguments: sysName=$1; sysLocation=$2; ciscoEsPortActiveMode=$3
SDESC
Long Descr.:
"This trap is generated when a port automatically
enters store and forward mode when the error rate 
exceeds the threshold."
Variables:
  1: sysName
     Syntax="Display String (SIZE(0..255))"
     Descr="An administratively-assigned name for this
managed node.  By convention, this is the node's
fully-qualified domain name."
  2: sysLocation
     Syntax="Display String (SIZE(0..255))"
     Descr="The physical location of this node (e.g.,
`telephone closet, 3rd floor')."
  3: ciscoEsPortActiveMode
     Syntax="Integer"
     Descr="Operational bridging mode for the port."
EDESC
#
#
#
EVENT c3kSwitchingMode_Cha .1.3.6.1.4.1.9.5.14.4.0.4 "Status Alarms" Normal
FORMAT Switching mode changed
SDESC
EDESC
#
#
#
EVENT ciscoEsEtherChannelF .1.3.6.1.4.1.9.5.14.6.0.1 "LOGONLY" Normal
FORMAT ciscoEsEtherChannelFail trap received from enterprise $E with $# arguments: sysName=$1; sysLocation=$2; ciscoEsECPorts=$3
SDESC
Long Descr.:
"This trap is sent when one of the links in an
EtherChannel fail. The variable ciscoEsECPorts
contains the ports which are operational in the
EtherChannel."
Variables:
  1: sysName
     Syntax="Display String (SIZE(0..255))"
     Descr="An administratively-assigned name for this
managed node.  By convention, this is the node's
fully-qualified domain name."
  2: sysLocation
     Syntax="Display String (SIZE(0..255))"
     Descr="The physical location of this node (e.g.,
`telephone closet, 3rd floor')."
  3: ciscoEsECPorts
     Syntax="Octet String (SIZE(4))"
     Descr="The set of ports in this switch which are active in this 
EtherChannel. Each octet within the value of this object 
specifies a set of eight ports, with the first octet 
specifying ports 1 through 8, the second octet specifying 
ports 9 through 16, etc.  Within each octet, the most
significant bit represents the lowest numbered
port, and the least significant bit represents the
highest numbered port.  Thus, each port of the
EtherSwitch is represented by a single bit within the
value of this object.  If that bit has a value of
'1' then that port is included in the set of
ports; the port is not included if its bit has a
value of '0'."
EDESC
#
#
#
EVENT c3kEtherChannelFailu .1.3.6.1.4.1.9.5.14.6.0.7 "Status Alarms" Major
FORMAT EtherChannel Failure
SDESC
EDESC
#
#
#
EVENT ciscoEsVLANNewRoot .1.3.6.1.4.1.9.5.14.8.0.1 "LOGONLY" Normal
FORMAT ciscoEsVLANNewRoot trap received from enterprise $E with $# arguments: ciscoEsVLANInfoVLANNumber=$1
SDESC
Long Descr.:
"This trap is a vlan specific version of the
newRoot trap as described in RFC1493.

The newRoot trap indicates that the sending agent
has become the new root of the Spanning Tree; the
trap is sent by a bridge soon after its election
as the new root, e.g., upon expiration of the
Topology Change Timer immediately subsequent to
its election.  Implementation of this trap is
optional."
Variables:
  1: ciscoEsVLANInfoVLANNumber
     Syntax="Integer (0..63)"
     Descr="VLAN identifier for this row."
EDESC
#
#
#
EVENT ciscoEsVLANTopologyC .1.3.6.1.4.1.9.5.14.8.0.2 "LOGONLY" Normal
FORMAT ciscoEsVLANTopologyChange trap received from enterprise $E with $# arguments: ciscoEsVLANInfoVLANNumber=$1
SDESC
Long Descr.:
"This trap is a vlan specific version of the
topologyChange trap as described in RFC1493.

A topologyChange trap is sent by a bridge when
any of its configured ports transitions from the
Learning state to the Forwarding state, or from
the Forwarding state to the Blocking state.  The
trap is not sent if a newRoot trap is sent for the
same transition.  Implementation of this trap is
optional."
Variables:
  1: ciscoEsVLANInfoVLANNumber
     Syntax="Integer (0..63)"
     Descr="VLAN identifier for this row."
EDESC
#
#
#
EVENT c3kVlanNewRoot .1.3.6.1.4.1.9.5.14.8.0.5 "Status Alarms" Normal
FORMAT Spanning Tree new root
SDESC
EDESC
#
#
#
EVENT c3kTopology_Change .1.3.6.1.4.1.9.5.14.8.0.6 "Status Alarms" Normal
FORMAT Spanning Tree topology change
SDESC
EDESC
#
#
#
EVENT CopyCompletionTrap .1.3.6.1.4.1.9.9.10.1.3.0.1 "Status Alarms" Normal
FORMAT CopyCompletionTrap received from enterprise $E with $# arguments: ciscoFlashCopyStatus=$1
SDESC
"A ciscoFlashCopyCompletionTrap is sent at the completion of a 
flash copy operation if such a trap was requested when the 
operation was initiated."
EDESC
#
#
#
EVENT PartitioningComplete .1.3.6.1.4.1.9.9.10.1.3.0.2 "Status Alarms" Normal
FORMAT PartitioningComplete trap received from enterprise $E with $# arguments: ciscoFlashPartitioningStatus=$1
SDESC
"A ciscoFlashPartitioningCompletionTrap is sent at the completion 
of a partitioning operation if such a trap was requested when the 
operation was initiated."
EDESC
#
#
#
EVENT MiscOpCompletionTrap .1.3.6.1.4.1.9.9.10.1.3.0.3 "Status Alarms" Normal
FORMAT ciscoFlashMiscOpCompletionTrap received from enterprise $E with $# arguments: ciscoFlashMiscOpStatus=$1
SDESC
"A ciscoFlashMiscOpCompletionTrap is sent at the completion of a 
miscellaneous flash operation (enumerated in 
ciscoFlashMiscOpCommand) if such a trap was requested when the 
operation was initiated."
EDESC
#
#
#
EVENT DeviceChangeTrap .1.3.6.1.4.1.9.9.10.1.3.0.4 "Status Alarms" Normal
FORMAT ciscoFlashDeviceChangeTrap received from enterprise $E with $# arguments: ciscoFlashDeviceIndex=$1
SDESC
"A ciscoFlashDeviceChangeTrap is sent whenever a removable Flash 
device is inserted or removed."
EDESC
#
#
#
EVENT ciscoFlashDeviceInsertedNotif .1.3.6.1.4.1.9.9.10.1.3.0.5 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A ciscoFlashDeviceInsertedNotif notification is sent  
whenever a removable Flash device is inserted."
Variables:
  1: ciscoFlashDeviceMinPartitionSize
     Syntax="Integer"
     Descr="This object will give the minimum partition size  
supported for this device. For systems that execute code 
directly out of Flash, the minimum partition size needs 
to be the bank size. (Bank size is equal to the size of a  
chip multiplied by the width of the device. In most cases,  
the device width is 4 bytes, and so the bank size would be  
four times the size of a chip). This has to be so because 
all programming commands affect the operation of an 
entire chip (in our case, an entire bank because all 
operations are done on the entire width of the device) 
even though the actual command may be localized to a small 
portion of each chip. So when executing code out of Flash, 
one needs to be able to write and erase some portion of  
Flash without affecting the code execution. 
For systems that execute code out of DRAM or ROM, it is 
possible to partition Flash with a finer granularity (for  
eg., at erase sector boundaries) if the system code supports 
such granularity.  

This object will let a management entity know the 
minimum partition size as defined by the system. 
If the system does not support partitioning, the value 
will be equal to the device size in ciscoFlashDeviceSize. 
The maximum number of partitions that could be configured 
will be equal to the minimum of  
ciscoFlashDeviceMaxPartitions 
and 
(ciscoFlashDeviceSize / ciscoFlashDeviceMinPartitionSize). 
"
     Units="bytes"
  2: ciscoFlashDeviceName
     Syntax="Display String (SIZE(0..16))"
     Descr="Flash device name. This name is used to refer to the 
device within the system. Flash operations get directed  
to a device based on this name. 
The system has a concept of a default device. 
This would be the primary or most used device in case of  
multiple devices. The system directs an operation to the  
default device whenever a device name is not specified. 
The device name is therefore mandatory except when the  
operation is being done on the default device, or, 
the system supports only a single Flash device. 
The device name will always be available for a  
removable device, even when the device has been removed. 
"
EDESC
#
#
#
EVENT ciscoFlashDeviceRemovedNotif .1.3.6.1.4.1.9.9.10.1.3.0.6 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A ciscoFlashDeviceRemovedNotif notification is sent  
whenever a removable Flash device is removed."
Variables:
  1: ciscoFlashDeviceName
     Syntax="Display String (SIZE(0..16))"
     Descr="Flash device name. This name is used to refer to the 
device within the system. Flash operations get directed  
to a device based on this name. 
The system has a concept of a default device. 
This would be the primary or most used device in case of  
multiple devices. The system directs an operation to the  
default device whenever a device name is not specified. 
The device name is therefore mandatory except when the  
operation is being done on the default device, or, 
the system supports only a single Flash device. 
The device name will always be available for a  
removable device, even when the device has been removed. 
"
EDESC
#
#
#
EVENT ShutdownNotification .1.3.6.1.4.1.9.9.13.3.0.1 "Cisco Alarms" Critical
FORMAT Cisco Shutdown Notification from enterprise $E with  $# args $*
SDESC
"A ciscoEnvMonShutdownNotification is sent if the environmental 
monitor detects a testpoint reaching a critical state and is 
about to initiate a shutdown.  This notification contains no 
objects so that it may be encoded and sent in the shortest amount 
of time possible.  Even so, management applications should not rely 
on receiving such a notification as it may not be sent before the 
shutdown completes."
EDESC
#
#
#
EVENT VoltageNotification .1.3.6.1.4.1.9.9.13.3.0.2 "Allarmi Ambientali" Critical
FORMAT ciscoEnvMonVoltageNotification trap received from enterprise $E with $# arguments: ciscoEnvMonVoltageStatusDescr=$1; ciscoEnvMonVoltageStatusValue=$2; ciscoEnvMonVoltageState=$3
SDESC
"A ciscoEnvMonVoltageNotification is sent if the voltage measured 
at a given testpoint is outside the normal range for the testpoint 
(i.e. is at the warning, critical, or shutdown stage).  Since such 
a notification is usually generated before the shutdown state is 
reached, it can convey more data and has a better chance of being 
sent than does the ciscoEnvMonShutdownNotification."
EDESC
#
#
#
EVENT WC-EVO-TEMP .1.3.6.1.4.1.9.9.13.3.0.3 "Allarmi Ambientali" Major
FORMAT ciscoEnvMonTemperatureNotification received from enterprise $E with $# arguments: ciscoEnvMonTemperatureStatusDescr=$1; ciscoEnvMonTemperatureStatusValue=$2; ciscoEnvMonTemperatureState=$3
EXEC /home/admin/PROGRAMMI/MARTI/TEMP/temp $A $2 $3
NODES BADE-E40.ippubbl.wind BOTE-E40.ippubbl.wind CAQU-E40.ippubbl.wind FICI-E40.ippubbl.wind GECA-E40.ippubbl.wind MICA-E40.ippubbl.wind MICA-E41.ippubbl.wind MICL-BRQX01.ippubbl.wind MICL-BRQX02.ippubbl.wind NAGI-E40.ippubbl.wind PACR-E40.ippubbl.wind PDUR-E40.ippubbl.wind RMSA-E40.ippubbl.wind RMSA-E41.ippubbl.wind RMTI-BRQX01.ippubbl.wind RMTI-BRQX02.ippubbl.wind TONI-E40.ippubbl.wind TSMO-E40.ippubbl.wind
SDESC
"A ciscoEnvMonTemperatureNotification is sent if the temperature 
measured at a given testpoint is outside the normal range for the 
testpoint (i.e. is at the warning, critical, or shutdown stage).  
Since such a Notification is usually generated before the shutdown 
state is reached, it can convey more data and has a better chance 
of being sent than does the ciscoEnvMonShutdownNotification."
EDESC
#
#
#
EVENT TemperatureNotificat .1.3.6.1.4.1.9.9.13.3.0.3 "Allarmi Ambientali" Major
FORMAT ciscoEnvMonTemperatureNotification received from enterprise $E with $# arguments: ciscoEnvMonTemperatureStatusDescr=$1; ciscoEnvMonTemperatureStatusValue=$2; ciscoEnvMonTemperatureState=$3
SDESC
"A ciscoEnvMonTemperatureNotification is sent if the temperature 
measured at a given testpoint is outside the normal range for the 
testpoint (i.e. is at the warning, critical, or shutdown stage).  
Since such a Notification is usually generated before the shutdown 
state is reached, it can convey more data and has a better chance 
of being sent than does the ciscoEnvMonShutdownNotification."
EDESC
#
#
#
EVENT FanNotification .1.3.6.1.4.1.9.9.13.3.0.4 "Allarmi Ambientali" Major
FORMAT ciscoEnvMonFanNotification received from enterprise $E with $# arguments: ciscoEnvMonFanStatusDescr=$1; ciscoEnvMonFanState=$2
SDESC
"A ciscoEnvMonFanNotification is sent if any one of the fans in 
the fan array (where extant) fails.  Since such a notification 
is usually generated before the shutdown state is reached, it can 
convey more data and has a better chance of being sent than does 
the ciscoEnvMonShutdownNotification."
EDESC
#
#
#
EVENT RedundantSupplyNotif .1.3.6.1.4.1.9.9.13.3.0.5 "Allarmi Ambientali" Warning
FORMAT ciscoEnvMonRedundantSupplyNotification received from enterprise $E with $# arguments: ciscoEnvMonSupplyStatusDescr=$1; ciscoEnvMonSupplyState=$2
DISPLAY $A Problemi Gravi di Alimentazione
SDESC
"A ciscoEnvMonRedundantSupplyNotification is sent if the redundant 
power supply (where extant) fails.  Since such a notification is 
usually generated before the shutdown state is reached, it can 
convey more data and has a better chance of being sent than does 
the ciscoEnvMonShutdownNotification."
EDESC
#
#
#
EVENT ciscoPingCompletion .1.3.6.1.4.1.9.9.16.2.0.1 "Status Alarms" Normal
FORMAT ciscoPingCompleted trap received from enterprise $E with $# arguments: ciscoPingCompleted=$1; ciscoPingSentPackets=$2; ciscoPingReceivedPackets=$3
SDESC
"A ciscoPingCompleted trap is sent at the completion of a sequence 
of pings if such a trap was requested when the sequence was initiated.  
In addition to the above listed objects (which are always present),
the message will also contain the following objects if any responses 
were received:
         ciscoPingMinRtt
         ciscoPingAvgRtt
         ciscoPingMaxRtt"
EDESC
#
#
#
EVENT ciuIfLoopStatusNot .1.3.6.1.4.1.9.9.18.2.0.1 "Status Alarms" Warning
FORMAT ciuIfLoopStatusNotification received from enterprise $E with $# arguments: ciuIfLoopStatus=$1
SDESC
" A ciuIfLoopStatusNotification is sent when there is a change in
 ciscoIsdnuIfLoopStatus object. The status change occurs when the ISDN BRI
 integrated U interface enters into or exits from Loopback or Maintenance
 modes."
EDESC
#
#
#
EVENT cipCardLinkFailure .1.3.6.1.4.1.9.9.20.1.5.0.1 "Status Alarms" Critical
FORMAT cipCardLinkFailure trap received from enterprise $E with $# arguments: cipCardDtrBrdIndex=$1; cipCardDtrBrdStatus=$2; cipCardDtrBrdSignal=$3; linkIncidentTrapCause=$4; implicitIncidents=$5; codeViolationErrors=$6; linkFailureSignalOrSyncLoss=$7; linkFailureNOSs=$8; linkFailureSequenceTimeouts=$9; linkFailureInvalidSequences=$10
SDESC
"This trap indicates that a significant link event has been recognized 
resulting in the degradation of the interface line quality."
EDESC
#
#
#
EVENT cipCardDtrBrdLink .1.3.6.1.4.1.9.9.20.1.5.0.2 "Status Alarms" Warning
FORMAT cipCardDtrBrdLinkFailure trap received from enterprise $E with $# arguments: cipCardDtrBrdStatus=$1; cipCardDtrBrdSignal=$2; linkIncidentTrapCause=$3
SDESC
"The cipCardDtrBrdLinkFailure trap indicates that a significant link event has
 been recognized resulting in the degradation of the interface line quality."
EDESC
#
#
#
EVENT IllegalSrcAddrTrap .1.3.6.1.4.1.9.9.22.3.0.1 "Status Alarms" Warning
FORMAT IllegalSrcAddrTrap received from enterprise $E with $# arguments: ciscoRptrPortLastIllegalSrcAddr=$1
SDESC
"When the illegal MAC source address violation is detected, the port 
is partitioned for one minute.  In addition, this trap notification 
is generated.

Note: rptrPortGroupIndex, and rptrPortIndex are
      the instances of ciscoRptrPortLastIllegalSrcAddr."
EDESC
#
#
#
EVENT newdspuPuStateChange .1.3.6.1.4.1.9.9.24.1.4.4.0.1 "Status Alarms" Warning
FORMAT newdspuPuStateChange trap received from enterprise $E with $# arguments: dspuPuOperName=$1; dspuPuOperState=$2
SDESC
"Generated when the operational stateof the PU changes
 between active<-->inactive.
 
The following information is returned:
    dspuPuOperName  -> PU name
    dspuPuOperState -> Current operational state of the PU"
EDESC
#
#
#
EVENT newdspuPuActivatFail .1.3.6.1.4.1.9.9.24.1.4.4.0.2 "Status Alarms" Warning
FORMAT newdspuPuActivatFail trap received from enterprise $E with $# arguments: dspuPuOperName=$1; dspuPuOperState=$2; dspuPuStatsLastActivationFailureReason=$3
SDESC
"Generated whenever a PU activation failure is detected.
 
The following information is returned:
    dspuPuOperName -> PU name
    dspuPuOperStat -> Current operational state of the PU
    dspuPuStatsLastActivationFailureReason
                   -> Reason for PU activation failure"
EDESC
#
#
#
EVENT newdspuLuStateChange .1.3.6.1.4.1.9.9.24.1.5.3.0.1 "Status Alarms" Warning
FORMAT newdspuLuStateChange trap received from enterprise $E with $# arguments: dspuPuOperName=$1; dspuLuOperState=$2
SDESC
"Generated when the operational state of the LU changes 
between active<-->inactive.
 
The following information is returned:
    dspuPuOperName -> PU name
    dspuLuOperState -> Current operational state of the LU"
EDESC
#
#
#
EVENT dspuLuActivationFail .1.3.6.1.4.1.9.9.24.1.5.3.0.2 "Status Alarms" Warning
FORMAT dspuLuActivationFail trap received from enterprise $E with $# arguments: dspuPuOperName=$1; dspuLuOperState=$2; dspuLuOperLastActivationFailureReason=$3
SDESC
"Generated whenever an LU activation failure is detected.
 
The following information is returned:
    dspuPuOperName -> PU name
    dspuLuOperState -> Current operational state of the LU
    dspuLuOperLastActivationFailureReason
                    ->  Reason for LU activation failure"
EDESC
#
#
#
EVENT dspuSapStateChange .1.3.6.1.4.1.9.9.24.1.6.2.0.1 "Status Alarms" Warning
FORMAT dspuSapStateChange trap received from enterprise $E with $# arguments: dspuSapDlcType=$1; dspuSapDlcUnit=$2; dspuSapDlcPort=$3; dspuSapAddress=$4; dspuSapOperState=$5
SDESC
"Generated when the operational state of the SAP changes 
between 'open' or 'closed'.
 
The following information is returned:
    dspuSapOperDlcType
        -> DLC type of the adapter on which SAP is located
    dspuSapOperDlcUnit
        -> Unit ID of the adapter on which SAP is located
    dspuSapOperDlcPort
        -> Port ID of the adapter on which SAP is located
    dspuSapOperAddress
        -> SAP address
    dspuSapOperState
        -> Current operational state of the SAP"
EDESC
#
#
#
EVENT demandNbrCallInfo .1.3.6.1.4.1.9.9.26.2.0.1 "Status Alarms" Normal
FORMAT demandNbrCallInfo trap received from enterprise $E with $# args:\n$*
SDESC
"This trap/inform is sent to the manager whenever a successful 
call clears, or a failed call attempt is determined to have 
ultimately failed. In the event that call retry is active, 
then this is after all retry attempts have failed. However,
only one such trap is sent in between successful call attempts; 
subsequent call attempts result in no trap."
EDESC
#
#
#
EVENT demandNbrCallDetails .1.3.6.1.4.1.9.9.26.2.0.2 "Status Alarms" Normal
FORMAT demandNbrCallDetails trap received from enterprise $E with $# arguments: demandNbrLogIf=$1; demandNbrName=$2; demandNbrAddress=$3; demandNbrLastDuration=$4; demandNbrClearReason=$5; demandNbrClearCode=$6; demandNbrCallOrigin=$7
SDESC
"This trap/inform is sent to the manager whenever a call connects, 
or  clears, or a failed call attempt is determined to have ultimately 
failed. In the event that call retry is active, then this is after 
all retry attempts have failed. However, only one such trap is sent 
in between successful call attempts; subsequent call attempts result 
in no trap."
EDESC
#
#
#
EVENT SdllcPeerStateChange .1.3.6.1.4.1.9.9.28.2.0.1 "Status Alarms" Warning
FORMAT SdllcPeerStateChange trap received from enterprise $E with $# arguments: convSdllcAddrState=$1
SDESC
"This Notification indicates that the state of an SDLLC connection 
has transitioned to connected or disconnected."
EDESC
#
#
#
EVENT PeerStateChangeNotif .1.3.6.1.4.1.9.9.29.2.0.1 "Status Alarms" Warning
FORMAT PeerStateChangeNotification received from enterprise $E with $# arguments: rsrbRemotePeerState=$1
SDESC
"This trap indicates that the state of an RSRB remote peer has 
transitioned to active (psConnected) or inactive (psDead or psClosed)."
EDESC
#
#
#
EVENT stunPeerStateChange .1.3.6.1.4.1.9.9.30.2.0.1 "Status Alarms" Warning
FORMAT stunPeerStateChange trap received from enterprise $E with $# arguments: stunRoutePeerState=$1
SDESC
"This notification indicates that the state of a STUN route has 
transitioned to active (connected or direct) or inactive (dead or 
closed)."
EDESC
#
#
#
EVENT snaOpenDuplctSapFail .1.3.6.1.4.1.9.9.33.2.0.1 "Status Alarms" Warning
FORMAT snaOpenDuplctSapFail trap received from enterprise $E with $# arguments: cipCardCsnaSlot=$1; cipCardCsnaPort=$2; cipCardCsnaConnPath=$3; cipCardCsnaConnDevice=$4
SDESC
"This trap indicates that VTAM attempted to open a SAP that was 
already open via another Path/Device on this CIP card."
EDESC
#
#
#
EVENT Llc2ConnctLimitXceed .1.3.6.1.4.1.9.9.33.2.0.2 "Status Alarms" Warning
FORMAT Llc2ConnctLimitXceed trap received from enterprise $E with $# arguments: cipCardAdminMaxLlc2Sessions=$1; cipCardOperMaxLlc2Sessions=$2; cipCardStatsHiWaterLlc2Sessions=$3; cipCardStatsLlc2SessionAllocationErrs=$4
SDESC
"This trap indicates that a connection attempt was rejected due to 
a connection resource limitation"
EDESC
#
#
#
EVENT bstunPeerStateChg .1.3.6.1.4.1.9.9.35.2.0.1 "Status Alarms" Warning
FORMAT bstunPeerStateChg trap received from enterprise $E with $# arguments: bstunRoutePeerState=$1
SDESC
"This notification indicates that the state of a BSTUN route has 
transitioned to active (connected) or inactive (dead or closed)."
EDESC
#
#
#
EVENT clogMessageGenerated .1.3.6.1.4.1.9.9.41.2.0.1 "LOGONLY" Normal
FORMAT clogMessageGenerated trap received from enterprise $E with $# arguments: clogHistFacility=$1; clogHistSeverity=$2; clogHistMsgName=$3; clogHistMsgText=$4; clogHistTimestamp=$5
SDESC
Long Descr.:
"When a syslog message is generated by the device a
clogMessageGenerated notification is sent.  The
sending of these notifications can be enabled/disabled
via the clogNotificationsEnabled object."
Variables:
  1: clogHistFacility
     Syntax="Display String (SIZE(1..20))"
     Descr="Name of the facility that generated this message.
For example: 'SYS'."
  2: clogHistSeverity
     Syntax="SyslogSeverity  (Integer) "
     Descr="The severity of the message."
  3: clogHistMsgName
     Syntax="Display String (SIZE(1..30))"
     Descr="A textual identification for the message type.  A 
facility name in conjunction with a message name 
uniquely identifies a message type."
  4: clogHistMsgText
     Syntax="Display String (SIZE(1..255))"
     Descr="The text of the message.  If the text of the message
exceeds 255 bytes, the message will be truncated to
254 bytes and a '*' character will be appended -
indicating that the message has been truncated."
  5: clogHistTimestamp
     Syntax="TimeStamp  (Timeticks) "
     Descr="The value of sysUpTime when this message was generated."
EDESC
#
#
#
EVENT rttMonConnectionChan .1.3.6.1.4.1.9.9.42.2.0.1 "LOGONLY" Normal
FORMAT rttMonConnectionChange trap received from enterprise $E with $# arguments: rttMonCtrlAdminTag=$1; rttMonHistoryCollectionAddress=$2; rttMonCtrlOperConnectionLostOccurred=$3
SDESC
Long Descr.:
"This notification is only valid when the RttMonRttType
is 'echo' or 'pathEcho'.

A rttMonConnectionChangeNotification indicates that a
connection to a target (not to a hop along the path
to a target) has either failed on establishment or 
been lost and when reestablished.  Precisely, this
has resulted in rttMonCtrlOperConnectionLostOccurred
changing value.

If History is not being collected, the instance values 
for the rttMonHistoryCollectionAddress object will not 
be valid.  When RttMonRttType is not 'echo' or 'pathEcho'
the rttMonHistoryCollectionAddress object will be null."
Variables:
  1: rttMonCtrlAdminTag
     Syntax="Display String (SIZE(0..16))"
     Descr="A string which is used by a managing application to 
identify the RTT target.  This string is inserted into 
notifications, but has no other significance to the 
agent."
  2: rttMonHistoryCollectionAddress
     Syntax="RttMonTargetAddress  (Octet String) "
     Descr="When the RttMonRttType is 'echo' or 'pathEcho' this
is a string which specifies the address of the target for
the this RTT operation.  For all other values of
RttMonRttType this string will be null.

This address will be the address of the hop along the
path to the rttMonEchoAdminTargetAddress address,
including rttMonEchoAdminTargetAddress address, or just
the rttMonEchoAdminTargetAddress address, when the
path information is not collected.  This behavior is
defined by the rttMonCtrlAdminRttType object.

The interpretation of this string depends on the type
of RTT operation selected, as specified by the
rttMonEchoAdminProtocol object.

See rttMonEchoAdminTargetAddress for a complete
description."
  3: rttMonCtrlOperConnectionLostOccurred
     Syntax="TruthValue  (Integer) "
     Descr="This object will only change its value when the
RttMonRttType is 'echo' or 'pathEcho'.

This object is set to true when the RTT connection fails 
to be established or is lost, and set to false when a 
connection is reestablished.  When the RttMonRttType
is 'pathEcho', connection loss applies only to the
rttMonEchoAdminTargetAddress and not to intermediate
hops to the Target.

When this value changes and 
rttMonReactAdminConnectionEnable is true, a reaction 
will occur. 

If a trap is sent it is a 
rttMonConnectionChangeNotification."
EDESC
#
#
#
EVENT rttMonTimeoutNotific .1.3.6.1.4.1.9.9.42.2.0.2 "LOGONLY" Normal
FORMAT rttMonTimeoutNotification received from enterprise $E with $# arguments: rttMonCtrlAdminTag=$1; rttMonHistoryCollectionAddress=$2; rttMonCtrlOperTimeoutOccurred=$3
SDESC
Long Descr.:
"A rttMonTimeoutNotification indicates the occurrence of 
a timeout for a RTT operation, and it indicates the 
clearing of such a condition by a subsequent RTT 
operation. Precisely, this has resulted in 
rttMonCtrlOperTimeoutOccurred changing value. 

When the RttMonRttType is 'pathEcho', this 
notification will only be sent when the timeout 
occurs during an operation to the target and not to
a hop along the path to the target.  This also 
applies to the clearing of the timeout. 

If History is not being collected, the instance values 
for the rttMonHistoryCollectionAddress object will not 
be valid.  When RttMonRttType is not 'echo' or 'pathEcho'
the rttMonHistoryCollectionAddress object will be null."
Variables:
  1: rttMonCtrlAdminTag
     Syntax="Display String (SIZE(0..16))"
     Descr="A string which is used by a managing application to 
identify the RTT target.  This string is inserted into 
notifications, but has no other significance to the 
agent."
  2: rttMonHistoryCollectionAddress
     Syntax="RttMonTargetAddress  (Octet String) "
     Descr="When the RttMonRttType is 'echo' or 'pathEcho' this
is a string which specifies the address of the target for
the this RTT operation.  For all other values of
RttMonRttType this string will be null.

This address will be the address of the hop along the
path to the rttMonEchoAdminTargetAddress address,
including rttMonEchoAdminTargetAddress address, or just
the rttMonEchoAdminTargetAddress address, when the
path information is not collected.  This behavior is
defined by the rttMonCtrlAdminRttType object.

The interpretation of this string depends on the type
of RTT operation selected, as specified by the
rttMonEchoAdminProtocol object.

See rttMonEchoAdminTargetAddress for a complete
description."
  3: rttMonCtrlOperTimeoutOccurred
     Syntax="TruthValue  (Integer) "
     Descr="This object will change its value for all
RttMonRttTypes.

This object is set to true when an operation times out, 
and set to false when an operation completes under 
rttMonCtrlAdminTimeout.  When this value changes, a 
reaction may occur, as defined by 
rttMonReactAdminTimeoutEnable. 

When the RttMonRttType is 'pathEcho', this timeout
applies only to the rttMonEchoAdminTargetAddress and
not to intermediate hops to the Target.

If a trap is sent it is a rttMonTimeoutNotification."
EDESC
#
#
#
EVENT rttMonThresholdNotif .1.3.6.1.4.1.9.9.42.2.0.3 "LOGONLY" Normal
FORMAT rttMonThresholdNotification received from enterprise $E with $# arguments: rttMonCtrlAdminTag=$1; rttMonHistoryCollectionAddress=$2; rttMonCtrlOperOverThresholdOccurred=$3
SDESC
Long Descr.:
"A rttMonThresholdNotification indicates the 
occurrence of a threshold violation for a RTT operation,
and it indicates the previous violation has subsided for
a subsequent RTT operation.  Precisely, this has resulted
in rttMonCtrlOperOverThresholdOccurred changing value.  

When the RttMonRttType is 'pathEcho', this 
notification will only be sent when the threshold
violation occurs during an operation to the target and
not to a hop along the path to the target.  This also
applies to the subsiding of a threshold condition.

If History is not being collected, the instance values 
for the rttMonHistoryCollectionAddress object will not 
be valid.  When RttMonRttType is not 'echo' or 'pathEcho'
the rttMonHistoryCollectionAddress object will be null."
Variables:
  1: rttMonCtrlAdminTag
     Syntax="Display String (SIZE(0..16))"
     Descr="A string which is used by a managing application to 
identify the RTT target.  This string is inserted into 
notifications, but has no other significance to the 
agent."
  2: rttMonHistoryCollectionAddress
     Syntax="RttMonTargetAddress  (Octet String) "
     Descr="When the RttMonRttType is 'echo' or 'pathEcho' this
is a string which specifies the address of the target for
the this RTT operation.  For all other values of
RttMonRttType this string will be null.

This address will be the address of the hop along the
path to the rttMonEchoAdminTargetAddress address,
including rttMonEchoAdminTargetAddress address, or just
the rttMonEchoAdminTargetAddress address, when the
path information is not collected.  This behavior is
defined by the rttMonCtrlAdminRttType object.

The interpretation of this string depends on the type
of RTT operation selected, as specified by the
rttMonEchoAdminProtocol object.

See rttMonEchoAdminTargetAddress for a complete
description."
  3: rttMonCtrlOperOverThresholdOccurred
     Syntax="TruthValue  (Integer) "
     Descr="This object will change its value for all 
RttMonRttTypes.

This object is changed by operation completion times over
threshold, as defined by rttMonReactAdminThresholdType.  
When this value changes, a reaction may occur, as defined 
by rttMonReactAdminThresholdType. 

If a trap is sent it is a rttMonThresholdNotification."
EDESC
#
#
#
EVENT ciscoConfigManEvent .1.3.6.1.4.1.9.9.43.2.0.1 "IGNORE" Normal
FORMAT ciscoConfigManEvent received from enterprise $E with $# arguments: ccmHistoryEventCommandSource=$1; ccmHistoryEventConfigSource=$2; ccmHistoryEventConfigDestination=$3
SDESC
"Notification of a configuration management event as recorded in 
ccmHistoryEventTable."
EDESC
#
#
#
EVENT T1LoopStatusNotifica .1.3.6.1.4.1.9.9.44.3.0.1 "Status Alarms" Minor
FORMAT T1LoopStatusNotification received from enterprise $E with $# arguments: ciscoICsuDsuT1LoopStatus=$1
SDESC
"Indicates a change in T1 Loop Status."
EDESC
#
#
#
EVENT Sw56kLoopStatusNotif .1.3.6.1.4.1.9.9.44.3.0.2 "Status Alarms" Minor
FORMAT Sw56kLoopStatusNotification received from enterprise $E with $# arguments: ciscoICsuDsuSw56kLoopStatus=$1
SDESC
"Indicates a change in Sw56k Loop Status."
EDESC
#
#
#
EVENT cieTestComplet .1.3.6.1.4.1.9.9.52.2.0.1 "Status Alarms" Normal
FORMAT cieTestCompletion trap received from enterprise $E with $# arguments: cieTestConnSessionStatus=$1; cieTestConnProtectedAddr=$2; cieTestConnUnprotectedAddr=$3
SDESC
"A cieTestCompletion trap is sent at the completion of a crypto session
 establishment if such a trap was requested when the sequence was initiated."
EDESC
#
#
#
EVENT caemTermperatureNot .1.3.6.1.4.1.9.9.61.2.0.1 "Status Alarms" Warning
FORMAT caemTemperatureNotification received from enterprise $E with $# arguments:ciscoEnvMonTemperatureStatusDescr=$1; ciscoEnvMonTemperatureState=$2
SDESC
"A caemTemperatureNotification is sent if the over temperature condition is
 detected in the managed system.   This is a replacement for the
 ciscoEnvMonTemperatureNotification trap because the information
 'ciscoEnvMonTemperatureStatusValue' required by the trap is not available
 in the managed system."
EDESC
#
#
#
EVENT cvdcPoorQoVNotification .1.3.6.1.4.1.9.9.63.2 "Status Alarms" Warning
FORMAT cvdcPoorQoVNotification received from enterprise $E with $# arguments: cvVoIPCallHistoryConnectionId=$1; cvVoIPCallHistoryIcpif=$2
SDESC
"Poor quality of voice notification. A cvdcPoorQoVNotification is sent at the
 call disconnection time if the value of cvVoIPCallHistoryIcpif exceeds the
 value of cvVoIPPeerCfgIcpif in the call associated peer."
EDESC
#
#
#
EVENT vmVmpsChange .1.3.6.1.4.1.9.9.68.2.0.1 "Status Alarms" Warning
FORMAT vmVmpsChange trap received from enterprise $E with $# arguments: vmVmpsIpAddress=$1
SDESC
" A VMPS change notification is generated whenever vmVmpsChanges is
 incremented. The IP address of the new VMPS is sent."
EDESC
#
#
#
EVENT cdeTrapTConnUpDown .1.3.6.1.4.1.9.9.74.2.0.1 "Status Alarms" Warning
FORMAT cdeTrapTConnUpDown trap received from enterprise $E with $# arguements: dlswTConnOperState=$1
SDESC
"This cdeTrapTConnUpDown trap is sent each time a transport connection changes
 state to `connected' or `disconnected'.  The emission of this trap is
 controlled by cdeTrapCntlTConn."
EDESC
#
#
#
EVENT cdeTrapCircuitUpDown .1.3.6.1.4.1.9.9.74.2.0.2 "Status Alarms" Warning
FORMAT cdeTrapCircuitUpDown trap received from enterprise $E with $# arguments: dlswCircuitState =$1
SDESC
"This cdeTrapCircuitUpDown trap is sent each time a circuit changes state to
 `connected' or `disconnected'.  The emission of this trap is controlled by
 cdeTrapCntlCircuit."
EDESC
#
#
#
EVENT cHsrpStateChange .1.3.6.1.4.1.9.9.106.2.0.1 "Status Alarms" Normal
FORMAT HSRP status change. HSRP state is $1 $*
SDESC
Long Descr.:
"A cHsrpStateChange notification is sent when a
cHsrpGrpStandbyState transitions to either active or
standby state, or leaves active or standby state. There
will be only one notification issued when the state change 
is from standby to active and vice versa."
Variables:
  1: cHsrpGrpStandbyState
     Syntax="HsrpState  (Integer) "
     Descr="The current HSRP state of this group on this interface."
EDESC
#
#
#
EVENT cbgpFsmStateChange .1.3.6.1.4.1.9.9.187.0.1 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The BGP cbgpFsmStateChange notification is generated
for every BGP FSM state change. The bgpPeerRemoteAddr
value is attached to the notification object ID."
Variables:
  1: bgpPeerLastError
     Syntax="Octet String (SIZE(2))"
     Descr="The last error code and subcode seen by this
peer on this connection. If no error has
occurred, this field is zero. Otherwise, the
first byte of this two byte OCTET STRING
contains the error code; the second contains
the subcode."
  2: bgpPeerState
     Syntax="Integer"
     Descr="The bgp peer connection state. "
  3: cbgpPeerLastErrorTxt
     Syntax="SnmpAdminString"
     Descr="Implementation specific error description for
bgpPeerLastErrorReceived."
  4: cbgpPeerPrevState
     Syntax="Integer"
     Descr="The BGP peer connection previous state."
EDESC
#
#
#
EVENT cbgpBackwardTransition .1.3.6.1.4.1.9.9.187.0.2 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The cbgpBackwardTransition Event is generated when the
BGP FSM moves from a higher numbered state to a lower
numbered state. The bgpPeerRemoteAddr value is attached
to the notification object ID."
Variables:
  1: bgpPeerLastError
     Syntax="Octet String (SIZE(2))"
     Descr="The last error code and subcode seen by this
peer on this connection. If no error has
occurred, this field is zero. Otherwise, the
first byte of this two byte OCTET STRING
contains the error code; the second contains
the subcode."
  2: bgpPeerState
     Syntax="Integer"
     Descr="The bgp peer connection state. "
  3: cbgpPeerLastErrorTxt
     Syntax="SnmpAdminString"
     Descr="Implementation specific error description for
bgpPeerLastErrorReceived."
  4: cbgpPeerPrevState
     Syntax="Integer"
     Descr="The BGP peer connection previous state."
EDESC
#
#
#
EVENT cbgpPrefixThresholdExceeded .1.3.6.1.4.1.9.9.187.0.3 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The cbgpPrfefixMaxThresholdExceeded notification is
generated when prefix count exceeds the configured
warning threshold on a session for an address
family. The bgpPeerRemoteAddr, cbgpPeerAddrFamilyAfi
and cbgpPeerAddrFamilySafi values are attached to the
notification object ID."
Variables:
  1: cbgpPeerPrefixAdminLimit
     Syntax="Unsigned32 (1..4294967295)"
     Descr="Max number of route prefixes accepted for an address
family on this connection."
  2: cbgpPeerPrefixThreshold
     Syntax="Unsigned32 (1..100)"
     Descr="Prefix threshold value (%) for an address family
on this connection at which warning message stating
the prefix count is crossed the threshold or 
corresponding SNMP notification is generated."
EDESC
#
#
#
EVENT cbgpPrefixThresholdClear .1.3.6.1.4.1.9.9.187.0.4 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The cbgpPrefixThresholdClear notification is
generated when prefix count drops below the configured
clear threshold on a session for an address family once
cbgpPrefixThresholdExceeded is generated. This won't
be generated if the peer session goes down after the
generation of cbgpPrefixThresholdExceeded.
The bgpPeerRemoteAddr, cbgpPeerAddrFamilyAfi and
cbgpPeerAddrFamilySafi values are attached to the
notification object ID."
Variables:
  1: cbgpPeerPrefixAdminLimit
     Syntax="Unsigned32 (1..4294967295)"
     Descr="Max number of route prefixes accepted for an address
family on this connection."
  2: cbgpPeerPrefixClearThreshold
     Syntax="Unsigned32 (1..100)"
     Descr="Prefix threshold value (%) for an address family
on this connection at which SNMP clear notification
is generated if prefix threshold notification is
already generated."
EDESC
#
#
#
EVENT llcCcStatusChange .1.3.6.1.4.1.9.10.8.2.0.1 "Status Alarms" Warning
FORMAT llcCcStatusChange trap received from enterprise $E with $# arguments: llcCcOperState=$1; llcCcOperLastFailTime=$2; llcCcOperLastFailCause=$3; llcCcOperLastFailFRMRInfo=$4
SDESC
"This trap indicates that the state of an LLC connection component 
has transitioned to normal(3) or aDM(1)."
EDESC
#
#
#
EVENT TConnPartnerReject .1.3.6.1.4.1.9.10.9.1.7.0.1 "Status Alarms" Warning
FORMAT TConnPartnerReject trap received from enterprise $E with $# arguments: ciscoDlswTConnOperTDomain=$1; ciscoDlswTConnOperRemoteTAddr=$2
SDESC
"This trap is sent each time a transport connection is rejected by 
a partner DLSw during Capabilities Exchanges."
EDESC
#
#
#
EVENT TConnProtViolation .1.3.6.1.4.1.9.10.9.1.7.0.2 "Status Alarms" Minor
FORMAT TConnProtViolation trap received from enterprise $E with $# arguments: ciscoDlswTConnOperTDomain=$1; ciscoDlswTConnOperRemoteTAddr=$2
SDESC
"This trap is sent each time a protocol violation is detected for a 
transport connection."
EDESC
#
#
#
EVENT TConnUp .1.3.6.1.4.1.9.10.9.1.7.0.3 "Status Alarms" Minor
FORMAT TConnUp trap received from enterprise $E with $# arguments: ciscoDlswTConnOperTDomain=$1; ciscoDlswTConnOperRemoteTAddr=$2
SDESC
"This trap is sent each time a transport connection enters `connected' 
state."
EDESC
#
#
#
EVENT TconnDown .1.3.6.1.4.1.9.10.9.1.7.0.4 "Status Alarms" Warning
FORMAT TconnDown trap received from enterprise $E with $# arguments: ciscoDlswTConnOperTDomain=$1; ciscoDlswTConnOperRemoteTAddr=$2
SDESC
"This trap is sent each time a transport connection enters 
`disconnected' state."
EDESC
#
#
#
EVENT DlswTrapCircuitUp .1.3.6.1.4.1.9.10.9.1.7.0.5 "Status Alarms" Normal
FORMAT DlswTrapCircuitUp trap received from enterprise $E with $# arguments: ciscoDlswCircuitS1Mac=$1; ciscoDlswCircuitS1Sap=$2; ciscoDlswCircuitS2Mac=$3; ciscoDlswCircuitS2Sap=$4
SDESC
"This trap is sent each time a circuit enters `connected' state."
EDESC        
EVENT DlswtrapCircuitDown .1.3.6.1.4.1.9.10.9.1.7.0.6 "LOGONLY" Normal
FORMAT DlswtrapCircuitDown trap received from enterprise $E with $# arguments: ciscoDlswCircuitS1Mac=$1; ciscoDlswCircuitS1Sap=$2; ciscoDlswCircuitS2Mac=$3; ciscoDlswCircuitS2Sap=$4
SDESC
Long Descr.:
"This trap is sent each time a circuit enters
`disconnected' state."
Variables:
  1: ciscoDlswCircuitS1Mac
     Syntax="MacAddress  (Octet String) (SIZE(6))"
     Descr="The MAC Address of End Station 1 (S1) used for this circuit."
  2: ciscoDlswCircuitS1Sap
     Syntax="Octet String (SIZE(1))"
     Descr="The SAP at End Station 1 (S1) used for this circuit."
  3: ciscoDlswCircuitS2Mac
     Syntax="MacAddress  (Octet String) (SIZE(6))"
     Descr="The MAC Address of End Station 2 (S2) used for this circuit."
  4: ciscoDlswCircuitS2Sap
     Syntax="Octet String (SIZE(1))"
     Descr="The SAP at End Station 2 (S2) used for this circuit."
EDESC
#
#
#
EVENT acctngFileNearlyFull .1.3.6.1.4.1.9.10.17.3.0.1 "Status Alarms" Warning
FORMAT acctngFileNearlyFull trap received from enterprise $E with $# arguments: acctngFileName=$1; acctngFileMaximumSize=$2; acctngControlTrapThreshold=$3
SDESC
"An acctngFileNearlyFull trap is an indication that the size of the file into
 which accounting information is currently being collected has exceeded the
 threshold percentage of its maximum file size. This notification is generated
 only at the time of the transition from not-exceeding to exceeding."
EDESC
#
#
#
EVENT acctngFileFull .1.3.6.1.4.1.9.10.17.3.0.2 "Status Alarms" Critical
FORMAT acctngFileFull trap received from enterprise $E with $# arguments: acctngFileName=$1; acctngFileMaximumSize=$2
SDESC
"An acctngFileFull trap is an indication that the size of the file into which
 accounting information is currently being collected has transistioned to its
 maximum file size.  This notification is generated at the time of the
 transition from not-full to full, and periodically thereafter until such
 time as collection of data is no longer inhibited by the file full condition."
EDESC
#
#
#
EVENT cpmDS0BusyoutNotification .1.3.6.1.4.1.9.10.19.2.0.1 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This notification is sent when there is a state change
in cpmDS0BusyoutStatus object."
Variables:
  1: cpmDS0BusyoutStatus
     Syntax="Integer"
     Descr="The busyout status of the DSO. 

noBusyout      - The DS0 is not busied out nor has a
busyout pending.
busyoutPending - The DS0 has a busyout request pending. It
will shutdown when it next transitions
to idle(2) cpmDS0OperStatus.
busiedOut      - The DS0 is out of service due to a busyout
request.

This object is needed to reflect busyouts initiated other than
administrativly, as described in cpmDS0BusyoutSource.
"
  2: cpmDS0BusyoutTime
     Syntax="TimeStamp  (Timeticks) "
     Descr="Value of sysUpTime when the most recent busyout request
was issued for this DS0. The value is zero indicates no
busyout request has been issued.
"
  3: cpmDS0BusyoutSource
     Syntax="Integer"
     Descr="The source of the busyout request either pending or
active for the DSO.

none     - The DS0 is not busied out nor has a busyout
request pending
local    - The DS0 is busied out or has a pending request
due to an adminstrative command issued locally.
internal - The DS0 is busied out or has a pending request
due to internal system processing.
remote   - The DS0 is busied out or has a pending request
due to a request from the peer switch.
"
  4: cpmDS0InterfaceIndex
     Syntax="InterfaceIndexOrZero  (Integer) (0..2147483647)"
     Descr="This is the value of ifIndex in the ifTable for this DS0."
EDESC
#
#
#
EVENT cpmDS1LoopbackNotification .1.3.6.1.4.1.9.10.19.2.0.2 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This notification is sent when there is a state change
in dsx1LineStatus object of RFC1406-MIB."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
EDESC
#
#
#
EVENT ciscoHealthMonNotification .1.3.6.1.4.1.9.10.28.3.0.1 "Cisco 5800" Normal
FORMAT Notification Type $1 (modemUtil(1), trunkUtil(2), iomemUtil(3)) dello shelf $2 con IP $3 $4 con valore $5 ha superato la soglia $6
SDESC
Long Descr.:
"A ciscoHealthMonNotification is sent if the measured
utilization has crossed the threshold value. It will be generated
when the value rises above the threshold. ciscoHealthMonShelfId and
ciscoHealthMonAddress are optional entries. This entry is valid only
if the notification generated for the monitoring types set on the
router shelf. This entry will not have anything if notification is
generated for the monitoring types set on the system controller."
Variables:
  1: ciscoHealthMonStatusType
     Syntax="Integer (1..3)"
     Descr="Monitoring type
modemUtil(1), trunkUtil(2), iomemUtil(3)"
  2: ciscoHealthMonShelfId
     Syntax="Integer"
     Descr="This is the shelf-id of the monitored shelf."
  3: ciscoHealthMonAddress
     Syntax="IP Address"
     Descr="This is the IP address of the monitored shelf."
  4: ciscoHealthMonDescr
     Syntax="Display String (SIZE(0..32))"
     Descr="Textual description of the utilization type being
monitored on a shelf. This description is a short textual label, 
suitable as a human-sensible identification for the rest of the 
information in the entry."
  5: ciscoHealthMonValue
     Syntax="Gauge"
     Descr="The current value for the monitoring type on a
monitored shelf."
  6: ciscoHealthMonThreshold
     Syntax="Integer (1..100)"
     Descr="This is the monitoring threshold value configured
through the command line. 

If the configured monitoring type is io-mem, rmon alarm on the
shelf will use this value as the threshold for generating the
event. Shelf will be asked to send this generated event trap to the
system controller. Once the system controller receives this trap, 
trap will converted to the health monitor mib format and sent to the
management station.

If the configured monitoring types are trunk and/or modem,
ciscoHealthMonValue is compared with this value and if
ciscoHealthMonValue exceeds this value, a notification is sent to the
configured management station. Also, a notification will be sent to
the management station if the current monitoring value is less than
the configured threshold and the previous monitored value is greater
than the configured threshold value."
EDESC
#
#
#
EVENT CW_App_Log .1.3.6.1.4.1.9.14.0.1 "CiscoWorks Alarms" Normal
FORMAT $1: $2
SDESC
Events that are generated by CiscoWorks applications
(including nmlogd, nmpolld, nmeventd, nmdevmond and 
logpurg) and are logged in syslogd facility LOCAL6 
and LOCAL7.
EDESC
#
#
#
EVENT CW_Device_Log .1.3.6.1.4.1.9.14.0.2 "CiscoWorks Alarms" Normal
FORMAT $1: $2
SDESC
Events that are generated by cisco devices and are 
logged in syslogd facility LOCAL6 and LOCAL7.
EDESC
#
#
#
EVENT RME_POPUP_Message_on_Dial_Shelf .1.3.6.1.4.1.9.14.0.100 "CCR Alarms" Critical
FORMAT Received event $E. $1 *** ATTIVARE PROCEDURA ***
DISPLAY $A : $1 *** ATTIVARE PROCEDURA ***
SDESC
Questo evento viene generato da un Syslog Message di RME a fronte del reset di uno slot nel Dial
 Shelf di un AS5800.
EDESC
#
#
#
EVENT RME_POPUP_Message_AS5800_RELOAD .1.3.6.1.4.1.9.14.0.101 "CCR Alarms" Critical
FORMAT Received event $E. AS5800 ** RELOAD ** : $1
DISPLAY WARNING ** $A : $1
SDESC
Questo Evento viene generato da CiscoWorks 2000 ( RME ) a fronte di un Syslog Message di Reload .
EDESC
#
#
#
EVENT RME_POPUP_Message_Controller_E1_DOWN .1.3.6.1.4.1.9.14.0.102 "NAS: Controller E1 Down" Major
FORMAT Received event $E. $1 . CHIUDERE I FLUSSI
SDESC
Questo Evento viene generato da CiscoWorks 2000 a fronte della ricezione di un messaggio di Syslog
relativo ad un cambio di stato ( UP/DOWN) di uno qualsiasi dei Controller E1 presenti sugli AS5800.
EDESC
#
#
#
EVENT RME_POPUP_Message_AS5800_POWER_ON .1.3.6.1.4.1.9.14.0.103 "Cisco 5800" Major
FORMAT Received event $E. AS5800 ** POWER ON ** : $1
DISPLAY WARNING ** $A : $1
SDESC
Questo Evento viene generato da CiscoWorks 2000 ( RME ) a fronte di un Syslog Message di Power On 
utilizzando il syslog message di DSIP HELLO inviato dallo slot 0 o 1 di un AS5800 dopo un Power On  .
EDESC
#
#
#
EVENT RME_POPUP_Message_Router_RELOAD .1.3.6.1.4.1.9.14.0.104 "CCR Alarms" Critical
FORMAT Received event $E. ROUTER ** RELOAD ** : $1
DISPLAY WARNING ** $A : $1 *** ATTIVARE PROCEDURA ***
SDESC
Questo Evento viene generato da CiscoWorks 2000 ( RME ) a fronte di un Syslog Message di Reload 
di un Router.
EDESC
#
#
#
EVENT RME_POPUP_Message_Switch_RELOAD .1.3.6.1.4.1.9.14.0.105 "CCR Alarms" Critical
FORMAT Received event $E. SWITCH ** RELOAD ** : $1
DISPLAY WARNING ** $A : $1 *** ATTIVARE PROCEDURA ***
SDESC
Questo Evento viene generato da CiscoWorks 2000 ( RME ) a fronte di un Syslog Message di Reload 
di uno Switch.
EDESC
#
#
#
EVENT RME_POPUP_Message_POWER_SUPPLY_FAILURE .1.3.6.1.4.1.9.14.0.107 "CCR Alarms" Warning
FORMAT Received event $E. POWER SUPPLY FAILURE : $1
DISPLAY $A : $1 *** ATTIVARE PROCEDURA ***
SDESC
Questo Evento viene generato da CiscoWorks 2000 ( RME ) a fronte di un Syslog Message di 
Power Supply Failure .
EDESC
#
#
#
EVENT Router_Insert_Remove_Card .1.3.6.1.4.1.9.14.0.108 "CCR Alarms" Warning
FORMAT Received event $E. $# args: $*
DISPLAY ** WARNING ** $A : $1
SDESC
EDESC
#
#
#
EVENT RME_POPUP_Message_SC2200_Signal_Path .1.3.6.1.4.1.9.14.0.111 "SEGNALAZIONI DA SC2200" Major
FORMAT Received event $E. $1
SDESC
Questo Evento viene generato da CiscoWorks 2000 a fronte della ricezione di un messaggio di Syslog
relativo ad un cambio di stato ( UP/DOWN) di uno qualsiasi dei Controller E1 presenti sugli AS58000
connessi ad SC2200.
EDESC
#
#
#
EVENT RME_POPUP_Message_AS5800_HANGUP .1.3.6.1.4.1.9.14.0.112 "CCR Alarms" Critical
FORMAT Received event $E. ROUTER ** HANGUP ** : $1
DISPLAY *** ROUTER CRITICAL *** $A : $1
SDESC
Questo Evento viene generato da CiscoWorks 2000 ( RME ) a fronte di un Syslog Message Memory
Allocation Failure .
EDESC
#
#
#
EVENT RME_POPUP_Message_ISDN_Channel_Unavailable .1.3.6.1.4.1.9.14.0.114 "Cisco 5800" Warning
FORMAT Received event $E. ISDN CHANNEL UNAVAILABLE : $1
DISPLAY $A : *** ISDN CHANNEL UNAVAILABLE *** : $1
SDESC
Questo Evento viene generato da CiscoWorks 2000 ( RME ) a fronte di un Syslog Message ISDN 
Channel Unavailable .
EDESC
#
#
#
EVENT RME_POPUP_Message_SMC_ALL_DEAD_SERVERS .1.3.6.1.4.1.9.14.0.115 "RADIUS CHECK" Warning
FORMAT SMC ALL DEAD SERVERS : $1
DISPLAY ** WARNING ** $A : $1
SDESC
Questo Evento viene generato da CiscoWorks 2000 ( RME ) a fronte di un Syslog Message SMC 
ALL DEAD SERVERS .
EDESC
#
#
#
EVENT AS5800_NO_ACTIVE_CALLS .1.3.6.1.4.1.9.14.0.117 "Cisco 5800" Normal
FORMAT Received event $E. args: $1
DISPLAY WARNING : *** $A : $1 ***
SDESC
Evento di Test
EDESC
#
#
#
EVENT SC2200_POPUP_Message_PC_Unavailable .1.3.6.1.4.1.9.14.0.118 "SC2200" Major
FORMAT Received event $E. $*
DISPLAY $A : $1
SDESC
Questo Evento viene generato da CiscoWorks 2000 a fronte della ricezione di una trap cmAlarm da
SC2200 .
EDESC
#
#
#
EVENT SC200_POPUP_Message_Overload_Condition .1.3.6.1.4.1.9.14.0.119 "SC2200" Major
FORMAT Received event $E. $*
DISPLAY $A : $1
SDESC
Questo Evento viene generato da CiscoWorks 2000 a fronte della ricezione di una trap equipmentError da
SC2200 .
EDESC
#
#
#
EVENT RME_POPUP_Message_Router_Card_Failure .1.3.6.1.4.1.9.14.0.120 "CCR Alarms" Major
FORMAT Received event $E : $1
DISPLAY $A : $1
SDESC
Questo Evento viene generato da CiscoWorks 2000 ( RME ) a fronte di un Syslog Message FBINFO , 
LCINFO CRASH o GRP Reset Card
EDESC
#
#
#
EVENT Cisco_IPBA_VRF_Down_Event .1.3.6.1.4.1.9.14.0.666 "Cisco IPBA" Major
FORMAT IPBA VRF Control. args: $1
EXEC /usr/bin/echo "$x : $X - $A **** CRITICAL **** $1" >> /export/home/ccrivrea/VRF_IPBA.log
DISPLAY $A *** CRITICAL *** \n $1
SDESC
Evento generato da script di Luca Migliorin per il controllo VRF su IPBA
EDESC
#
#
#
EVENT OV_Default .1.3.6.1.4.1.11.2.17.1.* "Error Alarms" Normal
FORMAT Received event $o, no format in trapd.conf. $# args: $*
SDESC
This is the default event format used when an HP OpenView
event object identifier is received for which no format has
been configured (i.e.  no event definition exists).

To configure the event object identifier, select HP OpenView
Network Node Manager's "Options:Event Configuration" menu
item, then "Edit:Add->Event..."  and create a definition.

If you running under a LANG which is not English(C) and are
not seeing a recently-installed third-party application
event, the third-party install script may have only made the
changes to your English C/trapd.conf file.  To merge-in
these changes to your non-english trapd.conf file, type
   "xnmevents -load /etc/opt/OV/share/conf/C/trapd.conf".

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_ifInDiscards_juniper .1.3.6.1.4.1.11.2.17.1.0.1001 "IGNORE" Minor
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9, low of $11
EXEC threshold_monitor.sh ".1.3.6.1.2.1.2.2.1.2.$6" $r 3001 Minor "$5;$7;$8;$9;$11;$13;$14"
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_ifInDiscards_juniper_R .1.3.6.1.4.1.11.2.17.1.0.1002 "IGNORE" Normal
FORMAT $5.$6 threshold rearmed ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
SDESC
This event is generated by HP OpenView data collector when a
sampled value drops below a preconfigured level, after
generating an event for exceeding a value.  (See also
specific event #58720263 for value exceeded events).  The
user may also configure rearm events with specific trap
numbers in the even range of 2 to 10000.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the rearm event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The instance
    7) The rearm value
    8) The sample value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The rearm operator
   14) The rearm count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_ifOutDiscards_juniper .1.3.6.1.4.1.11.2.17.1.0.1003 "IGNORE" Minor
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9, low of $11
EXEC threshold_monitor.sh ".1.3.6.1.2.1.2.2.1.2.$6" $r 3001 Minor "$5;$7;$8;$9;$11;$13;$14"
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_ifOutDiscards_juniper_R .1.3.6.1.4.1.11.2.17.1.0.1004 "IGNORE" Normal
FORMAT $5.$6 threshold rearmed ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
SDESC
This event is generated by HP OpenView data collector when a
sampled value drops below a preconfigured level, after
generating an event for exceeding a value.  (See also
specific event #58720263 for value exceeded events).  The
user may also configure rearm events with specific trap
numbers in the even range of 2 to 10000.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the rearm event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The instance
    7) The rearm value
    8) The sample value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The rearm operator
   14) The rearm count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_ifInErrors_juniper .1.3.6.1.4.1.11.2.17.1.0.1005 "IGNORE" Minor
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9, low of $11
EXEC threshold_monitor.sh ".1.3.6.1.2.1.2.2.1.2.$6" $r 3001 Minor "$5;$7;$8;$9;$11;$13;$14"
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_ifInErrors_juniper_R .1.3.6.1.4.1.11.2.17.1.0.1006 "IGNORE" Normal
FORMAT $5.$6 threshold rearmed ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
SDESC
This event is generated by HP OpenView data collector when a
sampled value drops below a preconfigured level, after
generating an event for exceeding a value.  (See also
specific event #58720263 for value exceeded events).  The
user may also configure rearm events with specific trap
numbers in the even range of 2 to 10000.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the rearm event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The instance
    7) The rearm value
    8) The sample value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The rearm operator
   14) The rearm count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_ifOutErrors_juniper .1.3.6.1.4.1.11.2.17.1.0.1007 "IGNORE" Minor
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9, low of $11
EXEC threshold_monitor.sh ".1.3.6.1.2.1.2.2.1.2.$6" $r 3001 Minor "$5;$7;$8;$9;$11;$13;$14"
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_ifOutErrors_juniper_R .1.3.6.1.4.1.11.2.17.1.0.1008 "IGNORE" Normal
FORMAT $5.$6 threshold rearmed ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
SDESC
This event is generated by HP OpenView data collector when a
sampled value drops below a preconfigured level, after
generating an event for exceeding a value.  (See also
specific event #58720263 for value exceeded events).  The
user may also configure rearm events with specific trap
numbers in the even range of 2 to 10000.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the rearm event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The instance
    7) The rearm value
    8) The sample value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The rearm operator
   14) The rearm count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_ifIn%util_juniper .1.3.6.1.4.1.11.2.17.1.0.1009 "IGNORE" Warning
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9, low of $11
EXEC threshold_monitor.sh ".1.3.6.1.2.1.2.2.1.2.$6" $r 3001 Warning "$5;$7;$8;$9;$11;$13;$14"
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_IfIn%util_juniper_R .1.3.6.1.4.1.11.2.17.1.0.1010 "IGNORE" Normal
FORMAT $5.$6 threshold rearmed ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
SDESC
This event is generated by HP OpenView data collector when a
sampled value drops below a preconfigured level, after
generating an event for exceeding a value.  (See also
specific event #58720263 for value exceeded events).  The
user may also configure rearm events with specific trap
numbers in the even range of 2 to 10000.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the rearm event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The instance
    7) The rearm value
    8) The sample value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The rearm operator
   14) The rearm count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_ifOut%util_juniper .1.3.6.1.4.1.11.2.17.1.0.1011 "IGNORE" Warning
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9, low of $11
EXEC threshold_monitor.sh ".1.3.6.1.2.1.2.2.1.2.$6" $r 3001 Warning "$5;$7;$8;$9;$11;$13;$14"
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_IfOut%util_juniper_R .1.3.6.1.4.1.11.2.17.1.0.1012 "IGNORE" Normal
FORMAT $5.$6 threshold rearmed ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
SDESC
This event is generated by HP OpenView data collector when a
sampled value drops below a preconfigured level, after
generating an event for exceeding a value.  (See also
specific event #58720263 for value exceeded events).  The
user may also configure rearm events with specific trap
numbers in the even range of 2 to 10000.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the rearm event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The instance
    7) The rearm value
    8) The sample value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The rearm operator
   14) The rearm count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_jnxOperatingTemp .1.3.6.1.4.1.11.2.17.1.0.1013 "IGNORE" Major
FORMAT $5.[$6] threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9, low of $11
EXEC threshold_monitor.sh ".1.3.6.1.4.1.2636.3.1.13.1.5.$6" $r 3001 Major "$5;$7;$8;$9;$11;$13;$14"
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_jnxOperatingTemp_R .1.3.6.1.4.1.11.2.17.1.0.1014 "IGNORE" Normal
FORMAT $5.$6 threshold rearmed ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
SDESC
This event is generated by HP OpenView data collector when a
sampled value drops below a preconfigured level, after
generating an event for exceeding a value.  (See also
specific event #58720263 for value exceeded events).  The
user may also configure rearm events with specific trap
numbers in the even range of 2 to 10000.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the rearm event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The instance
    7) The rearm value
    8) The sample value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The rearm operator
   14) The rearm count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_jnxOperatingCPU .1.3.6.1.4.1.11.2.17.1.0.1015 "IGNORE" Minor
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9, low of $11
EXEC threshold_monitor.sh ".1.3.6.1.4.1.2636.3.1.13.1.5.$6" $r 3001 Minor "$5;$7;$8;$9;$11;$13;$14"
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_jnxOperatingCPU_R .1.3.6.1.4.1.11.2.17.1.0.1016 "IGNORE" Normal
FORMAT $5.$6 threshold rearmed ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
SDESC
This event is generated by HP OpenView data collector when a
sampled value drops below a preconfigured level, after
generating an event for exceeding a value.  (See also
specific event #58720263 for value exceeded events).  The
user may also configure rearm events with specific trap
numbers in the even range of 2 to 10000.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the rearm event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The instance
    7) The rearm value
    8) The sample value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The rearm operator
   14) The rearm count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_jnxOperatingBuffer .1.3.6.1.4.1.11.2.17.1.0.1017 "IGNORE" Minor
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9, low of $11
EXEC threshold_monitor.sh ".1.3.6.1.4.1.2636.3.1.13.1.5.$6" $r 3001 Minor "$5;$7;$8;$9;$11;$13;$14"
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_jnxOperatingBuffer_R .1.3.6.1.4.1.11.2.17.1.0.1018 "IGNORE" Normal
FORMAT $5.$6 threshold rearmed ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
SDESC
This event is generated by HP OpenView data collector when a
sampled value drops below a preconfigured level, after
generating an event for exceeding a value.  (See also
specific event #58720263 for value exceeded events).  The
user may also configure rearm events with specific trap
numbers in the even range of 2 to 10000.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the rearm event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The instance
    7) The rearm value
    8) The sample value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The rearm operator
   14) The rearm count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_jnxOperatingISR .1.3.6.1.4.1.11.2.17.1.0.1019 "IGNORE" Minor
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9, low of $11
EXEC threshold_monitor.sh ".1.3.6.1.4.1.2636.3.1.13.1.5.$6" $r 3001 Minor "$5;$7;$8;$9;$11;$13;$14"
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_jnxOperatingISR_R .1.3.6.1.4.1.11.2.17.1.0.1020 "IGNORE" Normal
FORMAT $5.$6 threshold rearmed ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
SDESC
This event is generated by HP OpenView data collector when a
sampled value drops below a preconfigured level, after
generating an event for exceeding a value.  (See also
specific event #58720263 for value exceeded events).  The
user may also configure rearm events with specific trap
numbers in the even range of 2 to 10000.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the rearm event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The instance
    7) The rearm value
    8) The sample value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The rearm operator
   14) The rearm count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_jnxOperatingHeap .1.3.6.1.4.1.11.2.17.1.0.1021 "IGNORE" Minor
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9, low of $11
EXEC threshold_monitor.sh ".1.3.6.1.4.1.2636.3.1.13.1.5.$6" $r 3001 Minor "$5;$7;$8;$9;$11;$13;$14"
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_jnxOperatingHeap_R .1.3.6.1.4.1.11.2.17.1.0.1022 "IGNORE" Normal
FORMAT $5.$6 threshold rearmed ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
SDESC
This event is generated by HP OpenView data collector when a
sampled value drops below a preconfigured level, after
generating an event for exceeding a value.  (See also
specific event #58720263 for value exceeded events).  The
user may also configure rearm events with specific trap
numbers in the even range of 2 to 10000.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the rearm event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The instance
    7) The rearm value
    8) The sample value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The rearm operator
   14) The rearm count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT UpLinkPackets .1.3.6.1.4.1.11.2.17.1.0.1023 "J20-GGSN" Critical
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9, low of $11
EXEC threshold_monitor.sh ".1.3.6.1.4.1.2636.3.1.13.1.5.$6" $r 3001 Critical "$5;$7;$8;$9;$11;$13;$14"
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT UpLinkPackets_R .1.3.6.1.4.1.11.2.17.1.0.1024 "IGNORE" Normal
FORMAT $5.$6 threshold rearmed ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
SDESC
This event is generated by HP OpenView data collector when a
sampled value drops below a preconfigured level, after
generating an event for exceeding a value.  (See also
specific event #58720263 for value exceeded events).  The
user may also configure rearm events with specific trap
numbers in the even range of 2 to 10000.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the rearm event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The instance
    7) The rearm value
    8) The sample value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The rearm operator
   14) The rearm count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT DownLinkPackets .1.3.6.1.4.1.11.2.17.1.0.1025 "Threshold Alarms" Critical
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9, low of $11
EXEC threshold_monitor.sh ".1.3.6.1.4.1.2636.3.1.13.1.5.$6" $r 3001 Critical "$5;$7;$8;$9;$11;$13;$14"
DISPLAY CRITICAL : $x $X \n $A - GGSN DownLink Packets threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9, low of $11
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT DownLinkPackets_R .1.3.6.1.4.1.11.2.17.1.0.1026 "IGNORE" Normal
FORMAT $5.$6 threshold rearmed ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
SDESC
This event is generated by HP OpenView data collector when a
sampled value drops below a preconfigured level, after
generating an event for exceeding a value.  (See also
specific event #58720263 for value exceeded events).  The
user may also configure rearm events with specific trap
numbers in the even range of 2 to 10000.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the rearm event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The instance
    7) The rearm value
    8) The sample value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The rearm operator
   14) The rearm count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT PDPContxtFailed .1.3.6.1.4.1.11.2.17.1.0.1027 "IGNORE" Critical
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9, low of $11
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT PDPContxtFailed_R .1.3.6.1.4.1.11.2.17.1.0.1028 "IGNORE" Critical
FORMAT $5.$6 threshold rearmed
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT ggsnFailedActivation .1.3.6.1.4.1.11.2.17.1.0.1029 "J20-GGSN" Critical
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9, low of $11
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT ggsnFailedActivation_R .1.3.6.1.4.1.11.2.17.1.0.1030 "IGNORE" Critical
FORMAT $5.$6 threshold rearmed
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT ggsnApnServiceFail .1.3.6.1.4.1.11.2.17.1.0.1031 "IGNORE" Critical
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9, low of $11
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT ggsnApnServiceFail_R .1.3.6.1.4.1.11.2.17.1.0.1032 "IGNORE" Critical
FORMAT $5.$6 threshold rearmed
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_juniper_int_down .1.3.6.1.4.1.11.2.17.1.0.2001 "J20-GGSN" Major
FORMAT Interface $1 down.
NODES MIOT-G01.ippubbl.wind MIOT-U01.ippubbl.wind RMCC-G01.ippubbl.wind RMID-U01.ippubbl.wind
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_juniper_int_up .1.3.6.1.4.1.11.2.17.1.0.2003 "J20-GGSN" Normal
FORMAT Interface $1 up.
NODES MIOT-G01.ippubbl.wind MIOT-U01.ippubbl.wind RMCC-G01.ippubbl.wind RMID-U01.ippubbl.wind
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_juniper_PowerSupplyFailure .1.3.6.1.4.1.11.2.17.1.0.2005 "Juniper" Critical
FORMAT Power Supply Failure : $1 down.
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_juniper_FanFailure .1.3.6.1.4.1.11.2.17.1.0.2007 "Juniper" Critical
FORMAT Fan Failure : $1
DISPLAY Fan Failure $1
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_juniper_OverTemperature .1.3.6.1.4.1.11.2.17.1.0.2009 "Juniper" Critical
FORMAT Over Temperature : $1
DISPLAY Over Temperature : $1
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_juniper_interface .1.3.6.1.4.1.11.2.17.1.0.2011 "Juniper" Critical
FORMAT INTERFACE STATUS : $1
DISPLAY INTERFACE STATUS : $1
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT Fru-Failed .1.3.6.1.4.1.11.2.17.1.0.2013 "J20-GGSN" Critical
FORMAT FRU-FAILED : $1
DISPLAY FRU-FAILED : $1
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_jnx_DataCollection .1.3.6.1.4.1.11.2.17.1.0.3001 "Juniper" Minor
FORMAT $1
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_jnx_RearmCollect .1.3.6.1.4.1.11.2.17.1.0.3002 "Juniper" Minor
FORMAT $1
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Provisioning_Node_Added .1.3.6.1.4.1.11.2.17.1.0.6001 "Configuration Alarms" Normal
FORMAT Node $1 has been added.
EXEC /export/home/admin/Tools/Node_Add "$1" "Node $1 has been added."
SDESC
EDESC
#
#
#
EVENT OV_ggsntrapNew .1.3.6.1.4.1.11.2.17.1.0.6008 "J20-GGSN" Normal
FORMAT ALARM OPEN: $1
SDESC
EDESC
#
#
#
EVENT OV_ggsntrapChanged .1.3.6.1.4.1.11.2.17.1.0.6009 "J20-GGSN" Normal
FORMAT ALARM CHANGED: $1
SDESC
EDESC
#
#
#
EVENT OV_ggsntrapCleared .1.3.6.1.4.1.11.2.17.1.0.6010 "J20-GGSN" Normal
FORMAT ALARM CLEARED: $1
SDESC
EDESC
#
#
#
EVENT OV_Allineamento_Servers_NNM_Fallito .1.3.6.1.4.1.11.2.17.1.0.7003 "Application Alert Alarms" Major
FORMAT BBIP : Fallita Procedura di Allineamento delle Management Stations di NNM. Vedere il file di log: /opt/IP_PUBBLICA/backup/log/bck
DISPLAY BBIP : Fallita Procedura di Allineamento delle Management Stations di NNM. Vedere il file di log: /opt/IP_PUBBLICA/backup/log/bck
SDESC
EDESC
#
#
#
EVENT OV_Allineamento_Servers_NNM_OK .1.3.6.1.4.1.11.2.17.1.0.7005 "Application Alert Alarms" Normal
FORMAT BBIP : Allineamento delle Management Stations di NNM completato correttamente
DISPLAY BBIP : Allineamento delle Management Stations di NNM completato correttamente
SDESC
EDESC
#
#
#
EVENT OV_Avviso_Chiusura_Mappe .1.3.6.1.4.1.11.2.17.1.0.7007 "Application Alert Alarms" Warning
FORMAT ATTENZIONE!!! Tra due minuti verranno chiuse le mappe di NNM per il backup.
DISPLAY ATTENZIONE!!! Tra due minuti verranno chiuse le mappe di NNM per il backup.
SDESC
EDESC
#
#
#
EVENT OV_DataCollectThresh_J20OperatingTemp .1.3.6.1.4.1.11.2.17.1.0.7013 "IGNORE" Critical
FORMAT $5.[$6] threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9, low of $11
EXEC threshold_monitor_J20.sh ".1.3.6.1.4.1.2636.3.1.13.1.5.$6" $r 3001 Critical "$5;$7;$8;$9;$11;$13;$14"
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_J20OperatingTemp_R .1.3.6.1.4.1.11.2.17.1.0.7014 "IGNORE" Normal
FORMAT $5.$6 threshold rearmed ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
EXEC rearm_monitor_J20.sh ".1.3.6.1.4.1.2636.3.1.13.1.5.$6" $r 3002 Normal "$5;$7;$8;$9;$11;$13;$14"
SDESC
This event is generated by HP OpenView data collector when a
sampled value drops below a preconfigured level, after
generating an event for exceeding a value.  (See also
specific event #58720263 for value exceeded events).  The
user may also configure rearm events with specific trap
numbers in the even range of 2 to 10000.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the rearm event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The instance
    7) The rearm value
    8) The sample value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The rearm operator
   14) The rearm count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_J20OperatingCPU .1.3.6.1.4.1.11.2.17.1.0.7015 "IGNORE" Major
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9, low of $1 1
EXEC threshold_monitor_J20.sh ".1.3.6.1.4.1.2636.3.1.13.1.5.$6" $r 3001 Major "$5;$7;$8;$9;$11;$13;$14"
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_J20OperatingCPU_R .1.3.6.1.4.1.11.2.17.1.0.7016 "IGNORE" Normal
FORMAT $5.$6 threshold rearmed ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
EXEC rearm_monitor_J20.sh ".1.3.6.1.4.1.2636.3.1.13.1.5.$6" $r 3002 Normal "$5;$7;$8;$9;$11;$13;$14"
SDESC
This event is generated by HP OpenView data collector when a
sampled value drops below a preconfigured level, after
generating an event for exceeding a value.  (See also
specific event #58720263 for value exceeded events).  The
user may also configure rearm events with specific trap
numbers in the even range of 2 to 10000.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the rearm event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The instance
    7) The rearm value
    8) The sample value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The rearm operator
   14) The rearm count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_J20OperatingBuffer .1.3.6.1.4.1.11.2.17.1.0.7017 "IGNORE" Major
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9, low of $1 1
EXEC threshold_monitor_J20.sh ".1.3.6.1.4.1.2636.3.1.13.1.5.$6" $r 3001 Major "$5;$7;$8;$9;$11;$13;$14"
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_J20OperatingBuffer_R .1.3.6.1.4.1.11.2.17.1.0.7018 "IGNORE" Normal
FORMAT $5.$6 threshold rearmed ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
EXEC rearm_monitor_J20.sh ".1.3.6.1.4.1.2636.3.1.13.1.5.$6" $r 3002 Normal "$5;$7;$8;$9;$11;$13;$14"
SDESC
This event is generated by HP OpenView data collector when a
sampled value drops below a preconfigured level, after
generating an event for exceeding a value.  (See also
specific event #58720263 for value exceeded events).  The
user may also configure rearm events with specific trap
numbers in the even range of 2 to 10000.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the rearm event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The instance
    7) The rearm value
    8) The sample value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The rearm operator
   14) The rearm count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_J20OperatingHeap .1.3.6.1.4.1.11.2.17.1.0.7021 "IGNORE" Minor
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9, low of $1 1
EXEC threshold_monitor_J20.sh ".1.3.6.1.4.1.2636.3.1.13.1.5.$6" $r 3001 Minor "$5;$7;$8;$9;$11;$13;$14"
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_J20OperatingHeap_R .1.3.6.1.4.1.11.2.17.1.0.7022 "IGNORE" Normal
FORMAT $5.$6 threshold rearmed ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
EXEC rearm_monitor_J20.sh ".1.3.6.1.4.1.2636.3.1.13.1.5.$6" $r 3002 Normal "$5;$7;$8;$9;$11;$13;$14"
SDESC
This event is generated by HP OpenView data collector when a
sampled value drops below a preconfigured level, after
generating an event for exceeding a value.  (See also
specific event #58720263 for value exceeded events).  The
user may also configure rearm events with specific trap
numbers in the even range of 2 to 10000.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the rearm event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The instance
    7) The rearm value
    8) The sample value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The rearm operator
   14) The rearm count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_J20FailureActive .1.3.6.1.4.1.11.2.17.1.0.7023 "J20-GGSN" Critical
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9, low of $1 1
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_J20FailureActive_R .1.3.6.1.4.1.11.2.17.1.0.7024 "J20-GGSN" Normal
FORMAT $5.$6 threshold rearmed ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
SDESC
This event is generated by HP OpenView data collector when a
sampled value drops below a preconfigured level, after
generating an event for exceeding a value.  (See also
specific event #58720263 for value exceeded events).  The
user may also configure rearm events with specific trap
numbers in the even range of 2 to 10000.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the rearm event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The instance
    7) The rearm value
    8) The sample value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The rearm operator
   14) The rearm count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollect_Thresh_J20Traffic .1.3.6.1.4.1.11.2.17.1.0.7025 "J20-GGSN" Minor
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9, low of $1 1
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value
    8) The sampled value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The threshold operator
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh_J20Traffic_R .1.3.6.1.4.1.11.2.17.1.0.7026 "J20-GGSN" Normal
FORMAT $5.$6 threshold rearmed ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
SDESC
This event is generated by HP OpenView data collector when a
sampled value drops below a preconfigured level, after
generating an event for exceeding a value.  (See also
specific event #58720263 for value exceeded events).  The
user may also configure rearm events with specific trap
numbers in the even range of 2 to 10000.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the rearm event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The instance
    7) The rearm value
    8) The sample value
    9) The highest sampled (peak) value
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
   12) The time the lowest value was sampled
   13) The rearm operator
   14) The rearm count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT Prova_Syslog_CISCO .1.3.6.1.4.1.11.2.17.1.0.7777 "Status Alarms" Warning
FORMAT PROVA: Cisco Works ha ricevuto un evento syslog
SDESC
EDESC
#
#
#
EVENT OV_Copia_DB_Cisco_OK .1.3.6.1.4.1.11.2.17.1.0.8001 "CiscoWorks Alarms" Normal
FORMAT Copia del DB di CiscoWorks2000 sul Server secondario avvenuta con successo!
DISPLAY Copia del DB di CiscoWorks2000 sul Server secondario avvenuta con successo!
SDESC
EDESC
#
#
#
EVENT OV_Allineamento_Servers_Cisco_Fallita .1.3.6.1.4.1.11.2.17.1.0.8003 "CiscoWorks Alarms" Major
FORMAT BBIP : Fallita Procedura di Allineamento dei Servers CiscoWorks2000. Vedere il file di log: /opt/DCN_CISCO_BCK/log/bck sui servers CiscoWorks2000
EXEC /usr/bin/mailx -s "Fallito Allineamento DB CW2000" MAX < /opt/IP_PUBBLICA/backup/scripts/Allineamento_CW2000_KO
DISPLAY BBIP : Fallita Procedura di Allineamento dei Servers CiscoWorks2000. Vedere il file di log: /opt/DCN_CISCO_BCK/log/bck sui servers CiscoWorks2000
SDESC
EDESC
#
#
#
EVENT OV_Allineamento_Servers_Cisco_OK .1.3.6.1.4.1.11.2.17.1.0.8005 "CiscoWorks Alarms" Normal
FORMAT BBIP : Allineamento dei Servers CiscoWorks2000 completato correttamente
EXEC /usr/bin/mailx -s "Allineamnto CW2000 IP Pubblica" MAX < /opt/IP_PUBBLICA/backup/scripts/Allineamento_CW2000_OK
DISPLAY BBIP : Allineamento dei Servers CiscoWorks2000 completato correttamente
SDESC
EDESC
#
#
#
EVENT OV_No_Prereq_per_Archiviaz_DB_Cisco .1.3.6.1.4.1.11.2.17.1.0.8007 "CiscoWorks Alarms" Major
FORMAT Spazio libero insufficiente per effettuare l'archiviazione del DB sul server Cisco primario. Vedere il seguente file di log: /opt/DCN_CISCO_BCK/log/bck.log
DISPLAY Spazio libero insufficiente per effettuare l'archiviazione del DB sul server Cisco primario. Vedere il seguente file di log: /opt/DCN_CISCO_BCK/log/bck.log
SDESC
EDESC
#
#
#
EVENT OV_No_Prereq_per_Dearchiviaz_DB_Cisco .1.3.6.1.4.1.11.2.17.1.0.8009 "CiscoWorks Alarms" Major
FORMAT Spazio libero insufficiente per effettuare la dearchiviazione del DB sul server Cisco secondario. Vedere il seguente file di log: /opt/DCN_CISCO_BCK/log/bck.log
DISPLAY Spazio libero insufficiente per effettuare la dearchiviazione del DB sul server Cisco secondario. Vedere il seguente file di log: /opt/DCN_CISCO_BCK/log/bck.log
SDESC
EDESC
#
#
#
EVENT MemUtilE40 .1.3.6.1.4.1.11.2.17.1.0.9001 "Threshold Alarms" Major
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
EXEC /home/admin/PROGRAMMI/MARTI/MEM/MEM $A $8 $x $X $7
DISPLAY ************* $A HA SUPERATO IL ($7)% DI OCCUPAZIONE DI MEMORIA ($8) *************
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value compared against
       (for string variables, this will be the last value)
    8) The sampled value
    9) The highest sampled (peak) value
       (for string variables, this will be the last value)
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
       (for string variables, this will be the last value)
   12) The time the lowest value was sampled
   13) The threshold information string
       This string gives information about why the threshold
       was exceeded.  It varies based on the type of
       threshold that was defined.

       If both Standard Deviation and Fixed numeric
       thresholds are exceeded, the standard deviation
       information will be included in this string and the
       fixed threshold will be given in $7.  The form of
       this argument will be:
          BUCKETNAME #pts: NUMPTS StdDev: STDDEV * STDDEVTHRESH
	  mean: MEAN and FIXEDOP

       If only Standard Deviation numeric thresholds are
       exceeded, all but the mean is included here, and the
       mean is given as $7.  The form of the argument will
       be:
          BUCKETNAME #pts: NUMPTS StdDev: STDDEV * STDDEVTHRESH
	  mean: MEAN

       If only Fixed numeric thresholds are exceeded, this
       string will be:
	  FIXED_OP

       BUCKETNAME is the name of the bucket (from
	    $OV_CONF/statTimeRanges.conf)
       NUMPTS is the number of points that contributed to
	  this calculation
       STDDEV is the standard deviation
       STDDEVTHRESH is the threshold value that was given
       MEAN is the mean value
       FIXED_OP: one of ">", ">=", "<", "<=", "!=", or "=="

       If the MIB variable is a string, this value will
       always be "!=".
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT Mem_Utili .1.3.6.1.4.1.11.2.17.1.0.9003 "Threshold Alarms" Major
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
EXEC /home/admin/PROGRAMMI/MARTI/MEM/MEM $A $8 $x $X $7
DISPLAY ************* $A HA SUPERATO IL ($7)% DI OCCUPAZIONE DI MEMORIA ($8) *************
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value compared against
       (for string variables, this will be the last value)
    8) The sampled value
    9) The highest sampled (peak) value
       (for string variables, this will be the last value)
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
       (for string variables, this will be the last value)
   12) The time the lowest value was sampled
   13) The threshold information string
       This string gives information about why the threshold
       was exceeded.  It varies based on the type of
       threshold that was defined.

       If both Standard Deviation and Fixed numeric
       thresholds are exceeded, the standard deviation
       information will be included in this string and the
       fixed threshold will be given in $7.  The form of
       this argument will be:
          BUCKETNAME #pts: NUMPTS StdDev: STDDEV * STDDEVTHRESH
	  mean: MEAN and FIXEDOP

       If only Standard Deviation numeric thresholds are
       exceeded, all but the mean is included here, and the
       mean is given as $7.  The form of the argument will
       be:
          BUCKETNAME #pts: NUMPTS StdDev: STDDEV * STDDEVTHRESH
	  mean: MEAN

       If only Fixed numeric thresholds are exceeded, this
       string will be:
	  FIXED_OP

       BUCKETNAME is the name of the bucket (from
	    $OV_CONF/statTimeRanges.conf)
       NUMPTS is the number of points that contributed to
	  this calculation
       STDDEV is the standard deviation
       STDDEVTHRESH is the threshold value that was given
       MEAN is the mean value
       FIXED_OP: one of ">", ">=", "<", "<=", "!=", or "=="

       If the MIB variable is a string, this value will
       always be "!=".
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT MemUtilE30 .1.3.6.1.4.1.11.2.17.1.0.9005 "Threshold Alarms" Major
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
EXEC /home/admin/PROGRAMMI/MARTI/MEM/MEM $A $8 $x $X $7
DISPLAY ************* $A HA SUPERATO IL ($7)% DI OCCUPAZIONE DI MEMORIA ($8) *************
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value compared against
       (for string variables, this will be the last value)
    8) The sampled value
    9) The highest sampled (peak) value
       (for string variables, this will be the last value)
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
       (for string variables, this will be the last value)
   12) The time the lowest value was sampled
   13) The threshold information string
       This string gives information about why the threshold
       was exceeded.  It varies based on the type of
       threshold that was defined.

       If both Standard Deviation and Fixed numeric
       thresholds are exceeded, the standard deviation
       information will be included in this string and the
       fixed threshold will be given in $7.  The form of
       this argument will be:
          BUCKETNAME #pts: NUMPTS StdDev: STDDEV * STDDEVTHRESH
	  mean: MEAN and FIXEDOP

       If only Standard Deviation numeric thresholds are
       exceeded, all but the mean is included here, and the
       mean is given as $7.  The form of the argument will
       be:
          BUCKETNAME #pts: NUMPTS StdDev: STDDEV * STDDEVTHRESH
	  mean: MEAN

       If only Fixed numeric thresholds are exceeded, this
       string will be:
	  FIXED_OP

       BUCKETNAME is the name of the bucket (from
	    $OV_CONF/statTimeRanges.conf)
       NUMPTS is the number of points that contributed to
	  this calculation
       STDDEV is the standard deviation
       STDDEVTHRESH is the threshold value that was given
       MEAN is the mean value
       FIXED_OP: one of ">", ">=", "<", "<=", "!=", or "=="

       If the MIB variable is a string, this value will
       always be "!=".
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT IPBA-AverageCpu .1.3.6.1.4.1.11.2.17.1.0.9007 "Threshold Alarms" Major
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
EXEC /home/admin/PROGRAMMI/MARTI/MEM/CPU $A $8 $x $X $7
DISPLAY ************* $A HA SUPERATO IL ($7)% DI OCCUPAZIONE DI CPU ($8) *************
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value compared against
       (for string variables, this will be the last value)
    8) The sampled value
    9) The highest sampled (peak) value
       (for string variables, this will be the last value)
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
       (for string variables, this will be the last value)
   12) The time the lowest value was sampled
   13) The threshold information string
       This string gives information about why the threshold
       was exceeded.  It varies based on the type of
       threshold that was defined.

       If both Standard Deviation and Fixed numeric
       thresholds are exceeded, the standard deviation
       information will be included in this string and the
       fixed threshold will be given in $7.  The form of
       this argument will be:
          BUCKETNAME #pts: NUMPTS StdDev: STDDEV * STDDEVTHRESH
	  mean: MEAN and FIXEDOP

       If only Standard Deviation numeric thresholds are
       exceeded, all but the mean is included here, and the
       mean is given as $7.  The form of the argument will
       be:
          BUCKETNAME #pts: NUMPTS StdDev: STDDEV * STDDEVTHRESH
	  mean: MEAN

       If only Fixed numeric thresholds are exceeded, this
       string will be:
	  FIXED_OP

       BUCKETNAME is the name of the bucket (from
	    $OV_CONF/statTimeRanges.conf)
       NUMPTS is the number of points that contributed to
	  this calculation
       STDDEV is the standard deviation
       STDDEVTHRESH is the threshold value that was given
       MEAN is the mean value
       FIXED_OP: one of ">", ">=", "<", "<=", "!=", or "=="

       If the MIB variable is a string, this value will
       always be "!=".
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT IPBA-IN-OUT-PKT .1.3.6.1.4.1.11.2.17.1.0.9009 "Threshold Alarms" Major
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
EXEC /home/admin/PROGRAMMI/MARTI/PKT/PKT $A $8 $x $X $7 $6 $5
DISPLAY GRAVE PERDITA DI TRAFFICO  $A $5.$6 threshold exceeded ($13 $7 * $14): $8  at $10
NODES CAQU-E40.ippubbl.wind
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value compared against
       (for string variables, this will be the last value)
    8) The sampled value
    9) The highest sampled (peak) value
       (for string variables, this will be the last value)
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
       (for string variables, this will be the last value)
   12) The time the lowest value was sampled
   13) The threshold information string
       This string gives information about why the threshold
       was exceeded.  It varies based on the type of
       threshold that was defined.

       If both Standard Deviation and Fixed numeric
       thresholds are exceeded, the standard deviation
       information will be included in this string and the
       fixed threshold will be given in $7.  The form of
       this argument will be:
          BUCKETNAME #pts: NUMPTS StdDev: STDDEV * STDDEVTHRESH
	  mean: MEAN and FIXEDOP

       If only Standard Deviation numeric thresholds are
       exceeded, all but the mean is included here, and the
       mean is given as $7.  The form of the argument will
       be:
          BUCKETNAME #pts: NUMPTS StdDev: STDDEV * STDDEVTHRESH
	  mean: MEAN

       If only Fixed numeric thresholds are exceeded, this
       string will be:
	  FIXED_OP

       BUCKETNAME is the name of the bucket (from
	    $OV_CONF/statTimeRanges.conf)
       NUMPTS is the number of points that contributed to
	  this calculation
       STDDEV is the standard deviation
       STDDEVTHRESH is the threshold value that was given
       MEAN is the mean value
       FIXED_OP: one of ">", ">=", "<", "<=", "!=", or "=="

       If the MIB variable is a string, this value will
       always be "!=".
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_GGSN_SSH_Fault .1.3.6.1.4.1.11.2.17.1.0.70005.1 "J20-GGSN" Critical
FORMAT SSH Connection Failed On Node $1
SDESC
Monitoring of GGSN J20 Node. SSH Connection on node failed.
This notification contaion 1 object: Nodename.
EDESC
#
#
#
EVENT OV_GGSN_DiskSpaceFault .1.3.6.1.4.1.11.2.17.1.0.70005.2 "J20-GGSN" Major
FORMAT Free disk space on file system "/var" is $1% - less of threshold ($2%)
SDESC
Monitoring of GGSN J20 Node. Monitoring of GGSN J20 Node. File system
EDESC
#
#
#
EVENT OV_GGSN_DiskSpaceNormal .1.3.6.1.4.1.11.2.17.1.0.70005.3 "LOGONLY" Normal
FORMAT Free disk space on file system "/var" is $1% - higher of threshold ($2%)
SDESC
Monitoring of GGSN J20 Node. File system
EDESC
#
#
#
EVENT OV_GGSN_SSH_Fault_Diskspace .1.3.6.1.4.1.11.2.17.1.0.70005.4 "J20-GGSN" Critical
FORMAT SSH command output Error during file system "/var" check on node $1
SDESC
Monitoring of GGSN J20 Node. File system
EDESC
#
#
#
EVENT OV_GGSN_CDRFile_SN_Syntax .1.3.6.1.4.1.11.2.17.1.0.70005.5 "J20-GGSN" Critical
FORMAT Sequence Number Syntax Error on file "$1" on node $2
SDESC
Monitoring of GGSN J20 Node. CDR File
EDESC
#
#
#
EVENT OV_GGSN_CacheFile_Fault .1.3.6.1.4.1.11.2.17.1.0.70005.6 "J20-GGSN" Critical
FORMAT Cache File "$1" not present. Generating new one.
SDESC
Monitoring of GGSN J20 Node. CDR File
EDESC
#
#
#
EVENT OV_GGSN_CDRFile_SN_Error .1.3.6.1.4.1.11.2.17.1.0.70005.7 "J20-GGSN" Critical
FORMAT CDR File with Sequence Number $1 not yet generated
SDESC
Monitoring of GGSN J20 Node. CDR File
EDESC
#
#
#
EVENT OV_GGSN_CDRFile_TimeRange .1.3.6.1.4.1.11.2.17.1.0.70005.8 "J20-GGSN" Critical
FORMAT CDR File With Sequence Number $1 is not In Timerange
SDESC
Monitoring of GGSN J20 Node. CDR File
EDESC
#
#
#
EVENT OV_GGSN_CDRFile_Data_Error .1.3.6.1.4.1.11.2.17.1.0.70005.9 "J20-GGSN" Critical
FORMAT There Is An Error Date On CDR File "$1"
SDESC
Monitoring of GGSN J20 Node. CDR File
EDESC
#
#
#
EVENT OV_GGSN_CDRFile_Normal .1.3.6.1.4.1.11.2.17.1.0.70005.10 "LOGONLY" Normal
FORMAT Found CDR File "$1"
SDESC
Monitoring of GGSN J20 Node. CDR File
EDESC
#
#
#
EVENT OV_GGSN_SSH_FaultCDRFile .1.3.6.1.4.1.11.2.17.1.0.70005.11 "J20-GGSN" Critical
FORMAT SSH command output Error during CDR File check on node $1
SDESC
Monitoring of GGSN J20 Node. CDR File
EDESC
#
#
#
EVENT OV_IF_Marginal .1.3.6.1.4.1.11.2.17.1.0.40000000 "LOGONLY" Warning
FORMAT $7 marginal
SDESC
This event is generated by HP OpenView when it detects a
interface has gone marginal.  This happens when an interface
without an IP address is no longer producing traffic on the
network.  Since HP OpenView cannot determine if the
interface is up or down, it declares it marginal until a
definitive status can be found.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The NNM management station ID
    10) Event correlation event UUID which identifies
	the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_IF_IP_Addr_Chg .1.3.6.1.4.1.11.2.17.1.0.40000001 "Configuration Alarms" Normal
FORMAT Interface with physical address $9 now has IP address $8 (was $10)
SDESC
This event is generated by HP OpenView when it detects a new
IP address on an interface that previously had no IP
address.  This event only occurs if the interface had no IP
address before, such as when a physical address gets an IP
address associated with it.

The data passed with the event are
    1) The ID of application sending the event
    2) The hostname of the node that  caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The new IP address for the interface that caused the
       event
    9) The physical address for the interface that caused
       the event
   10) The previous IP address associated with this
       interface

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Network_SubMskChg .1.3.6.1.4.1.11.2.17.1.0.40000002 "Configuration Alarms" Normal
FORMAT IP Subnet mask now $7 (was $8)
SDESC
This event is generated by HP OpenView when it detects the
subnet mask for an entire subnetwork has changed.  This
event can be triggered either through user editing of
describe information associated with the network, or by HP
OpenView detecting that all routers connected to the target
IP network changing to the same new subnet mask.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the network that caused the event
    3) The HP OpenView object identifier of the network
       that caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The IP address of the network/subnet
    7) The new subnet mask for the network/subnet
    8) The previous subnet mask for the network/subnet

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Connection_Up .1.3.6.1.4.1.11.2.17.1.0.40000003 "LOGONLY" Normal
FORMAT $8 connection up
SDESC
This event is sent by HP OpenView when
it detects that a connection has come up.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The HP OpenView object identifier of the segment
       connected to
    8) The name (if known) or OVW object identifier of the
       segment connected to
    9) The NNM management station ID

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Connection_Down .1.3.6.1.4.1.11.2.17.1.0.40000004 "LOGONLY" Minor
FORMAT $8 connection down
SDESC
This event is sent by HP OpenView when
it detects that a connection has gone down.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The HP OpenView object identifier of the segment
       connected to
    8) The name (if known) or OVW object identifier of the
       segment connected to
    9) The NNM management station ID

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Connection_Marg .1.3.6.1.4.1.11.2.17.1.0.40000005 "LOGONLY" Warning
FORMAT $8 connection marginal
SDESC
This event is sent by HP OpenView when it detects that a
connection has become marginal.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The HP OpenView object identifier of the segment
       connected to
    8) The name (if known) or OVW object identifier of the
       segment connected to
    9) The NNM management station ID

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollect_Check .1.3.6.1.4.1.11.2.17.1.0.40000006 "LOGONLY" Normal
FORMAT Collection check on $2
SDESC
This event instructs the data collector to re-try the
specified node (argument #2).  Get-Next SNMP requests will
be issued to find all instances of the requested variables.
This is useful if the status of the node changed (i.e., now
supports SNMP), or if new instances of a variable have been
added.

The data passed with the event is
    1) The ID of application sending the event
    2) The node to collection check
    3) Not applicable
    4) Not applicable

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_IF_Disconnected_Segs .1.3.6.1.4.1.11.2.17.1.0.40000007 "LOGONLY" Normal
FORMAT $7 disconnected from all segments
SDESC
This event is generated by HP OpenView when
an interface is no longer connected to any segment

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Map_Change .1.3.6.1.4.1.11.2.17.1.0.40000008 "LOGONLY" Normal
FORMAT OVW map changed from "$4" to "$5"
SDESC
This event is generated by HP OpenView when the user changes
the OVW map.

The data passed with the event is
    1) The ID of application sending the event
    2) Not applicable
    3) Not applicable
    4) The old map name
    5) The new map name

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Network_IPAddrChg .1.3.6.1.4.1.11.2.17.1.0.40000009 "Configuration Alarms" Normal
FORMAT IP network/subnet address now $6 (was $7)
SDESC
This event is generated by HP OpenView when it detects the
IP network/subnet address for an entire subnetwork has
changed.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the network that caused the event
    3) The HP OpenView object identifier of the network that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new IP network/subnet address for the network
    7) The previous IP network/subnet address

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Network_Name_Chg .1.3.6.1.4.1.11.2.17.1.0.40000010 "Configuration Alarms" Normal
FORMAT Network name changed (was $6)
SDESC
This event is generated by HP OpenView when it detects the
name for an entire subnetwork has changed.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the network that caused the event
    3) The HP OpenView object identifier of the network that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The previous IP network/subnet name

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_IF_Unknown .1.3.6.1.4.1.11.2.17.1.0.40000011 "LOGONLY" Normal
FORMAT IF $7 status - unknown
SDESC
This event is generated by HP OpenView when
an interface status becomes unknown.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The NNM management station ID
    10) Event correlation event UUID which identifies
	the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Node_Unknown .1.3.6.1.4.1.11.2.17.1.0.40000012 "Status Alarms" Normal
FORMAT Node status - unknown
SDESC
This event is generated by HP OpenView when
it detects the status of a node has become
unknown (no interfaces on the node with
known status).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView object identifier of the node
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Station ID
    7) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Segment_Unknown .1.3.6.1.4.1.11.2.17.1.0.40000013 "LOGONLY" Normal
FORMAT Seg unknown
SDESC
This event is generated by HP OpenView when
it detects the status of a segment has become
unknown (no interfaces in the segment have
a known status).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the IP segment that caused the event
    3) The HP OpenView object identifier of the segment
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Station ID
    7) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Network_Unknown .1.3.6.1.4.1.11.2.17.1.0.40000014 "LOGONLY" Normal
FORMAT Net unknown
SDESC
This event is generated by HP OpenView when
it detects the status of a network has become
unknown (no interfaces in the network have a
known status).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the network that caused the event
    3) The HP OpenView object identifier of the network that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Station ID
    7) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_ConnectionUnknown .1.3.6.1.4.1.11.2.17.1.0.40000015 "LOGONLY" Normal
FORMAT $8 connection unknown
SDESC
This event is sent by HP OpenView when
it detects that a connection has come up.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The HP OpenView object identifier of the segment
       connected to
    8) The name (if known) or OVW object identifier of the
       segment connected to
    9) The NNM management station ID

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Node_SupportsSNMP .1.3.6.1.4.1.11.2.17.1.0.40000016 "LOGONLY" Normal
FORMAT Node supports SNMP
SDESC
This event is generated by HP OpenView when
the IP discovery process (netmon) successfully
communicates using SNMP to a previously
non-SNMP node.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView object identifier of the node
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Station_Added .1.3.6.1.4.1.11.2.17.1.0.40000017 "IGNORE" Normal
FORMAT Collection station added.
SDESC
This event is generated by HP OpenView when an entry for a
remote collection station is created in the topology
database.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the collection station
    3) The local HP OpenView object identifier of the
       station
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Station_Deleted .1.3.6.1.4.1.11.2.17.1.0.40000018 "IGNORE" Normal
FORMAT Collection station deleted.
SDESC
This event is generated by HP OpenView when
an entry for a remote collection station is deleted
from the topology database.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the deleted collection station
    3) The local HP OpenView object identifier of the
       station
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Station_Normal .1.3.6.1.4.1.11.2.17.1.0.40000019 "IGNORE" Normal
FORMAT Collection station normal.
SDESC
This event is generated by HP OpenView when
a collection station status is changed to normal/up.
This happens when HP OpenView is able to verify that
the remote collection station is responding to
queries for topology information via SNMP via
a topology status check.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the collection station
    3) The local HP OpenView object identifier of the
       station
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Station_Critical .1.3.6.1.4.1.11.2.17.1.0.40000020 "IGNORE" Critical
FORMAT Collection station Critical - not responding for four status checks.
DISPLAY Collection station $2 Critical - not responding for four status checks.
SDESC
This event is generated by HP OpenView when
a remote collection status is changed to down/critical.
This happens when HP OpenView is unable to communicate
with the remote collection station for four successive
topology status checks.  The normal progression of status
changes is Normal -> Warning -> Minor -> Major -> Critical,
with one level of increment for each non-responsive
topology status check.  Note that topology status checks
are based on the remote station responding to queries for
topology information via SNMP, so it is possible for the
station to be up and responding to TCP/IP traffic, but not
responding to SNMP queries.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the collection station
    3) The HP OpenView object identifier of the
       station
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Station_Marginal .1.3.6.1.4.1.11.2.17.1.0.40000021 "IGNORE" Minor
FORMAT Collection station warning - not responding for two status checks.
SDESC
This event is generated by HP OpenView when
a remote collection status is changed to minor/marginal.
This happens when HP OpenView is unable to communicate
with the remote collection station for two successive
topology status checks.  The normal progression of status
changes is Normal -> Warning -> Minor -> Major -> Critical,
with one level of increment for each non-responsive
topology status check.  Note that topology status checks
are based on the remote station responding to queries for
topology information via SNMP, so it is possible for the
station to be up and responding to TCP/IP traffic, but not
responding to SNMP queries.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the remote collection station
    3) The local HP OpenView object identifier of the
       station
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Station_Unknown .1.3.6.1.4.1.11.2.17.1.0.40000022 "IGNORE" Normal
FORMAT Collection station status unknown.
SDESC
This event is generated by HP OpenView when
a remote collection status is changed to unknown.
This should not happen during normal operations of
the system, but may happen via ovtopofix or other
applications that are fixing a detected inconsistency.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the collection station
    3) The local HP OpenView object identifier of the
       station
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Manage_Station .1.3.6.1.4.1.11.2.17.1.0.40000023 "IGNORE" Normal
FORMAT Collection station managed.
SDESC
This event is generated by HP OpenView when
a remote collection status is changed to unknown when
it was previously unmanaged.  This is normally the
result of managing the object via the
"xnmtopoconf -manage" command line.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the collection station
    3) The local HP OpenView object identifier of the
       station
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Unmanage_Station .1.3.6.1.4.1.11.2.17.1.0.40000024 "LOGONLY" Normal
FORMAT Collection station unmanaged.
SDESC
This event is generated by HP OpenView when
a remote collection status is changed to unmanaged when
it was previously managed.  This is normally the
result of unmanaging the object via the
"xnmtopoconf -unmanage" command line.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the collection station
    3) The local HP OpenView object identifier of the
       station
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Station_Flg_Chg .1.3.6.1.4.1.11.2.17.1.0.40000025 "IGNORE" Normal
FORMAT Station flags changed - $8.
SDESC
This event is generated for internal use by the
HP OpenView system, and signals an internal change
in state for the remote collection station.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the collection station
    3) The HP OpenView object identifier of the station
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new flags formatted for internal use
    7) The old flags formatted for internal use
    8) The new flags as a nicely formatted string

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Station_Name_Chg .1.3.6.1.4.1.11.2.17.1.0.40000026 "IGNORE" Normal
FORMAT Collection station changed name (was $6).
SDESC
This event is generated by HP OpenView when
it detects that the official IP hostname for a
remote collection station has changed.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the collection station
    3) The local HP OpenView object identifier of the
       station
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The old name for the collection station

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Station_Warning .1.3.6.1.4.1.11.2.17.1.0.40000027 "IGNORE" Warning
FORMAT Collection station warning - not responding to last status check
SDESC
This event is generated by HP OpenView when
a remote collection status is changed to a warning state.
This happens when HP OpenView is unable to communicate
with the remote collection station for a single
topology status check.  The normal progression of status
changes is Normal -> Warning -> Minor -> Major -> Critical,
with one level of increment for each non-responsive
topology status check.  Note that topology status checks
are based on the remote station responding to queries for
topology information via SNMP, so it is possible for the
station to be up and responding to TCP/IP traffic, but not
responding to SNMP queries.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the remote collection station
    3) The local HP OpenView object identifier of the
       station
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Station_Major .1.3.6.1.4.1.11.2.17.1.0.40000028 "IGNORE" Major
FORMAT Collection station warning - not responding for three status checks
SDESC
This event is generated by HP OpenView when
a remote collection status is changed to a warning state.
This happens when HP OpenView is unable to communicate
with the remote collection station for a single
topology status check.  The normal progression of status
changes is Normal -> Warning -> Minor -> Major -> Critical,
with one level of increment for each non-responsive
topology status check.  Note that topology status checks
are based on the remote station responding to queries for
topology information via SNMP, so it is possible for the
station to be up and responding to TCP/IP traffic, but not
responding to SNMP queries.
EDESC
#
#
#
EVENT OV_Station_DbTime .1.3.6.1.4.1.11.2.17.1.0.40000029 "Application Alert Alarms" Normal
FORMAT Station db creation time changed to "$7"
SDESC
This event is generated by HP OpenView when
it detects that the database creation time of the
remote station changed.  This is an indication that
the remote station's database has either been
initialized to an empty state, or recovered from
backup.  In either case the local station will
remove local copies of remote objects reported by
the station and will completely resynchronize.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the collection station
    3) The local HP OpenView object identifier of the
       station
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new database creation time as an integer
    7) The new database creation time as a date string

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Station_Type .1.3.6.1.4.1.11.2.17.1.0.40000030 "Application Alert Alarms" Normal
FORMAT Collection station type changed to "$6" (was "$7")
SDESC
This event is generated by HP OpenView when
it detects that the type of the remote collection
station has changed.  Valid types include NNM for Unix,
OV for Windows, or NNM for Windows/NT.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the collection station
    3) The local HP OpenView object identifier of the
       station
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new type as a formatted string
    7) The old type as a formatted string

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Station_Vers .1.3.6.1.4.1.11.2.17.1.0.40000031 "Application Alert Alarms" Normal
FORMAT Station version changed to $6 (was $7).
SDESC
This event is generated by HP OpenView when
it detects a change in the version reported
by a remote collection station via SNMP.  This
can happen as the result of a new version of
the collection station software being installed
at the remote station.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the collection station
    3) The local HP OpenView object identifier of the
       station
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new version number
    7) The old version number

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Station_Desc .1.3.6.1.4.1.11.2.17.1.0.40000032 "Application Alert Alarms" Normal
FORMAT Station description changed to "$6" (was "$7")
SDESC
This event is generated by HP OpenView when
it detects a change in the description reported
by a remote collection station via SNMP.  This
can happen as the result of a new version of
the collection station software being installed
at the remote station.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the collection station
    3) The local HP OpenView object identifier of the
       station
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new description
    7) The old description

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Station_Interval .1.3.6.1.4.1.11.2.17.1.0.40000033 "Application Alert Alarms" Normal
FORMAT Station status check interval changed to $7
SDESC
This event is generated by HP OpenView when
the configured status check interval for a
collection station is changed.  This is normally
accomplished via the "xnmtopoconf -interval"
command line option.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the collection station
    3) The local HP OpenView object identifier of the
       station
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new interval in seconds
    7) The new interval nicely formatted

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Station_SNMPSec .1.3.6.1.4.1.11.2.17.1.0.40000034 "Application Alert Alarms" Normal
FORMAT Station SNMP configuration changed
SDESC
This event is generated by HP OpenView when
the SNMP configuration used by the system for
communicating with the remote station has
changed via user configuration.  This is
normally done via the "xnmtopoconf -community"
command line option.  As a result the system
will try a topology status check immediately
to verify communication with the remote
station.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the collection station
    3) The local HP OpenView object identifier of the
       station
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Station_Lic_Date .1.3.6.1.4.1.11.2.17.1.0.40000035 "LOGONLY" Normal
FORMAT Station license expiration date changed to "$7" (was "$8")
SDESC
This event is generated by HP OpenView when
it detects that the license granted to the remote
collection station has changed expiration date.
This can happen, for example, when the remote system
changed from a temporary or evaluation license to a
permanent license.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the collection station
    3) The local HP OpenView object identifier of the
       station
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new expiration date in internal form
    7) The new expiration date as a string
    8) The old expiration date as a string

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Station_Lic_Nodes .1.3.6.1.4.1.11.2.17.1.0.40000036 "LOGONLY" Normal
FORMAT Station licensed number of nodes changed to $6 (was $7)
SDESC
This event is generated by HP OpenView when
that the licensed maximum number of nodes has
changed for the remote system.  For example, this can
happen if the remote license is changed from an NNM Entry
to a full NNM license.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the collection station
    3) The local HP OpenView object identifier of the
       station
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new maximum number of nodes
    7) The old maximum number of nodes

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Station_Overlap .1.3.6.1.4.1.11.2.17.1.0.40000037 "Application Alert Alarms" Normal
FORMAT Station overlap mode $6
SDESC
The station overlap mode has changed
to the indicated value.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the collection station
    3) The local HP OpenView object identifier of the
       station
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new overlap mode

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DatabaseInit .1.3.6.1.4.1.11.2.17.1.0.40000040 "LOGONLY" Normal
FORMAT Topology database created and initialized at $6
FORWARD %REMOTE_MANAGERS_LIST%
SDESC
This event is generated when the HP OpenView IP
topology database has been initialized the
first time after being created.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the local management station
    3) The local HP OpenView object identifier
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The creation time as a date string

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_IPTopoFlags .1.3.6.1.4.1.11.2.17.1.0.40000041 "LOGONLY" Normal
FORMAT Global flags changed to $7
SDESC
This event is generated when the global
internal flag values have changed.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the local management station
    3) The local HP OpenView object identifier
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new flags in internal form
    7) The new flags as a nice string
    8) The old flags in internal form

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Stn_Failover .1.3.6.1.4.1.11.2.17.1.0.40000043 "Application Alert Alarms" Normal
FORMAT Station Failover
SDESC
The local station has failed over for the remote
collection station. The local network monitoring
process (netmon) will status poll for the remote
collection station.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the collection station
    3) The local HP OpenView object identifier of the
       station
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Stn_Failover_Release .1.3.6.1.4.1.11.2.17.1.0.40000044 "Application Alert Alarms" Normal
FORMAT Station Failover Release
SDESC
The local station has released fail over for the
remote collection station. The local network
monitoring process (netmon) is no longer status polling
for the remote collection station.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the collection station
    3) The local HP OpenView object identifier of the
       station
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Stn_Failover_Flt_Chg .1.3.6.1.4.1.11.2.17.1.0.40000045 "LOGONLY" Normal
FORMAT Station Failover Filter $6
SDESC
The station failover filter has been added
or has changed.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the collection station
    3) The local HP OpenView object identifier of the
       station
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The nane of the new failover filter

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Stn_Sync_Start .1.3.6.1.4.1.11.2.17.1.0.40000046 "Application Alert Alarms" Normal
FORMAT Station Synchronization Started with $2
SDESC
The local station has begun synchronizing with the
remote station.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the collection station
    3) The local HP OpenView object identifier of the
       station
    4) The UUID of the collection station


On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Stn_Sync_Finish .1.3.6.1.4.1.11.2.17.1.0.40000047 "Application Alert Alarms" Normal
FORMAT Station Synchronization Completed with $2
SDESC
The local station has completed synchronizing with the
remote station.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the collection station
    3) The local HP OpenView object identifier of the
       station
    4) The UUID of the collection station

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Net_Primary .1.3.6.1.4.1.11.2.17.1.0.40000050 "LOGONLY" Normal
FORMAT Primary station now $6
SDESC
This event is generated when a new primary
collection station is chosen for an object.
This happens when multiple collection stations
report information about the same object and
HP OpenView decides that a new collection station
provides more accurate data, or if the
current primary collection station is deleted or
no longer reports information about the object.

The data passed with the event is:
    1) The ID of application sending the event
    2) The name of the object
    3) The HP OpenView object identifier of the object
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The name of the new primary station
    7) The HP OpenView object identifier of the new primary

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Seg_Primary .1.3.6.1.4.1.11.2.17.1.0.40000051 "LOGONLY" Normal
FORMAT Primary station now $6
SDESC
This event is generated when a new primary
collection station is chosen for an object.
This happens when multiple collection stations
report information about the same object and
HP OpenView decides that a new collection station
provides more accurate data, or if the
current primary collection station is deleted or
no longer reports information about the object.

The data passed with the event is:
    1) The ID of application sending the event
    2) The name of the object
    3) The HP OpenView object identifier of the object
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The name of the new primary station
    7) The HP OpenView object identifier of the new primary

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Node_Primary .1.3.6.1.4.1.11.2.17.1.0.40000052 "LOGONLY" Normal
FORMAT Primary station now $6
SDESC
This event is generated when a new primary
collection station is chosen for an object.
This happens when multiple collection stations
report information about the same object and
HP OpenView decides that a new collection station
provides more accurate data, or if the
current primary collection station is deleted or
no longer reports information about the object.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the object
    3) The HP OpenView object identifier of the object
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The name of the new primary station
    7) The HP OpenView object identifier of the new primary

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_If_Primary .1.3.6.1.4.1.11.2.17.1.0.40000053 "LOGONLY" Normal
FORMAT If $7 - Primary station now $9
SDESC
This event is generated when a new primary
collection station is chosen for an object.
This happens when multiple collection stations
report information about the same object and
HP OpenView decides that a new collection station
provides more accurate data, or if the
current primary collection station is deleted or
no longer reports information about the object.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the object
    3) The HP OpenView object identifier of the object
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The name of the new primary station
    10) The HP OpenView object identifier of the new primary

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Net_Sec_Added .1.3.6.1.4.1.11.2.17.1.0.40000060 "LOGONLY" Normal
FORMAT Secondary station $6 added
SDESC
This event is generated when HP OpenView
discovers that multiple collection stations
are monitoring the same object.  The
version of the object reported by the station
will be tracked as a "secondary" version of
the object, and is used to determine status
if the primary collection station for the
object becomes unavailable.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the object
    3) The HP OpenView object identifier of the object
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The name of the new secondary station
    7) The HP OpenView object identifier of the new
       secondary

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Net_Sec_Deleted .1.3.6.1.4.1.11.2.17.1.0.40000061 "LOGONLY" Normal
FORMAT Secondary station $6 deleted
SDESC
This event is generated when a version of
an object is no longer reported by a remote
collection station that is acting as a
secondary collection station for the object.

The data passed with the event is:
    1) The ID of application sending the event
    2) The name of the object
    3) The HP OpenView object identifier of the object
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The name of the new secondary station
    7) The HP OpenView object identifier of the new
       secondary

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Seg_Sec_Added .1.3.6.1.4.1.11.2.17.1.0.40000062 "LOGONLY" Normal
FORMAT Secondary station $6 added
SDESC
This event is generated when HP OpenView
discovers that multiple collection stations
are monitoring the same object.  The
version of the object reported by the station
will be tracked as a "secondary" version of
the object, and is used to determine status
if the primary collection station for the
object becomes unavailable.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the object
    3) The HP OpenView object identifier of the object
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The name of the new secondary station
    7) The HP OpenView object identifier of the new
       secondary

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Seg_Sec_Deleted .1.3.6.1.4.1.11.2.17.1.0.40000063 "LOGONLY" Normal
FORMAT Secondary station $6 deleted
SDESC
This event is generated when a version of
an object is no longer reported by a remote
collection station that is acting as a
secondary collection station for the object.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the object
    3) The HP OpenView object identifier of the object
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The name of the new secondary station
    7) The HP OpenView object identifier of the new
       secondary

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Node_Sec_Added .1.3.6.1.4.1.11.2.17.1.0.40000064 "LOGONLY" Normal
FORMAT Secondary station $6 added
SDESC
This event is generated when HP OpenView
discovers that multiple collection stations
are monitoring the same object.  The
version of the object reported by the station
will be tracked as a "secondary" version of
the object, and is used to determine status
if the primary collection station for the
object becomes unavailable.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the object
    3) The HP OpenView object identifier of the object
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The name of the new secondary station
    7) The HP OpenView object identifier of the new
       secondary

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Node_Sec_Deleted .1.3.6.1.4.1.11.2.17.1.0.40000065 "LOGONLY" Normal
FORMAT Secondary station $6 deleted
SDESC
This event is generated when a version of
an object is no longer reported by a remote
collection station that is acting as a
secondary collection station for the object.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the object
    3) The HP OpenView object identifier of the object
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The name of the new secondary station
    7) The HP OpenView object identifier of the new
       secondary

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_If_Sec_Added .1.3.6.1.4.1.11.2.17.1.0.40000066 "LOGONLY" Normal
FORMAT If $7 - Secondary station $9 added
SDESC
This event is generated when HP OpenView
discovers that multiple collection stations
are monitoring the same object.  The
version of the object reported by the station
will be tracked as a "secondary" version of
the object, and is used to determine status
if the primary collection station for the
object becomes unavailable.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the object
    3) The HP OpenView object identifier of the object
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The name of the new secondary station
    10) The HP OpenView object identifier of the new
       secondary

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_If_Sec_Deleted .1.3.6.1.4.1.11.2.17.1.0.40000067 "LOGONLY" Normal
FORMAT If $7 - Secondary station $9 deleted
SDESC
This event is generated when a version of
an object is no longer reported by a remote
collection station that is acting as a
secondary collection station for the object.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the object
    3) The HP OpenView object identifier of the object
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The name of the new secondary station
    10) The HP OpenView object identifier of the new
       secondary

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Net_Status .1.3.6.1.4.1.11.2.17.1.0.40000070 "LOGONLY" Normal
FORMAT Net status $6 (was $7) station $8
SDESC
This event is generated when HP OpenView
detects a change in the status as reported
by a collection station.  Note that this may
be different than the locally propagated
status for the network, depending on which
objects are known at the local or remote
sites.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the network that caused the event
    3) The HP OpenView object identifier of the network that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new status value
    7) The old status value
    8) The name of the station reporting the status
    9) The HP OpenView object identifier of the station
       reporting the status

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Seg_Status .1.3.6.1.4.1.11.2.17.1.0.40000071 "LOGONLY" Normal
FORMAT Seg status $6 (was $7) station $8
SDESC
This event is generated when HP OpenView
detects a change in the status as reported
by a collection station.  Note that this may
be different than the locally propagated
status for the segment, depending on which
objects are known at the local or remote
sites.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the segment that caused the event
    3) The HP OpenView object identifier of the segment that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new status value
    7) The old status value
    8) The name of the station reporting the status
    9) The HP OpenView object identifier of the station
       reporting the status

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Node_Status .1.3.6.1.4.1.11.2.17.1.0.40000072 "LOGONLY" Normal
FORMAT Node status $6 (was $7) station $8
SDESC
This event is generated when HP OpenView
detects a change in the status as reported
by a collection station.  Note that this may
be different than the locally propagated
status for the node, depending on which
objects are known at the local or remote
sites.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new status value
    7) The old status value
    8) The name of the station reporting the status
    9) The HP OpenView object identifier of the station
       reporting the status

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_If_Status .1.3.6.1.4.1.11.2.17.1.0.40000073 "LOGONLY" Normal
FORMAT If $7 status $9 (was $10) station $11
SDESC
This event is generated when HP OpenView
detects a change in the status as reported
by a collection station.  Note that this may
be different than the locally propagated
status for the interface, depending on which
station has been chosen as a primary and
which station is currently acting as the
status source for this interface.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event
    9) The new status value
    10) The old status value
    11) The name of the station reporting the status
    12) The HP OpenView object identifier of the station
        reporting the status
    13) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Network_Warning .1.3.6.1.4.1.11.2.17.1.0.40000080 "LOGONLY" Warning
FORMAT Net status - warning
SDESC
This event is generated by HP OpenView when
it detects the status of a network has reached
a warning state (one segment or connector
abnormal, the remainder normal).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the network that caused the event
    3) The HP OpenView object identifier of the network that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Station ID
    7) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Network_Major .1.3.6.1.4.1.11.2.17.1.0.40000081 "Status Alarms" Warning
FORMAT Network status major (almost critical)
SDESC
This event is generated by HP OpenView when
it detects the status of a network has reached
a major status (all segments and connectors
in an abnormal state but one).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the network that caused the event
    3) The HP OpenView object identifier of the network that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Station ID
    7) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Segment_Warning .1.3.6.1.4.1.11.2.17.1.0.40000082 "LOGONLY" Warning
FORMAT Seg status - warning
SDESC
This event is generated by HP OpenView when
it detects the status of a segment has reached
a warning state (one contained node or
interface abnormal, the remainder normal).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the segment that caused the event
    3) The HP OpenView object identifier of the segment that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Station ID
    7) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Segment_Major .1.3.6.1.4.1.11.2.17.1.0.40000083 "Status Alarms" Warning
FORMAT Segment status major (almost critical)
SDESC
This event is generated by HP OpenView when
it detects the status of a segment has reached
a major status (all contained nodes and
interfaces have gone to an abnormal state
but one).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the segment that caused the event
    3) The HP OpenView object identifier of the segment that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Station ID
    7) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Node_Warning .1.3.6.1.4.1.11.2.17.1.0.40000084 "Status Alarms" Warning
FORMAT Node status - warning
SDESC
This event is generated by HP OpenView when
it detects the status of a node has reached
a warning state (one contained interface
abnormal, the remainder normal).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Station ID
    7) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Node_Major .1.3.6.1.4.1.11.2.17.1.0.40000085 "Status Alarms" Warning
FORMAT Node status - major
SDESC
This event is generated by HP OpenView when
it detects the status of a node has reached
a major status (all contained nodes and
interfaces have gone to an abnormal state
but one).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Station ID
    7) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_IF_Warning .1.3.6.1.4.1.11.2.17.1.0.40000086 "LOGONLY" Warning
FORMAT IF $7 Warning
SDESC
This event is generated by HP OpenView when
it detects the status of an interface has gone
to a warning level.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The NNM management station ID
    10) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_IF_Major .1.3.6.1.4.1.11.2.17.1.0.40000087 "LOGONLY" Warning
FORMAT IF $7 Major
SDESC
This event is generated by HP OpenView when
it detects the status of an interface has gone
to a major level.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The NNM management station ID
    10) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_IF_AdminDown .1.3.6.1.4.1.11.2.17.1.0.40000088 "LOGONLY" Normal
FORMAT IF $7 Admin. down
SDESC
This event is generated by HP OpenView when
it detects an interface is administratively
down.  Normally this happens when the target
node supports SNMP, and reports the interface
in an administratively down state.  You can
use "rnetstat -i <node>" from a command line
to query the node directly to see the
state of the reported interfaces.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The NNM management station ID

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_IF_Testing .1.3.6.1.4.1.11.2.17.1.0.40000089 "LOGONLY" Normal
FORMAT IF $7 Testing
SDESC
This event is generated by HP OpenView when
it detects an interface is an a testing state.
Normally this happens when the target
node supports SNMP, and reports the interface
in an administratively testing state.  You can
use "rnetstat -i <node>" from a command line
to query the node directly to see the
state of the reported interfaces.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The NNM management station ID
    10) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Conn_Warning .1.3.6.1.4.1.11.2.17.1.0.40000090 "LOGONLY" Normal
FORMAT Connection to $8 - warning
SDESC
This event is generated by HP OpenView when
it detects a connection enters a warning
state.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The HP OpenView object identifier of the segment
       connected to
    8) The name (if known) or OVW object identifier of the
       segment connected to
    9) The NNM management station ID

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Conn_Major .1.3.6.1.4.1.11.2.17.1.0.40000091 "LOGONLY" Normal
FORMAT Connection to $8 - major
SDESC
This event is generated by HP OpenView when
it detects a connection enters a major
status level.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The HP OpenView object identifier of the segment
       connected to
    8) The name (if known) or OVW object identifier of the
       segment connected to
    9) The NNM management station ID

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Conn_AdminDown .1.3.6.1.4.1.11.2.17.1.0.40000092 "LOGONLY" Normal
FORMAT Connection to $8 - admin down
SDESC
This event is generated by HP OpenView when
it detects a connection is administratively down.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The HP OpenView object identifier of the segment
       connected to
    8) The name (if known) or OVW object identifier of the
       segment connected to
    9) The NNM management station ID

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Conn_Testing .1.3.6.1.4.1.11.2.17.1.0.40000093 "LOGONLY" Normal
FORMAT Connection to $8 - testing
SDESC
This event is generated by HP OpenView when
it detects a connection is in a testing state.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The HP OpenView object identifier of the segment
       connected to
    8) The name (if known) or OVW object identifier of the
       segment connected to
    9) The NNM management station ID

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_IF_Restricted .1.3.6.1.4.1.11.2.17.1.0.40000094 "LOGONLY" Normal
FORMAT IF $7 Restricted $12  Capabilities: $13  Root Cause: $14 $15
SDESC
This event is generated by HP OpenView when
it detects an interface is in a restricted state.
Normally this happens when the target
node supports SNMP, and reports the interface
in an operationally dormant state.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The NNM management station ID
   10) Event correlation event UUID which identifies
       the primary failure.
   11) Number of bits in the subnet mask of entity.
   12) Locale neutral description of the entity.
   13) Locale neutral comma separated list of capabilities of
       the entity.  For example, isSwitch,isIPRouter.
   14) Name of the primary failure host if available.
   15) Name of the primary failure entity if available.
   16) The HP OpenView object identifier of primary failure
       entity if available.
   17) Locale neutral description of the primary failure
       entity if available.
   18) Locale neutral comma separated list of capabilities of
       the primary failure entity if available.


On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Conn_Restricted .1.3.6.1.4.1.11.2.17.1.0.40000095 "LOGONLY" Normal
FORMAT Connection to $8 - restricted
SDESC
This event is generated by HP OpenView when
it detects a connection is in a restricted state.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The HP OpenView object identifier of the segment
       connected to
    8) The name (if known) or OVW object identifier of the
       segment connected to
    9) The NNM management station ID

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Node_SNMP_Addr .1.3.6.1.4.1.11.2.17.1.0.40000100 "LOGONLY" Normal
FORMAT SNMP address now $6 (was $7)
SDESC
This event is generated by HP OpenView when
the discovery and monitoring process (netmon)
decides to use a different SNMP address for
communicating with a node.  This normally
will happen if one interface of a node
becomes unreachable for some reason, and the
system must choose a new target address.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView Object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new SNMP address
    7) The old SNMP address

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_IF_Seg_Type .1.3.6.1.4.1.11.2.17.1.0.40000101 "LOGONLY" Normal
FORMAT IF $7, segment type changed to "$9"
SDESC
This event is generated by HP OpenView when it notices that
the expected segment type for an interface has changed.
This may happen as a result of the interface type changing
(ifType) as a result of a configuration poll of the target
node and interface.

The SNMP variable queried for the interface type is
.iso.org.dod.internet.mgmt.mib-2.interfaces.ifTable.
    ifEntry.ifType.<IF NUM>

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The new segment type

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_IF_Name_Chg .1.3.6.1.4.1.11.2.17.1.0.40000102 "LOGONLY" Normal
FORMAT Interface name for $8 changed to "$9"
SDESC
This event is generated by HP OpenView when it notices that
the interface name for a node has changed.  This
event occurs the first time an agent on a node comes up,
since the interface name goes from unknown to known.
The SNMP variable queried for this information is
.iso.org.dod.internet.mgmt.mib-2.interfaces.ifTable.
    ifEntry.ifName.<IF NUM>

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address of the interface, if any, or "0"
    9) The new interface name

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Upd_Network .1.3.6.1.4.1.11.2.17.1.0.40000108 "LOGONLY" Normal
FORMAT Network updated
SDESC
This event is generated via ovtopofix
when run with the -u or -U options.  As
a result of receiving this event, any
running ipmap processes will update the
matching symbols for the object in
currently open ovw maps.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the network
    3) The HP OpenView object identifier of the network
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Upd_Segment .1.3.6.1.4.1.11.2.17.1.0.40000109 "LOGONLY" Normal
FORMAT Segment updated
SDESC
This event is generated via ovtopofix
when run with the -u or -U options.  As
a result of receiving this event, any
running ipmap processes will update the
matching symbols for the object in
currently open ovw maps.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the segment
    3) The HP OpenView object identifier of the network
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Upd_Node .1.3.6.1.4.1.11.2.17.1.0.40000110 "LOGONLY" Normal
FORMAT Node updated
SDESC
This event is generated via ovtopofix
when run with the -u or -U options.  As
a result of receiving this event, any
running ipmap processes will update the
matching symbols for the object in
currently open OVW maps.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node
    3) The HP OpenView object identifier of the network
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Upd_Interface .1.3.6.1.4.1.11.2.17.1.0.40000111 "LOGONLY" Normal
FORMAT Interface $7 updated
SDESC
This event is generated via ovtopofix
when run with the -u or -U options.  As
a result of receiving this event, any
running ipmap processes will update the
matching symbols for the object in
currently open OVW maps.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
    7) The name or label for the interface
    8) The IP address for the interface
    9) The OpenView object identifier of the primary
        station monitoring the interface

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Upd_Station .1.3.6.1.4.1.11.2.17.1.0.40000112 "LOGONLY" Normal
FORMAT Station updated
SDESC
This event is generated via ovtopofix
when run with the -u or -U options.  As
a result of receiving this event, any
running ipmap processes will update the
matching symbols for the object in
currently open OVW maps.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the station
    3) The HP OpenView object identifier of the station
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_SNMPSysName .1.3.6.1.4.1.11.2.17.1.0.40000113 "LOGONLY" Normal
FORMAT System sysName (from SNMP) changed to "$6"
SDESC
This event is generated by HP OpenView when it notices that
the SNMP sysName field for a node has changed.  This event
occurs the first time an agent on a node comes up, since the
system name goes from unknown to known.  It may also
occurs when an SNMP agent changes.  The SNMP variable
queried for this information is
.iso.org.dod.internet.mgmt.mib-2.system.sysName.0

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView Object ID of the node that caused
       the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new system name

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_IPXServName .1.3.6.1.4.1.11.2.17.1.0.40000114 "LOGONLY" Normal
FORMAT IPX Server name changed to "$6"
SDESC
This event is generated by HP OpenView when it notices that
the IPX server name for a node has changed.  This event
occurs for systems that have IPX discovery enabled when the
discovery process determines a name via the IPX protocols.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView Object ID of the node that caused
       the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new IPX server name.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_IF_Disconnected_Nets .1.3.6.1.4.1.11.2.17.1.0.40000115 "LOGONLY" Normal
FORMAT $7 disconnected from all networks
SDESC
This event is generated by HP OpenView when
an interface is no longer connected to any network

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Warning .1.3.6.1.4.1.11.2.17.1.0.50462720 "LOGONLY" Warning
FORMAT $5
SDESC
This event is generated by HP OpenView when
it detects a warning situation.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event, if available
    3) The HP OpenView object identifier, if available
    4) The database name, if applicable
    5) Formatted description of event

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Inform .1.3.6.1.4.1.11.2.17.1.0.50462721 "LOGONLY" Normal
FORMAT $5
SDESC
This event is generated by HP OpenView when
it needs to log informational messages.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event, if available
    3) The HP OpenView object identifier, if available
    4) The database name, if applicable
    5) Formatted description of event

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Node_Marginal .1.3.6.1.4.1.11.2.17.1.0.50790400 "Status Alarms" Warning
FORMAT Node status - marginal
SDESC
This event is generated by HP OpenView when
it detects the status of a node has become
marginal (interfaces on the node are not all
up or all down).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView Object identifier of the node
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Station ID
    7) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Segment_Normal .1.3.6.1.4.1.11.2.17.1.0.50790401 "LOGONLY" Normal
FORMAT Seg normal
SDESC
This event is generated by HP OpenView when
it detects the status of a segment has been
restored to normal (all interfaces in the segment
are up).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the IP segment that caused the event
    3) The HP OpenView object identifier of the segment
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Station ID
    7) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Segment_Marginal .1.3.6.1.4.1.11.2.17.1.0.50790402 "LOGONLY" Warning
FORMAT Seg marginal
SDESC
This event is generated by HP OpenView when
it detects the status of a segment has gone
to marginal (interfaces in the segment
are not all up or all down).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the IP segment that caused the event
    3) The HP OpenView object identifier of the segment
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Station ID
    7) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Network_Normal .1.3.6.1.4.1.11.2.17.1.0.50790403 "LOGONLY" Normal
FORMAT Net normal
SDESC
This event is generated by HP OpenView when
it detects the status of a network has been
restored to normal (all segments on the network
are up).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the network that caused the event
    3) The HP OpenView object identifier of the network that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Station ID
    7) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Network_Marginal .1.3.6.1.4.1.11.2.17.1.0.50790404 "LOGONLY" Warning
FORMAT Net marginal
SDESC
This event is generated by HP OpenView when
it detects the status of a network has gone
to marginal (segments on the network
are not all up or all down).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the network that caused the event
    3) The HP OpenView object identifier of the network that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Station ID
    7) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Segment_Added .1.3.6.1.4.1.11.2.17.1.0.50790405 "LOGONLY" Normal
FORMAT Seg added
SDESC
This event is generated by HP OpenView when
a new segment has been added to the map
topology.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the IP segment that caused the event
    3) The HP OpenView object identifier of the segment
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Segment_Deleted .1.3.6.1.4.1.11.2.17.1.0.50790406 "LOGONLY" Normal
FORMAT Seg deleted
SDESC
This event is generated by HP OpenView when
a segment has been deleted from the map
topology.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the IP segment that caused the event
    3) The HP OpenView object identifier of the segment
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Network_Added .1.3.6.1.4.1.11.2.17.1.0.50790407 "LOGONLY" Normal
FORMAT Net added
SDESC
This event is generated by HP OpenView when
a new network has been added to the IP
topology database.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the network that caused the event
    3) The HP OpenView object identifier of the network that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Network_Deleted .1.3.6.1.4.1.11.2.17.1.0.50790408 "LOGONLY" Normal
FORMAT Net deleted
SDESC
This event is generated by HP OpenView when
a network has been deleted from the IP
topology database.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the network that caused the event
    3) The HP OpenView Object ID of the network that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Connection_Added .1.3.6.1.4.1.11.2.17.1.0.50790409 "LOGONLY" Normal
FORMAT Conn added to $8
SDESC
This event is generated by HP OpenView when
a connection has been added to the IP
topology database.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The HP OpenView object identifier of the segment
       connected to
    8) The name (if known) or OVW object identifier of the
                 segment connected to
    9) The NNM management station ID

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_ConnectionDeleted .1.3.6.1.4.1.11.2.17.1.0.50790410 "LOGONLY" Normal
FORMAT Conn to $8 deleted
SDESC
This event is generated by HP OpenView when
a connection has been deleted from the IP
topology database.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the connection
       that caused the event
    7) The HP OpenView object identifier of the segment
       connected to
    8) The name (if known) or OVW object identifier of the
                 segment connected to
    9) The NNM management station ID

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Change_Poll_Parms .1.3.6.1.4.1.11.2.17.1.0.50790411 "LOGONLY" Normal
FORMAT netmon polling chg
SDESC
This event is generated by HP OpenView when
the network monitoring (netmon) polling parameters
have been modified by the user.  This event is
generated by nmpolling for netmon when it modifies
the polling file that configures netmon.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event
    3) Not applicable
    4) The program name generating event
    5) The name of the new configuration file

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Force_Polling .1.3.6.1.4.1.11.2.17.1.0.50790412 "LOGONLY" Normal
FORMAT netmon poll
SDESC
This event is generated by HP OpenView when
a "demand poll" operation (force polling operation)
has been initiated by the user for the network
monitoring program (netmon).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node being demand polled
    3) HP OpenView object identifier, if available
    4) The database name, if applicable
    5) The IP address of the node requesting
       the poll information
    6) The TCP port number to connect to on
       the requesting node

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Cancel_Force_Poll .1.3.6.1.4.1.11.2.17.1.0.50790413 "LOGONLY" Normal
FORMAT Cancel netmon poll
SDESC
This event is generated by HP OpenView when
a "demand poll" operation (force polling operation)
has been canceled by the user for the network
monitoring program (netmon).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node being demand polled
    3) HP OpenView object identifier, if available
    4) The database name, if applicable

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Force_Status_Only_Polling .1.3.6.1.4.1.11.2.17.1.0.50790414 "LOGONLY" Normal
FORMAT netmon status only poll
SDESC
This event is generated by HP OpenView when
a "interface status poll" operation (force polling
operation) has been initiated by the user for the network
monitoring program (netmon).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node being demand polled
    3) HP OpenView object identifier, if available
    4) The database name, if applicable
    5) The IP address of the node requesting
       the poll information
    6) The TCP port number to connect to on
       the requesting node

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Manage_Network .1.3.6.1.4.1.11.2.17.1.0.50790416 "LOGONLY" Normal
FORMAT Net managed
SDESC
This event is generated by HP OpenView when
a network has been managed (begin monitoring
status of segments on network).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the network that caused the event
    3) The HP OpenView object identifier of the network that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Unmanage_Network .1.3.6.1.4.1.11.2.17.1.0.50790417 "LOGONLY" Normal
FORMAT Net unmanaged
SDESC
This event is generated by HP OpenView when
a network has been unmanaged (end monitoring
status of segments on network).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the network that caused the event
    3) The HP OpenView object identifier of the network that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Manage_Node .1.3.6.1.4.1.11.2.17.1.0.50790418 "LOGONLY" Normal
FORMAT Node managed
SDESC
This event is generated by HP OpenView when
a node has been managed (begin monitoring
status of interfaces on node).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Unmanage_Node .1.3.6.1.4.1.11.2.17.1.0.50790419 "LOGONLY" Normal
FORMAT Node unmanaged
SDESC
This event is generated by HP OpenView when
a network has been unmanaged (end monitoring
status of interfaces on node).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the network that caused the event
    3) The HP OpenView object identifier of the network that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Manage_Segment .1.3.6.1.4.1.11.2.17.1.0.50790420 "LOGONLY" Normal
FORMAT Seg managed
SDESC
This event is generated by HP OpenView when
a segment has been managed (begin monitoring
status of nodes on segment).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the segment that caused the event
    3) The HP OpenView object identifier of the segment that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Unmanage_Segment .1.3.6.1.4.1.11.2.17.1.0.50790421 "LOGONLY" Normal
FORMAT Seg unmanaged
SDESC
This event is generated by HP OpenView when
a segment has been unmanaged (end monitoring
status of nodes on segment).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the segment that caused the event
    3) The HP OpenView object identifier of the segment that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Chg_Trace_File .1.3.6.1.4.1.11.2.17.1.0.50790422 "LOGONLY" Normal
FORMAT netmon trace $5
SDESC
This event is generated by HP OpenView when
the trace file for the network monitor (netmon)
has changed.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event, if applicable
    3) The HP OpenView object identifier, if available
    4) The Database name, if applicable
    5) The new trace file

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Chg_Trace_Mask .1.3.6.1.4.1.11.2.17.1.0.50790423 "LOGONLY" Normal
FORMAT netmon trace mask $5
SDESC
This event is generated by HP OpenView when
the trace file mask for the network monitor (netmon)
has changed.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event, if applicable
    3) The HP OpenView object identifier, if available
    4) The database name, if applicable
    5) The new trace mask

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Trace_Node_Info .1.3.6.1.4.1.11.2.17.1.0.50790424 "LOGONLY" Normal
FORMAT netmon node dump
SDESC
This event is generated by HP OpenView when
the network monitor (netmon) is requested to
dump information about a node to its
trace file.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node to dump
    3) The HP OpenView object identifier, if available
    4) The database name, if applicable

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Trace_IF_Info .1.3.6.1.4.1.11.2.17.1.0.50790425 "LOGONLY" Normal
FORMAT netmon IF dump
SDESC
This event is generated by HP OpenView when
the network monitor (netmon) is requested to
dump information about an interface to its
trace file.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node for the interface
    3) The HP OpenView object identifier, if available
    4) The database name, if applicable
    5) The IP address of the interface to dump

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Trace_Actions .1.3.6.1.4.1.11.2.17.1.0.50790426 "LOGONLY" Normal
FORMAT netmon action dump
SDESC
This event is generated by HP OpenView when
the network monitor (netmon) is requested to
dump information about what actions it does
to its trace file.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node, if applicable
    3) The HP OpenView object identifier, if available
    4) The database name, if applicable
    5) The netmon action to dump

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Chg_IF_Segment .1.3.6.1.4.1.11.2.17.1.0.50790427 "LOGONLY" Normal
FORMAT IF $7 to seg $10
SDESC
This event is generated by HP OpenView when
an interface is moved to a new segment.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The HP OpenView object identifier of the new segment
   10) The name of the new segment

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Chg_IF_Network .1.3.6.1.4.1.11.2.17.1.0.50790428 "LOGONLY" Normal
FORMAT IF $7 to net $10
SDESC
This event is generated by HP OpenView when
an interface is moved to a new network.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The HP OpenView object identifier of the new network
   10) The name of the new network

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_NS_PerformErr .1.3.6.1.4.1.11.2.17.1.0.50790429 "Error Alarms" Critical
FORMAT Your Name Services are performing poorly, likely misconfigured.  The average for the past $3 lookups took $4 milleseconds, expect less than $5 milleseconds.
DISPLAY Your Name Services are performing poorly, likely misconfigured.  The average for the past $3 lookups took $4 milleseconds, expect less than $5 milleseconds.
SDESC
This event is generated by HP OpenView's netmon process when
it detects that Name Service lookups are very slow.  This is
likely a Name Server configuration problem.  If the
performance is truly not a problem, modify the "-U" option
in the netmon.lrf file to adjust what the average delay is
required to generate an event, as given by data #4 below.
You should look in your /etc/resolv.conf file on Unix or
your TCP/IP DNS properties on Windows NT to improve your
system performance.  For more information see the netmon(1m)
reference page.

For information on improving your Name Services performance,
see the "Improving Performance" section of the Release
Notes.

The data passed with the event is
    1) The ID of application sending the event
    2) Not Applicable
    3) The number of Name Server lookups performed
       since startup
    4) The average number of milleseconds the
       Name Server required for these requests
    5) The threshold value configured by
       netmon's -U option

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_NS_PerformWarn .1.3.6.1.4.1.11.2.17.1.0.50790430 "Error Alarms" Minor
FORMAT Your Name Services is performing poorly, possibly misconfigured.  $3 of $4 took $5 seconds to resolve.
SDESC
This event is generated by HP OpenView's netmon process when
it detects a Name Services lookup that took a very long
time.  This is likely a Name Server configuration problem.
Sometimes addresses need to go through several systems to be
resolved, resulting in increased delay.  See
$OV_LOG/netmon.trace for other addresses that are very slow
to lookup.  If the performance is truly not a problem,
modify the "-T" option in the netmon.lrf file to adjust how
slow a Name Service requests must be to generate an event
(as given by data #4, below).  You should look in your
/etc/resolv.conf file on Unix or your TCP/IP DNS properties
on Windows NT to improve your system performance.  For more
information see the netmon(1m) reference page.

For information on improving your Name Services performance,
see the "Improving Performance" section of the Release
Notes.

The data passed with the event is
    1) The ID of application sending the event
    2) Not Applicable
    2) Lookup type ("Host lookup" or
       "IP address lookup")
    4) String being looked up in the Name Service
    5) Number of seconds to resolve

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DmiToSnmp_Change .1.3.6.1.4.1.11.2.17.1.0.50790435 "LOGONLY" Normal
FORMAT DMI-to-SNMP configuration file changed
SDESC
This event is generated by HP OpenView when the
DMI Classname to SNMP OID configuration file is
modified using the ovdmi2snmp -load command.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event
    3) Not applicable
    4) The program name generating event
    5) The name of the modified configuration file

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Filter_Change .1.3.6.1.4.1.11.2.17.1.0.50790436 "LOGONLY" Normal
FORMAT Filter file ($4) changed
SDESC
This event is generated by HP OpenView when any
filter file changes via a filter modification
tool, or the nmfilterchk -event command is issued.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event
    3) Not applicable
    4) The program name generating event
    5) The name of the modified filter file

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_SnmpConf_Change .1.3.6.1.4.1.11.2.17.1.0.50790437 "LOGONLY" Normal
FORMAT snmp conf chg
SDESC
This event is generated by HP OpenView when the SNMP
configurator changes the configuration database.  This
is generated by xnmsnmpconf.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event
    3) Not applicable
    4) The program name generating event
    5) The name of the new configuration file

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_TrapFormat_Change .1.3.6.1.4.1.11.2.17.1.0.50790438 "LOGONLY" Normal
FORMAT event fmt chg
SDESC
This event is generated by HP OpenView when the event
formatter changes trapd.conf. This is generated by
xnmtrap or xnmevents for xnmevents, ovactiond, and pmd.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event
    3) Not applicable
    4) The program name generating event
    5) The name of the new configuration file

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_MIB_Change .1.3.6.1.4.1.11.2.17.1.0.50790439 "LOGONLY" Normal
FORMAT MIB chg
SDESC
This event is generated by HP OpenView when
the SNMP MIB loader configuration has change
(generated by xnmloadmib for xnmevents and pmd)

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event
    3) Not applicable
    4) The name of the new binary file

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Data_Collect_Chg .1.3.6.1.4.1.11.2.17.1.0.50790440 "LOGONLY" Normal
FORMAT snmp col chg
SDESC
This event is generated by HP OpenView when
the data collector configuration has changed.
This event is generated by xnmcollect for
snmpCollect when it modifies the snmpCol.conf
file.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event
    3) Not applicable
    4) The program name generating event
    5) The name of the new configuration file

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Manage_IF .1.3.6.1.4.1.11.2.17.1.0.50790441 "LOGONLY" Normal
FORMAT Manage IF $7
SDESC
This event is generated by HP OpenView when
an interface is managed (status polling
is enabled).

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The NNM management station ID

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Unmanage_IF .1.3.6.1.4.1.11.2.17.1.0.50790442 "LOGONLY" Normal
FORMAT Unmanage IF $7
SDESC
This event is generated by HP OpenView when
an interface is unmanaged (status polling
is disabled).

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The NNM management station ID

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Network_Flg_Chg .1.3.6.1.4.1.11.2.17.1.0.50790443 "LOGONLY" Normal
FORMAT Net flags $8
SDESC
This event is generated by HP OpenView when
it changes its internal flags on a network.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the network that caused the event
    3) The HP OpenView object identifier of the network that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new flags as an integer
    7) The old flags as an integer
    8) The new flags as a nicely formatted string

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Segment_Flag_Chg .1.3.6.1.4.1.11.2.17.1.0.50790444 "LOGONLY" Normal
FORMAT Seg flags $8
SDESC
This event is generated by HP OpenView when
it changes its internal flags on a segment.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the segment that caused the event
    3) The HP OpenView object identifier of the segment that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new flags as an integer
    7) The old flags as an integer
    8) The new flags as a nicely formatted string

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Node_Flags_Chg .1.3.6.1.4.1.11.2.17.1.0.50790445 "LOGONLY" Normal
FORMAT Node flags $8
SDESC
This event is generated by HP OpenView when
it changes its internal flags on a node.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new flags as an integer
    7) The old flags as an integer
    8) The new flags as a nicely formatted string

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_IF_Flags_Chg .1.3.6.1.4.1.11.2.17.1.0.50790446 "LOGONLY" Normal
FORMAT IF flags $7 to $11
SDESC
This event is generated by HP OpenView when
it changes its internal flags on an interface.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The new internal flags for the interface (integer)
   10) The old internal flags for the interface (integer)
   11) The new internal flags for the interface (string)

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_RepLogMaskCh .1.3.6.1.4.1.11.2.17.1.0.51000000 "Application Alert Alarms" Normal
FORMAT new ovrepld log mask: $6
SDESC
This event is generated by the HP OpenView IP topology
replicator when it is executed with the -M option to
change the log mask of a running ovrepld process.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new replicator log mask

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_RepPrintDS .1.3.6.1.4.1.11.2.17.1.0.51000001 "Application Alert Alarms" Normal
FORMAT Print ovrepld internal data structures to the log file.  Structures: $6
SDESC
This event is generated by the HP OpenView IP topology
replicator when it is executed with the -p option to
request that a running ovrepld process print its data
structures to its log files.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The data structures to print to the log

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_RepPollStation .1.3.6.1.4.1.11.2.17.1.0.51000002 "Application Alert Alarms" Normal
FORMAT Poll Collection Station $8, source: $6-$7
SDESC
This event is generated by and HP OpenView application
when it wants the replicator to synchronize the local
topology with that of a collection station.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The IP address of the node on which the application
       sending the event resides.
    7) The port number on which the application sending the
       event will listen for synchronization results.
    8) The name of the station to poll

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_StopPollStation .1.3.6.1.4.1.11.2.17.1.0.51000003 "Application Alert Alarms" Normal
FORMAT Stop Poll of Collection Station $6
SDESC
This event is generated by and HP OpenView application
when it wants the replicator to synchronize the local
topology with that of a collection station.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The name of the station to stop polling

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_RepIfStatusSyncStn .1.3.6.1.4.1.11.2.17.1.0.51000004 "Application Alert Alarms" Normal
FORMAT Interface Status Sync of Collection Station $6
SDESC
This event is generated by an HP OpenView application
when it wants the replicator to synchronize the interfaces
in the local topology which have changed status with the
interfaces on the collection station.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The name of the station to synchronize the interface
	   status changes.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
EDESC
#
#
#
EVENT OV_ChangeTopoFilter .1.3.6.1.4.1.11.2.17.1.0.52000000 "Application Alert Alarms" Normal
FORMAT Change Topology Filter to '$4'
SDESC
This event is generated by and HP OpenView application
when it wants the replicator to synchronize the local
topology with that of a collection station.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The database name, if applicable
    4) The name of the new topology filter to use
       (possibly an empty name)

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollectThresh .1.3.6.1.4.1.11.2.17.1.0.58720263 "Threshold Alarms" Major
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value compared against
       (for string variables, this will be the last value)
    8) The sampled value
    9) The highest sampled (peak) value
       (for string variables, this will be the last value)
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
       (for string variables, this will be the last value)
   12) The time the lowest value was sampled
   13) The threshold information string
       This string gives information about why the threshold
       was exceeded.  It varies based on the type of
       threshold that was defined.

       If both Standard Deviation and Fixed numeric
       thresholds are exceeded, the standard deviation
       information will be included in this string and the
       fixed threshold will be given in $7.  The form of
       this argument will be:
          BUCKETNAME #pts: NUMPTS StdDev: STDDEV * STDDEVTHRESH
	  mean: MEAN and FIXEDOP

       If only Standard Deviation numeric thresholds are
       exceeded, all but the mean is included here, and the
       mean is given as $7.  The form of the argument will
       be:
          BUCKETNAME #pts: NUMPTS StdDev: STDDEV * STDDEVTHRESH
	  mean: MEAN

       If only Fixed numeric thresholds are exceeded, this
       string will be:
	  FIXED_OP

       BUCKETNAME is the name of the bucket (from
	    $OV_CONF/statTimeRanges.conf)
       NUMPTS is the number of points that contributed to
	  this calculation
       STDDEV is the standard deviation
       STDDEVTHRESH is the threshold value that was given
       MEAN is the mean value
       FIXED_OP: one of ">", ">=", "<", "<=", "!=", or "=="

       If the MIB variable is a string, this value will
       always be "!=".
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollect_Rearm .1.3.6.1.4.1.11.2.17.1.0.58720264 "Threshold Alarms" Normal
FORMAT $5.$6 threshold rearmed ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
SDESC
This event is generated by HP OpenView data collector when a
sampled value drops below a preconfigured level, after
generating an event for exceeding a value.  (See also
specific event #58720263 for value exceeded events).  The
user may also configure rearm events with specific trap
numbers in the even range of 2 to 10000.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the rearm event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The instance
    7) The rearm value compared against
       (for string variables, this will be the last value)
    8) The sample value
    9) The highest sampled (peak) value
       (for string variables, this will be the last value)
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
       (for string variables, this will be the last value)
   12) The time the lowest value was sampled
   13) The rearm information string
       This string gives information about why the rearm
       was exceeded.  It varies based on the type of
       rearm that was defined.

       If both Standard Deviation and Fixed numeric rearms
       are exceeded, the standard deviation information will
       be included in this string and the fixed rearm will
       be given in $7.  The form of this argument will be:
          BUCKETNAME #pts: NUMPTS StdDev: STDDEV * STDDEVREARM
	  mean: MEAN and FIXEDOP

       If only Standard Deviation numeric rearms are
       exceeded, all but the mean is included here, and the
       mean is given as $7.  The form of the argument will
       be:
          BUCKETNAME #pts: NUMPTS StdDev: STDDEV * STDDEVREARM
	  mean: MEAN

       If only Fixed numeric rearms are exceeded, this
       string will be:
	  FIXED_OP

       BUCKETNAME is the name of the bucket (from
	    $OV_CONF/statTimeRanges.conf)
       NUMPTS is the number of points that contributed to
	  this calculation
       STDDEV is the standard deviation
       STDDEVREARM is the rearm value that was given
       MEAN is the mean value
       FIXED_OP: one of ">", ">=", "<", "<=", "!=", or "=="

       If the MIB variable is a string, this value will
       always be "!=".
   14) The rearm count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataCollect_Error .1.3.6.1.4.1.11.2.17.1.0.58720265 "Error Alarms" Major
FORMAT $4
SDESC
This event is generated by HP OpenView data collector when
an error is detected.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the machine running snmpCollect
    3) Not applicable
    4) The error message

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataColl_AgentDn .1.3.6.1.4.1.11.2.17.1.0.58720266 "Status Alarms" Minor
FORMAT Data Collection stopped on $5.$6.  Last successful collection: $7.  Consecutive timeout #$8.  Reason: $9
SDESC
This event is generated by HP OpenView data collector when
it is no longer able to collect a variable from an agent.
This could be caused by the node being unreachable or the
agent no longer executing.   You can turn this
event off in the future by modifying data collection
configuration, or you can ensure that the node responds
to SNMP.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that is no longer responding
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The time since last successful collection or
       "Unknown" if no successful collection since data
       collector last started (i.e. first colleciton
       failed)
    8) The number of consecutive timeouts
    9) The reason the last collection failed

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataColl_Data .1.3.6.1.4.1.11.2.17.1.0.58720267 "LOGONLY" Normal
FORMAT Data Collection data event for $3.$4
SDESC
This event is generated to HP OpenView data collector for
the purpose of sending externally collected data.
If no such collection exists, the data is ignored.

The data passed with the event is
    1) The ID of application sending the event
    2) Not Applicable
    3) The MIB variable or mibExpression
    4) The MIB instance
    5) Binary data in the form
	[4 bytes time_t start][4 byte time_t stop]
        [4 byte ovwObjID][4 byte value as integer]...
    6-N) optional tripplet of varBinds like #3, #4, and #5

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataColl_StatChg .1.3.6.1.4.1.11.2.17.1.0.58720268 "LOGONLY" Normal
FORMAT Data Collection statistics file changed
SDESC
This event is generated to the HP OpenView data collector
when the $OV_DB/snmpCollect/snmpColStats.txt or
when the $OV_CONF/statTimeRanges.conf files have changed

The data passed with the event is
    1) The ID of application sending the event
    2) Not applicable

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataColl_AgentRestart .1.3.6.1.4.1.11.2.17.1.0.58720269 "LOGONLY" Warning
FORMAT Agent restarted.  sysUpTime wrapped from $4 to $5
SDESC
This event is generated by HP OpenView data collector when
it sees that the sysUpTime for a node (which has not been
detected down by netmon) has reset, likely from an agent
restarting.  If snmpCollect sees that the sysUpTime MIB
variable is less than the previously collected value,
it will generate this event.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that has the agent that
       restarted
    3) The HP OpenView object identifier of #2
    4) The previous sysUpTime
    5) The current sysUpTIme

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataColl_Busy .1.3.6.1.4.1.11.2.17.1.0.58720270 "Error Alarms" Major
FORMAT Data Collection has too many requests (busy for $3 minutes).  Consider increasing collection intervals.
DISPLAY Data Collection has too many requests (busy for $3 minutes).  Consider increasing collection intervals.
SDESC
This event is generated by the HP OpenView data collector
when it detects that it has not been busy for more than
5 minutes.  This occurs if the data collector has been
instructed to collect on too many nodes, or at too short
of an interval.  Run 'ovstatus snmpCollect' for latest
statistics.

The data passed with the event is
    1) The ID of application sending the event
    2) Not applicable
    3) The number of minutes snmpCollect has been busy

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DataColl_Trace .1.3.6.1.4.1.11.2.17.1.0.58720273 "LOGONLY" Normal
FORMAT Data Collection state traced
SDESC
This event is generated by the HP OpenView data collector
via the snmpCollect -S to make sure the data collector
awakes to process the dump status flag

The data passed with the event is
    1) The ID of application sending the event

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_IF_Added .1.3.6.1.4.1.11.2.17.1.0.58785792 "Configuration Alarms" Normal
FORMAT IF $7 added
SDESC
This event is generated by HP OpenView when
an interface has been added to the IP
topology database.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView Object ID of the node that caused
       the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView Object ID of the interface that
       caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The NNM management station ID

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT J20-IF-Added .1.3.6.1.4.1.11.2.17.1.0.58785792 "J20-GGSN" Normal
FORMAT IF $7 added
NODES MIOT-G01.ippubbl.wind MIOT-U01.ippubbl.wind RMCC-G01.ippubbl.wind RMID-U01.ippubbl.wind
SDESC
This event is generated by HP OpenView when
an interface has been added to the IP
topology database.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView Object ID of the node that caused
       the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView Object ID of the interface that
       caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The NNM management station ID

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT WC_IF_Added .1.3.6.1.4.1.11.2.17.1.0.58785792 "Cisco IPBA" Normal
FORMAT IF $7 added
NODES BADE-E40.ippubbl.wind BOTE-E40.ippubbl.wind CAQU-E40.ippubbl.wind FICI-E40.ippubbl.wind GECA-E40.ippubbl.wind MICA-E40.ippubbl.wind MICA-E41.ippubbl.wind MICL-BRQX01.ippubbl.wind MICL-BRQX02.ippubbl.wind MIOT-CNIPAITNET01.ippubbl.wind MIOT-CNIPAITNET02.ippubbl.wind NAGI-E40.ippubbl.wind PACR-E40.ippubbl.wind PDUR-E40.ippubbl.wind RMSA-E40.ippubbl.wind RMSA-E41.ippubbl.wind RMTI-BRQX01.ippubbl.wind RMTI-BRQX02.ippubbl.wind TONI-E40.ippubbl.wind TSMO-E40.ippubbl.wind
SDESC
This event is generated by HP OpenView when
an interface has been added to the IP
topology database.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView Object ID of the node that caused
       the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView Object ID of the interface that
       caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The NNM management station ID

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT J20_IF_Deleted .1.3.6.1.4.1.11.2.17.1.0.58785793 "J20-GGSN" Normal
FORMAT IF $7 deleted
NODES MIOT-G01.ippubbl.wind MIOT-U01.ippubbl.wind RMCC-G01.ippubbl.wind RMID-U01.ippubbl.wind
SDESC
This event is generated by HP OpenView when
an interface has been deleted from the IP
topology database.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView Object ID of the node that caused
       the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView Object ID of the interface that
       caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The NNM management station ID

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_IF_Deleted .1.3.6.1.4.1.11.2.17.1.0.58785793 "Configuration Alarms" Normal
FORMAT IF $7 deleted
SDESC
This event is generated by HP OpenView when
an interface has been deleted from the IP
topology database.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView Object ID of the node that caused
       the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView Object ID of the interface that
       caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The NNM management station ID

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT WC_IF_deleted .1.3.6.1.4.1.11.2.17.1.0.58785793 "Cisco IPBA" Normal
FORMAT IF $7 deleted
NODES BADE-E40.ippubbl.wind BOTE-E40.ippubbl.wind CAQU-E40.ippubbl.wind FICI-E40.ippubbl.wind GECA-E40.ippubbl.wind MICA-E40.ippubbl.wind MICA-E41.ippubbl.wind MICL-BRQX01.ippubbl.wind MICL-BRQX02.ippubbl.wind MIOT-CNIPAITNET01.ippubbl.wind MIOT-CNIPAITNET02.ippubbl.wind NAGI-E40.ippubbl.wind PACR-E40.ippubbl.wind PDUR-E40.ippubbl.wind RMSA-E40.ippubbl.wind RMSA-E41.ippubbl.wind RMTI-BRQX01.ippubbl.wind RMTI-BRQX02.ippubbl.wind TONI-E40.ippubbl.wind TSMO-E40.ippubbl.wind
SDESC
This event is generated by HP OpenView when
an interface has been deleted from the IP
topology database.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView Object ID of the node that caused
       the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView Object ID of the interface that
       caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The NNM management station ID

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Node_Added .1.3.6.1.4.1.11.2.17.1.0.58785794 "Configuration Alarms" Normal
FORMAT Node added
EXEC Node_Add "$A" "Node $A has been added."
SDESC
This event is generated by HP OpenView when
a node has been added to the map topology.

If you are running the SNMP event browser with the X
resources xnmevents.filterByMap:True on a UNIX platform,
or XNmevents filterByMap application resource set to a
non-zero value in the registry on Windows NT, you may not
see this event, because the node may not have yet been
automatically added to the current map.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Node_Deleted .1.3.6.1.4.1.11.2.17.1.0.58785795 "LOGONLY" Normal
FORMAT Node deleted
SDESC
This event is generated by HP OpenView when
a node has been deleted from the map topology.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Error .1.3.6.1.4.1.11.2.17.1.0.58851329 "Error Alarms" Major
FORMAT $5
SDESC
This event is generated by HP OpenView when
it detects a error situation.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event, if available
    3) The HP OpenView object identifier, if available
    4) The database name, if applicable
    5) The formatted description of event

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Fatal_Error .1.3.6.1.4.1.11.2.17.1.0.58851330 "Error Alarms" Critical
FORMAT $5
SDESC
This event is generated by HP OpenView when
it detects a fatal error situation.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event, if available
    3) The HP OpenView object identifier, if available
    4) The database name, if applicable
    5) The formatted description of event

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Trap_PDU_Error .1.3.6.1.4.1.11.2.17.1.0.58851331 "LOGONLY" Warning
FORMAT $5
SDESC
This event is generated when HP OpenView detects
an error trying to read or decode an incoming trap.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event, if available
    3) Not applicable
    4) Not applicable
    5) The description of parse error

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_NotTrustedCmd .1.3.6.1.4.1.11.2.17.1.0.58851332 "Error Alarms" Major
FORMAT Command "$3" in response to event $4 from $5 is not listed as a trusted action in $$OV_CONF/trustedCmds.conf/
DISPLAY Command "$3" in response to event $4 from $5 is not listed as a trusted action in $$OV_CONF/trustedCmds.conf/
SDESC
This event is generated when HP OpenView detects
that an action to be executed in response to an
event is not listed as a trusted command.  These
commands are listed in the $OV_CONF/trustedCmd.conf/
directory.  To disable trusted commands, create the
file $OV_CONF/trustedCmds.conf/ALLOW_ALL.  See the
ovactiond(1M) reference page for more details.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event, if available
    3) The command that was to be executed
    4) The event identifier of the original event
    5) The node that generated the original event

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Node_Up .1.3.6.1.4.1.11.2.17.1.0.58916864 "Status Alarms" Normal
FORMAT Node up
SDESC
This event is generated by HP OpenView when
it detects the status of a node has become
up (interfaces on the node are all up).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Station ID
    7) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT J20_Node_Up .1.3.6.1.4.1.11.2.17.1.0.58916864 "J20-GGSN" Normal
FORMAT Node up
NODES MIOT-G01.ippubbl.wind MIOT-U01.ippubbl.wind RMCC-G01.ippubbl.wind RMID-U01.ippubbl.wind
SDESC
This event is generated by HP OpenView when
it detects the status of a node has become
up (interfaces on the node are all up).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Station ID
    7) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT J20_Node_Down .1.3.6.1.4.1.11.2.17.1.0.58916865 "J20-GGSN" Critical
FORMAT Node down
NODES MIOT-G01.ippubbl.wind MIOT-U01.ippubbl.wind RMCC-G01.ippubbl.wind RMID-U01.ippubbl.wind
SDESC
This event is generated by HP OpenView when
it detects the status of a node has become
down (all interfaces on the node are down).
Interfaces are classified as down if the netmon
process does not get ICMP echo responses from
the node.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Station ID
    7) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT WC_Node_down .1.3.6.1.4.1.11.2.17.1.0.58916865 "Cisco IPBA" Critical
FORMAT Node down
NODES BADE-E40.ippubbl.wind BOTE-E40.ippubbl.wind CAQU-E40.ippubbl.wind FICI-E40.ippubbl.wind GECA-E40.ippubbl.wind MICA-E40.ippubbl.wind MICA-E41.ippubbl.wind MICL-BRQX01.ippubbl.wind MICL-BRQX02.ippubbl.wind MIOT-CNIPAITNET01.ippubbl.wind MIOT-CNIPAITNET02.ippubbl.wind NAGI-E40.ippubbl.wind PACR-E40.ippubbl.wind PDUR-E40.ippubbl.wind RMSA-E40.ippubbl.wind RMSA-E41.ippubbl.wind RMTI-BRQX01.ippubbl.wind RMTI-BRQX02.ippubbl.wind TONI-E40.ippubbl.wind TSMO-E40.ippubbl.wind
SDESC
This event is generated by HP OpenView when
it detects the status of a node has become
down (all interfaces on the node are down).
Interfaces are classified as down if the netmon
process does not get ICMP echo responses from
the node.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Station ID
    7) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Node_Down .1.3.6.1.4.1.11.2.17.1.0.58916865 "Status Alarms" Warning
FORMAT Node down
SDESC
This event is generated by HP OpenView when
it detects the status of a node has become
down (all interfaces on the node are down).
Interfaces are classified as down if the netmon
process does not get ICMP echo responses from
the node.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Station ID
    7) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT J20_IF_Up .1.3.6.1.4.1.11.2.17.1.0.58916866 "J20-GGSN" Normal
FORMAT IF $7 up
NODES MIOT-G01.ippubbl.wind MIOT-U01.ippubbl.wind RMCC-G01.ippubbl.wind RMID-U01.ippubbl.wind
SDESC
This event is generated by HP OpenView when
it detects the status of an interface has come
up, normally by responding to an ICMP Echo (ping)
request.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView Object ID of the node that caused
       the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The NNM management station ID
    10) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT WC_IF_UP .1.3.6.1.4.1.11.2.17.1.0.58916866 "Cisco IPBA" Normal
FORMAT IF $7 up
NODES BADE-E40.ippubbl.wind BOTE-E40.ippubbl.wind CAQU-E40.ippubbl.wind FICI-E40.ippubbl.wind GECA-E40.ippubbl.wind MICA-E40.ippubbl.wind MICA-E41.ippubbl.wind MICL-BRQX01.ippubbl.wind MICL-BRQX02.ippubbl.wind MIOT-CNIPAITNET01.ippubbl.wind MIOT-CNIPAITNET02.ippubbl.wind NAGI-E40.ippubbl.wind PACR-E40.ippubbl.wind PDUR-E40.ippubbl.wind RMSA-E40.ippubbl.wind RMSA-E41.ippubbl.wind RMTI-BRQX01.ippubbl.wind RMTI-BRQX02.ippubbl.wind TONI-E40.ippubbl.wind TSMO-E40.ippubbl.wind
SDESC
This event is generated by HP OpenView when
it detects the status of an interface has come
up, normally by responding to an ICMP Echo (ping)
request.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView Object ID of the node that caused
       the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The NNM management station ID
    10) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_IF_Up .1.3.6.1.4.1.11.2.17.1.0.58916866 "Error Alarms" Normal
FORMAT IF $7 up
SDESC
This event is generated by HP OpenView when
it detects the status of an interface has come
up, normally by responding to an ICMP Echo (ping)
request.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView Object ID of the node that caused
       the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The NNM management station ID
    10) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT WC_IF_Down .1.3.6.1.4.1.11.2.17.1.0.58916867 "Cisco IPBA" Warning
FORMAT IF $7 down
EXEC /home/admin/PROGRAMMI/MARTI/IF-DOWN/ifdown "$7" "$2"
NODES BADE-E40.ippubbl.wind BOTE-E40.ippubbl.wind CAQU-E40.ippubbl.wind FICI-E40.ippubbl.wind GECA-E40.ippubbl.wind MICA-E40.ippubbl.wind MICA-E41.ippubbl.wind MICL-BRQX01.ippubbl.wind MICL-BRQX02.ippubbl.wind MIOT-CNIPAITNET01.ippubbl.wind MIOT-CNIPAITNET02.ippubbl.wind NAGI-E40.ippubbl.wind PACR-E40.ippubbl.wind PDUR-E40.ippubbl.wind RMSA-E40.ippubbl.wind RMSA-E41.ippubbl.wind RMTI-BRQX01.ippubbl.wind RMTI-BRQX02.ippubbl.wind TSMO-E40.ippubbl.wind
SDESC
This event is generated by HP OpenView when
it detects the status of an interface has gone
down.  Normally this happens when an interface with
an IP address no longer responds to ICMP Echo (ping)
requests.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The NNM management station ID
    10) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_IF_Down .1.3.6.1.4.1.11.2.17.1.0.58916867 "Error Alarms" Warning
FORMAT IF $7 down
EXEC /home/admin/PROGRAMMI/MARTI/IF-DOWN/ifdown "$7" "$2"
FORWARD RMVIH01T
SDESC
This event is generated by HP OpenView when
it detects the status of an interface has gone
down.  Normally this happens when an interface with
an IP address no longer responds to ICMP Echo (ping)
requests.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The NNM management station ID
    10) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT J20_IF_Down .1.3.6.1.4.1.11.2.17.1.0.58916867 "J20-GGSN" Critical
FORMAT IF $7 down
NODES MIOT-G01.ippubbl.wind MIOT-U01.ippubbl.wind RMCC-G01.ippubbl.wind RMID-U01.ippubbl.wind
SDESC
This event is generated by HP OpenView when
it detects the status of an interface has gone
down.  Normally this happens when an interface with
an IP address no longer responds to ICMP Echo (ping)
requests.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The NNM management station ID
    10) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Segment_Critical .1.3.6.1.4.1.11.2.17.1.0.58916868 "Status Alarms" Major
FORMAT Segment critical
SDESC
This event is generated by HP OpenView when
it detects the status of a segment has become
critical (all interfaces on the segment are abnormal).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the segment that caused the event
    3) The HP OpenView object identifier of the segment that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Station ID
    7) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Network_Critical .1.3.6.1.4.1.11.2.17.1.0.58916869 "Status Alarms" Major
FORMAT Network critical
SDESC
This event is generated by HP OpenView when it detects the
status of a network has become critical (all connectors and
segments in the network are in an abnormal state).

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the network that caused the event
    3) The HP OpenView object identifier of the network that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Station ID
    7) Event correlation event UUID which identifies
       the primary failure.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Set_Status_Color .1.3.6.1.4.1.11.2.17.1.0.58916871 "Status Alarms" Normal
FORMAT $3 $4
SDESC
This special event can be generated by a user to
change the status color of an object via SNMP.

On UNIX, see the trapd.conf(4) manpage for a discussion on
how to set up the parameters to send this event, and a
description of the parameters.  On Windows NT, see the
trapd.conf reference page in the help file.
EDESC
#
#
#
EVENT OV_Message .1.3.6.1.4.1.11.2.17.1.0.58916872 "Application Alert Alarms" Normal
FORMAT $3
SDESC
This special event can be generated by a user to
display an event message in the event browser.
It assumes the message is in the third variable.

To send a message with a popup notification, use the
OV_Popup_Message event.

On UNIX, see the trapd.conf(4) manpage for a discussion on
how to set up the parameters to send this event, and a
description of the parameters.  On Windows NT, see the
trapd.conf reference page in the help file.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event, if available
    3) The string to display

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Popup_Message .1.3.6.1.4.1.11.2.17.1.0.58916873 "Application Alert Alarms" Normal
FORMAT $3
DISPLAY $3
SDESC
This special event can be generated by a user to popup an
event notification message (assuming xnmevents is running).
It assumes the message is in the third variable.

To send a message without a popup notification, use the
OV_Message event.

On UNIX, see the trapd.conf(4) manpage for a discussion on
how to set up the parameters to send this event, and a
description of the parameters.  On Windows NT, see the
trapd.conf reference page in the help file.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event, if available
    3) The string to display in a popup notification window

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Bell_Message .1.3.6.1.4.1.11.2.17.1.0.58916874 "Application Alert Alarms" Normal
FORMAT $3
SDESC
This special event can be generated by a user to generate
bell notification and message (assuming xnmevents is
running).  It assumes the message is in the third variable.

To send a message without a bell notification, use the
OV_Message event.

On UNIX, see the trapd.conf(4) manpage for a discussion on
how to set up the parameters to send this event, and a
description of the parameters.  On Windows NT, see the
trapd.conf reference page in the help file.

The loudness of the bell can be defined by the
xnmevents.bellPercent, and can range from -100 to 100.  On a
UNIX platform, see the XNm resource file, on Windows NT see
the application defaults reference page.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event, if available
    3) The string to display in a notification window

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Highlight_Source .1.3.6.1.4.1.11.2.17.1.0.58916875 "Application Alert Alarms" Normal
FORMAT $3
SDESC
This special event can be generated by a user to highlight a
node and send a message to the event categories window
(assuming that xnmevents is running).  It assumes the
message is in the third variable.

On UNIX, see the trapd.conf(4) manpage for a discussion on
how to set up the parameters to send this event, and a
description of the parameters.  On Windows NT, see the
trapd.conf reference page in the help file.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event (event to highlight)
    3) The string to display in a notification window

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Ack_Alarm .1.3.6.1.4.1.11.2.17.1.0.58916876 "LOGONLY" Normal
FORMAT Acknowledge $1 by $2
SDESC
This event informs the Alarm Browser that a list of events
are acknowledged. It is used to synchronize operator
actions between Alarm Browsers.
This special event can be generated by a program through
the OVsnmpAPI to send an acknowledge event to the Alarm
Browser.

On UNIX, see the trapd.conf(4) manpage for a discussion on
how to set up the parameters to send this event, and a
description of the parameters.  On Windows, see the
trapd.conf reference page in the help file.

The data passed with the event is
    1) The UUIDs of the listed events
    2) Modifier information
    3) The UUID of the parent event when OV_Ack_Alarm is generated by ECS PairWise circuit

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Delete_Alarm .1.3.6.1.4.1.11.2.17.1.0.58916877 "LOGONLY" Normal
FORMAT Deleted $1 by $2
SDESC
This event informs the Alarm Browser that a list of events
are deleted. It is used to synchronize operator actions
between Alarm Browsers.
This special event can be generated by a program through
the OVsnmpAPI to send a delete event to the Alarm
Browser.

On UNIX, see the trapd.conf(4) manpage for a discussion on
how to set up the parameters to send this event, and a
description of the parameters.  On Windows, see the
trapd.conf reference page in the help file.

The data passed with the event is
    1) The UUIDs of listed events
    2) Modifier information
    3) The UUID of the parent event when OV_Delete_Alarm is generated by ECS PairWise circuit

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Corr_Events .1.3.6.1.4.1.11.2.17.1.0.58916878 "LOGONLY" Normal
FORMAT Correlate $2 to $1 by $3
SDESC
This special event can be generated by a program through
the OVsnmpAPI to send a correlation event to the Alarm
Browser.

On UNIX, see the trapd.conf(4) manpage for a discussion on
how to set up the parameters to send this event, and a
description of the parameters.  On Windows NT, see the
trapd.conf reference page in the help file.

The data passed with the event is
    1) The UUID of an existing event which should
       have UUID #2 correlated into it
    2) The UUID of an existing event which is
       correlated underneath UUID #1.  UUID #2
       is deleted from the Alarm Browser
    3) Modifier information

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Corr_Indic .1.3.6.1.4.1.11.2.17.1.0.58916879 "LOGONLY" Normal
FORMAT Indicate correlation for $1
SDESC
This special event is generated by the event system
when it determines that a correlation indicator
should be displayed in the Alarm Browser.   This marks
the entry in the alarm browser as having correlated events.

On UNIX, see the trapd.conf(4) manpage for a discussion on
how to set up the parameters to send this event, and a
description of the parameters.  On Windows, see the
trapd.conf reference page in the help file.

The data passed with the event is
    1) The UUID of an existing event which should
       have its correlation indictator turned on
    2) The UUID of the child event for this correlation

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Unack_Alarm .1.3.6.1.4.1.11.2.17.1.0.58916880 "LOGONLY" Normal
FORMAT Unacknowledged $1 by $2
SDESC
This event informs the Alarm Browser that a list of events
are unacknowledged. It is used to synchronize operator
actions between Alarm Browsers.
This special event can be generated by a program through
the OVsnmpAPI to send an unacknowledge event to the Alarm
Browser.

On UNIX, see the trapd.conf(4) manpage for a discussion on
how to set up the parameters to send this event, and a
description of the parameters.  On Windows NT, see the
trapd.conf reference page in the help file.

The data passed with the event is
    1) The UUIDs of the listed events
    2) Modifier information

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_ChgSev_Alarm .1.3.6.1.4.1.11.2.17.1.0.58916881 "LOGONLY" Normal
FORMAT Severity changed to $1 for $2 by $3
SDESC
This event informs the Alarm Browser that the severity is
changed for a list of events. It is used to synchronize
operator actions between Alarm Browsers.
This special event can be generated by a program through
the OVsnmpAPI to send an severity change event to the Alarm
Browser.

On UNIX, see the trapd.conf(4) manpage for a discussion on
how to set up the parameters to send this event, and a
description of the parameters.  On Windows NT, see the
trapd.conf reference page in the help file.

The data passed with the event is
    1) The new severity, valid values are 1-5
       with 1:Critical and 5:Normal severity
    2) The UUIDs of the listed events
    3) Modifier information

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_ChgCat_Alarm .1.3.6.1.4.1.11.2.17.1.0.58916882 "LOGONLY" Normal
FORMAT Category changed to $1 for $2 by $3
SDESC
This event informs the Alarm Browser that the category is
changed for a list of events. It is used to synchronize
operator actions between Alarm Browsers.
This special event can be generated by a program through
the OVsnmpAPI to send a category change event to the Alarm
Browser.

On UNIX, see the trapd.conf(4) manpage for a discussion on
how to set up the parameters to send this event, and a
description of the parameters.  On Windows NT, see the
trapd.conf reference page in the help file.

The data passed with the event is
    1) The new category.  This string must match
       an existing category or no change will be
       made to the browser
    2) The UUIDs of the listed events
    3) Modifier information

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Pattern_Delete .1.3.6.1.4.1.11.2.17.1.0.58916883 "LOGONLY" Normal
FORMAT Pattern Delete:  Event type $>3 source:$3  (correlate to $1) by $2
SDESC
This event informs ovalarmsrv that events with a specific
alarm signature (event type and source) are to be deleted
from the Alarm Browsers.  These deleted events are also
correlated under a parent event.

On UNIX, see the trapd.conf(4) manpage for a discussion on
how to set up the parameters to send this event, and a
description of the parameters.  On Windows, see the
trapd.conf reference page in the help file.

The data passed with the event is
    1) The UUID of the event that events matching the Pattern
       Delete signature should be correlated to.
    2) Modifier information
    3) Event source
    4) Event type
    5) Var bind key (Child Source Key)  - vb position (ASN_INTEGER), vb name or "agent-addr"
    6) Var bind value to match          - any type
    7) Var bind key (String Source Key 1)
    8) Var bind value (key 1)
    9) Var bind key (String Source Key 2)
    10) Var bind value (key 2) 
Additional var binds are added to the Pattern Delete event for additional
event type matches.  The pattern in var binds 4) through 10) is repeated
for additional event types.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_New_Statefile .1.3.6.1.4.1.11.2.17.1.0.58916890 "LOGONLY" Normal
FORMAT New statefile created
SDESC
This event informs the Alarm Browser that a new state file
is created with possible recovery of deleted alarms.
This special event can only be generated by the OV process
ovalarmsrv.

On UNIX, see the trapd.conf(4) manpage for a discussion on
how to set up the parameters to send this event, and a
description of the parameters.  On Windows NT, see the
trapd.conf reference page in the help file.

The data passed with the event is
    1) The type of recovery:
	  1: Only recove deleted alarms.
	  2: Ignore all operator actions.
	  3: Do not recover.
    2) The start time of recovery.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DHCP_Alloc .1.3.6.1.4.1.11.2.17.1.0.58920000 "LOGONLY" Normal
FORMAT $3 allocated as DHCP address for physical address $5.
SDESC
This event is defined to be used by DHCP servers to update
the OpenView NNM process netmon with new IP addresses that
are allocated via DHCP.

On UNIX, see the trapd.conf(4) manpage for a discussion on
how to set up the parameters to send this event, and a
description of the parameters.  On Windows NT, see the
trapd.conf reference page in the help file.

The data passed with the event is

    1) The ID of the application sending the event
       (for non-OpenView applications, this is recommended
       to be 14, indicating an external application).
    2) A string identifying the name of the application
       and host generating the event
       (e.g.: bootpd@dhcpserv).
    3) IP address string being allocated
       (e.g.: "15.2.10.20").
    4) Subnet mask string for the IP address being allocated
       (e.g.: "255.255.248.0").
    5) Physical address string associated with the IP
       address being allocated in the form "0x080009123456".


On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DHCP_Release .1.3.6.1.4.1.11.2.17.1.0.58920001 "LOGONLY" Normal
FORMAT $3 released as DHCP address for physical address $5.
SDESC
This event is defined to be used by DHCP servers to update
the OpenView NNM process netmon with new IP addresses that
are allocated via DHCP.

On UNIX, see the trapd.conf(4) manpage for a discussion on
how to set up the parameters to send this event, and a
description of the parameters.  On Windows NT, see the
trapd.conf reference page in the help file.

The data passed with the event is

    1) The ID of the application sending the event
       (for non-OpenView applications, this is recommended
       to be 14, indicating an external application).
    2) A string identifying the name of the application
       and host generating the event
       (e.g.: bootpd@dhcpserv).
    3) IP address string being released
       (e.g.: "15.2.10.20").
    4) Subnet mask string for the IP address being released
       (e.g.: "255.255.248.0").
    5) Physical address string associated with the IP
       address being released in the form "0x080009123456".


On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Bad_ARP_Cache .1.3.6.1.4.1.11.2.17.1.0.58982397 "Configuration Alarms" Major
FORMAT Bad ARP cache entry for $5
SDESC
This event is generated by HP OpenView when it detects an
invalid physical address in an ARP cache.  This can be a
problem because resolving the corresponding IP address will
yield an invalid physical address, causing connectivity
problems.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) The bad ARP cache entry

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_BadPhys_From_Node .1.3.6.1.4.1.11.2.17.1.0.58982398 "Configuration Alarms" Major
FORMAT Bad physical address $5 returned from node
SDESC
This event is generated by HP OpenView when it detects an
invalid physical address returned from a node via SNMP.
This can be a problem because access to the corresponding IP
address will yield an invalid address, causing connectivity
problems.  The physical address is returned in the MIB
variable:
.iso.org.dod.internet.mgmt.mib-2.interfaces.ifTable.
        ifEntry.ifPhysAddress.<Interface>

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView Object ID of the node that caused
       the event
    4) The database name, if applicable
    5) The bad physical address

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_ARPPhysChgSameSrc .1.3.6.1.4.1.11.2.17.1.0.58982399 "Configuration Alarms" Warning
FORMAT $6 reports a new physical address for $2, changing from $9 to $10
SDESC
This event is generated by HP OpenView when it receives new
information concerning the physical address on a node.
Since the node in question does not support SNMP, HP
OpenView determines the physical address by looking in ARP
caches instead of directly querying the node in question.
This event is sent when a new physical address is detected
in the same ARP cache as previously detected.  The latest
address seen is assumed to be the correct physical address.

If the physical address keeps toggling back and forth
between two addresses, it may indicate a duplicate IP
address problem.  This would happen if some nodes think the
physical address for the questionable IP address is is
physAddr1, and some nodes think it is physAddr2.  When
netmon polls the ARP caches on nodes, it finds the mappings
between IP address and physical address.  If the ARP
resolution is continuously returning two different physical
addresses, that could indicate that two nodes think their IP
address is the same.  The two nodes would return different
physical addresses for the ARP, resulting in alternating
mappings from IP to physical address.

The data passed with the event is
    1) The ID of application sending the event
    2) The node who's physical address has been changed
    3) The HP OpenView object identifier of the node with
       the changed physical address
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The name of the node that reported the new physical
       address
    7) The OVW object identifier of the second node
    8) The OVW object identifier of the effected interface
    9) The old physical address
   10) The new physical address

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Phys_Addr_Chg .1.3.6.1.4.1.11.2.17.1.0.58982400 "LOGONLY" Normal
FORMAT Physical address for $7 changed to $9 (was $10)
SDESC
This event is generated by HP OpenView when it detects the
physical address (sometimes called MAC address or link level
address) for an interface on a node has changed.

If many of these events occur for a node, and if it toggles
between two physical addresses, it is a very high
probability that what you are seeing is a duplicate IP
address, with the physical address alternating between the
nodes.  This happens because the ARP caches on various nodes
give conflicting information, due to the duplicate IP
addresses.

If only a few of these events occur, or it does not toggle
back and forth, it may be because the network card has been
replaced, or that the machine has been upgraded, keeping the
previous IP address.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The new physical address for the interface
   10) The previous physical address for the interface

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_PhysAddr_Mismatch .1.3.6.1.4.1.11.2.17.1.0.58982401 "Configuration Alarms" Major
FORMAT $9 reports address $11 for $8, $2 reported $12 via SNMP
SDESC
This event is generated by HP OpenView when it detects a
suspect physical address (sometimes called MAC address
or link level address) on a node.  This happens when the
physical address from node2's ARP cache is different than
what node1 returned via SNMP.  The physical address from
node2 is discarded.

This could be caused by a stale ARP cache entry, if
node1's physical address recently changed.  However, if the
physical address on node1 has not changed due to a change in
node1's physical address (such as interface card replaced or
machine upgraded), this could represent a duplicate IP
address, so this event should be closely watched.

The ARP cache on node2 could be different because nodeX is
also using node1's IP address, and node2 has most recently
talked to nodeX.

To get more information, two nodes need to be queried.  The
first node is the node that reported a different physical
address.  This information was retrieved from the first
node's ARP cache.

The other part of the information needed is to get the
physical address for the node in question.  This information
was retrieved from the second node's IfPhysAddress.

The first part of the information needed (ARP Cache) can be
retrieved by selecting the first node then using the menu
item:
    Configuration:Network Configuration->ARP Cache
or the TTY command:
    snmpwalk <FIRST-NODE> .1.3.6.1.2.1.3.1.1.2
It can also be determined by selecting
    mgmt.mib-2.at.atTable.atEntry.atPhysAddress
from the MIB browser and SNMP walking the first node.  These
will all return the ARP Cache.  You must find the entry
that corresponds to the second node.

The second part of the information needed (physical address)
can be retrieved using the menu item:
    Configuration:Network Configuration->Addresses
or the TTY command:
    snmpwalk <SECOND-NODE> .1.3.6.1.2.1.2.2.1.6
It can also be determined by selecting
    mgmt.mib-2.interfaces.ifTable.ifEntry.ifPhysAddress
from the MIB browser and SNMP walking the second node.

If there truly is a mismatch, it can be caused by one node
using the same IP address as another.  The message may also
indicate that an IP address is using two different physical
addresses.  This happens when the IP address of a node
changes because that node has changed subnets.  Yet another
problem comes from older HP X-Terminal firmware that
incorrectly reported an ifPhysAddress of 00 00 00 00 00 00.

Typically, several nodes will report this mismatch during a
demand poll operation, or as they do their daily
configuration checks.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node
    3) The HP OpenView object identifier of the node
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the
       interface effected by this event
    7) A name or label for the interface
       effected by this event
    8) The IP address of the interface effected
       by this event
    9) The name of the node with the incorrect entry
   10) The HP OpenView object identifier of the node with
        the incorrect entry
   11) The incorrect physical address reported by the
       node in $9
   12) The correct physical address reported by the
       node via SNMP

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_ARPChgNewPhysAddr .1.3.6.1.4.1.11.2.17.1.0.58982402 "Configuration Alarms" Major
FORMAT $6 reports a different physical address for $2 than reported by $8, changing from $12 to $13
SDESC
This event is generated by HP OpenView when it receives
conflicting information concerning the physical address
(sometimes called MAC address or link level address) on a
node.  Since the node in question does not support SNMP, HP
OpenView determines the physical address by looking in ARP
caches.  This event is sent when two different ARP caches
report two different physical addresses.  The latest address
seen is assumed to be the correct physical address.

If the physical address keeps toggling back and forth
between two addresses, it may indicate a duplicate IP
address problem.  This would happen if some nodes think the
physical address for the questionable IP address is is
physAddr1, and some nodes think it is physAddr2.  When
netmon polls the ARP caches on nodes, it finds the mappings
between IP address and physical address.  If the ARP
resolution is continuously returning two different physical
addresses, that could indicate that two nodes think their IP
address is the same.  The two nodes would return different
physical addresses for the ARP, resulting in alternating
mappings from IP to physical address.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node
    3) The HP OpenView object identifier of the node
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The name of the node that reports a different
        physical address for the node
    7) The HP OpenView object identifier of the node that
        reports a different physical address for the node
    8) The name of the node that previously reported
        a different physical address
    9) The HP OpenView object identifier of the node that
        previously reported a different physical address
   10) The HP OpenView object identifier of the interface on
        the target node that has the incorrect entry
   11) The IP address of the interface effected
        by this event
   12) The old physical address reported by the node in $8
   13) The new physical address reported by the node in $6

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Object_ID_Chg .1.3.6.1.4.1.11.2.17.1.0.58982403 "LOGONLY" Normal
FORMAT OID $6
SDESC
This event is generated by HP OpenView when it notices that
the object identifier (OID) for a node has changed.  This
event occurs the first time an agent on a node comes up,
since the OID goes from unknown to known.  The SNMP variable
queried for this information is
.iso.org.dod.internet.mgmt.mib-2.system.sysObjectID.0

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView Object ID of the node that caused the
       event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new SNMP object identifier

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Sys_Descr_Chg .1.3.6.1.4.1.11.2.17.1.0.58982404 "LOGONLY" Normal
FORMAT System description changed to "$6"
SDESC
This event is generated by HP OpenView when it notices that
the system description for a node has changed.  This event
occurs the first time an agent on a node comes up, since the
system description goes from unknown to known.  It also
occurs when an SNMP agent changes.  The SNMP variable
queried for this information is
.iso.org.dod.internet.mgmt.mib-2.system.sysDescr.0

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView Object ID of the node that caused the
       event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new system description

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Sys_Name_Chg .1.3.6.1.4.1.11.2.17.1.0.58982405 "Configuration Alarms" Normal
FORMAT System name changed (was $6)
SDESC
This event is generated by HP OpenView when it notices that
the system name for a node has changed.  This event may
occur the first time an agent on a node comes up, since the
system name may be different than what is currently known.
The SNMP variable queried for this information is
.iso.org.dod.internet.mgmt.mib-2.system.sysName.0

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The previous name associated with the node

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Subnet_Mask_Chg .1.3.6.1.4.1.11.2.17.1.0.58982406 "LOGONLY" Normal
FORMAT IP Network Mask for $7 changed to $9 (was $10)
SDESC
This event is generated by HP OpenView when it notices that
the subnet mask for an interface on a node has changed.
This event may occur the first time an agent on a node
comes up, since the subnet mask may be different than
what is currently known.  The SNMP variable queried for
this information is
.iso.org.dod.internet.mgmt.mib-2.ip.ipRouteTable.
        ipRouteEntry.ipRouteMask.<IP ADDRESS>

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event
    9) The new subnet mask associated with the interface
   10) The previous subnet mask associated with the
       interface

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Forw_Status_Chg .1.3.6.1.4.1.11.2.17.1.0.58982407 "LOGONLY" Normal
FORMAT IP forwarding status changed -- now a $7
SDESC
This event is generated by HP OpenView when it notices that
the IP forwarding status for a node has changed.  If this
node has IP forwarding, it is acting as an IP router.  This
event may occur the first time an agent on a node comes up,
since the forwarding status may be different than what is
currently known.  The SNMP variable queried for this
information is
.iso.org.dod.internet.mgmt.mib-2.ip.ipForwarding.0

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new value as an integer
    7) The new value as a nicely formatted string

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Bad_Forw_To_Host .1.3.6.1.4.1.11.2.17.1.0.58982408 "Configuration Alarms" Minor
FORMAT Incorrect routing to node $6
SDESC
This event is generated by HP OpenView when it notices that
the host to which IP is forwarded to is not a router.  This
is determined by the querying the value
.iso.org.dod.internet.mgmt.mib-2.ip.ipForwarding.0 on the on
the host indicated by the value
.iso.org.dod.internet.mgmt.mib-2.ip.ipRouteTable.
    ipRouteEntry.ipRouteNextHop.<IP ADDRESS>

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The name of the node being forwarded to
    7) The HP OpenView object identifier of the node being
       forwarded to

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Sys_Contact_Chg .1.3.6.1.4.1.11.2.17.1.0.58982410 "LOGONLY" Normal
FORMAT System contact change to "$6"
SDESC
This event is generated by HP OpenView when it notices that
the system contact for a node has changed.  This event
occurs the first time an agent on a node comes up, since the
system contact goes from unknown to known.  It also occurs
after an SNMP set changes the value of sysContact.  The SNMP
variable queried for this information is
.iso.org.dod.internet.mgmt.mib-2.system.sysContact.0

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new system contact reported via SNMP.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Sys_Location_Chg .1.3.6.1.4.1.11.2.17.1.0.58982411 "LOGONLY" Normal
FORMAT System location changed to "$6"
SDESC
This event is generated by HP OpenView when it notices that
the system location for a node has changed.  This event
occurs the first time an agent on a node comes up, since the
system location goes from unknown to known.  It also occurs
after an SNMP set changes the value of sysLocation.  The
SNMP variable queried for this information is
.iso.org.dod.internet.mgmt.mib-2.system.sysLocation.0

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView Object ID of the node that caused the
       event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The new location reported via SNMP

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_IF_Type_Change .1.3.6.1.4.1.11.2.17.1.0.58982412 "LOGONLY" Normal
FORMAT Interface type for $7 changed to $10
SDESC
This event is generated by HP OpenView when it notices that
the interface type for a node has changed.  This event
occurs the first time an agent on a node comes up, since the
interface type goes from unknown to known.  The SNMP
variable queried for this information is
.iso.org.dod.internet.mgmt.mib-2.interfaces.ifTable.
    ifEntry.ifType.<IF NUM>

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The new interface type as an integer-formatted
       string
   10) The new interface type as a string

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_IF_Descr_Chg .1.3.6.1.4.1.11.2.17.1.0.58982413 "LOGONLY" Normal
FORMAT Interface description for $7 changed to "$9"
SDESC
This event is generated by HP OpenView when it notices that
the interface description for a node has changed.  This
event occurs the first time an agent on a node comes up,
since the interface description goes from unknown to known.
The SNMP variable queried for this information is
.iso.org.dod.internet.mgmt.mib-2.interfaces.ifTable.
    ifEntry.ifDescr.<IF NUM>

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The new interface description

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Bad_Subnet_Mask .1.3.6.1.4.1.11.2.17.1.0.58982414 "Configuration Alarms" Minor
FORMAT Inconsistent subnet mask $9 on interface $7, should be $10
SDESC
This event is generated by HP OpenView when it notices that
the subnet mask on the node is incorrect.  It determines
the correct subnet mask based on the subnet mask for
the connecting devices in the network.

This information can be verified by selecting the node
and using the menu item:
    Configuration:Network Configuration->Addresses
or the TTY commands:
    snmpwalk <NODE> .1.3.6.1.2.1.4.20.1.3
or
    rnetstat -I <NODE>
It can also be determined by selecting
    mgmt.mib-2.ip.ipAddrTable.ipAddrEntry.ipAdEntNetMask
from the MIB browser and SNMP walking the node.  If the node
does not support SNMP, the subnet mask is determined via an
ICMP mask request.

Once the incorrect subnet mask is determined, it should be
corrected to prevent possible subnetting problems.  If your
subnet mask is too restrictive (i.e., is 255.255.255.128
when should be 255.255.255.0), you will degrade network
performance because you will need to bounce off of your
router to get to nodes in your subnet, creating unnecessary
traffic, and unnecessary delay.  If your subnet mask is to
permissive (i.e., is 255.255.0.0 when should be
255.255.255.0), you may not be able to get to certain nodes,
since your node will think they are in your subnet, when in
fact you need to go to your router in order to route to
those nodes.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The OVW object identifier of the node that caused the
       event
    4) The Database name, if applicable
    5) A time stamp for when the event occurred
    6) The OVW object identifier of the interface that
        caused the event
    7) A name or label for the interface
    8) The IP address of the interface
    9) The incorrect subnet mask
    10) The correct subnet mask

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Duplicate_IP_addr .1.3.6.1.4.1.11.2.17.1.0.58982415 "Configuration Alarms" Major
FORMAT Duplicate IP address: node $2 reported having $6, but this address was previously detected on node $7
SDESC
This event is generated by HP OpenView when it notices that
the two different nodes have the same IP address entry.

For instance, IP address 1.2.3.4 was originally found to
belong to node1 and this data is stored in the HP OpenView
database.  Later, HP OpenView is doing a normal
configuration poll of node2 and finds 1.2.3.4 listed in
node2's ipAddrTable.  If HP OpenView determines that
node1 and node2 are indeed distinct nodes, address
1.2.3.4 will not be added to node2, and this event
will be generated.

It is possible that this event may be generated
falsely if address 1.2.3.4 has been very recently
removed from node1 and added to node2.  If HP
OpenView does a configuration poll of node2 before
doing so for node1, this event will be generated.

In order to verify if this event was sent
legitimately, an operator can select both of the nodes
listed in the event and select the following menu item:

   Configuration:Network Configuration->Addresses

Or, from a shell prompt, you can use the following
command twice, once for each node:

   rnetstat -I hostname

This will result in two lists of the reported IP
addresses, one for each of the nodes.  Search
both lists for the address contained within the event.

If one of the nodes does not report this address,
then the condition that caused the event can be
cleared up by selecting only the node that no
longer has the address configured, and select the
following menu item:

   Fault:Network Connectivity->Poll Node

Or, from a shell prompt, you can use the following
command:

   nmdemandpoll hostname

If both nodes show this address, you have a true
duplicate IP address problem.  One of the two
nodes must be re-configured to remove the IP
address listed in the event.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node having
       the duplicate address
    3) The HP OpenView object identifier of the node
       having the duplicate address
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The duplicated IP address
    7) The name of the node where this address is
       currently configured
    8) The HP OpenView object identifier of the node with
       the address currently configured
    9) The HP OpenView object identifier of the
       interface having this address
   10) A name or label for the interface
       having this address

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Node_SupportsDMI .1.3.6.1.4.1.11.2.17.1.0.58982416 "LOGONLY" Normal
FORMAT Node supports DMI
SDESC
This event is generated by HP OpenView when
the DMI discovery process (ovcapsd) successfully
communicates using standard DMI to a previously
non-DMI node.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView object identifier of the node
    4) The database name, if applicable
    5) A time stamp for when the event occurred

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_IF_Index_Remapped .1.3.6.1.4.1.11.2.17.1.0.58982417 "Configuration Alarms" Major
FORMAT Possible device reconfiguration.  Interface to IfIndex have been remapped.  You may need to reconfigure any data collection on $2.  The new interface mappings are:\n$5
EXEC OVHIDESHELL ovIfIndexRemap.ovpl
DISPLAY Possible device reconfiguration.  Interface to IfIndex have been remapped.  You may need to reconfigure any data collection on $2.  The new interface mappings are:\n$5
SDESC
This event is generated by HP OpenView when
it determines that the agent's mapping from ifIndex
to ifDescr MIB variables has changed.  This can occur
on devices (such as Cisco routers) which have been
reconfigured.  Since the mapping from the interface
(ifDescr from MIB-II and ifAlias from the IF-MIB) to
the ifIndex has changed, the SNMP instance has also
changed.  If you have set up data collection for just
this instance, you will need to modify your data
collection to mimick the changes due to this device
reconfiguration.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the node that caused the event
    3) The HP OpenView object identifier of the node
    4) The database name, if applicable
    5) A description of the new mapping of the form:
       '<ifAlias-1>'[, '<ifAlias-n>']

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_IF_Alias_Chg .1.3.6.1.4.1.11.2.17.1.0.58982418 "LOGONLY" Normal
FORMAT Interface alias for $7 changed to "$9"
SDESC
This event is generated by HP OpenView when it notices that
the interface alias for a node has changed. 
The SNMP variable queried for this information is
.iso.org.dod.internet.mgmt.mib-2.interfaces.ifTable.
    ifEntry.ifAlias.<IF NUM>

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
       that caused the event
    7) The name or label for the interface that caused the
       event
    8) The IP address for the interface that caused the
       event, or "0" if unavailable
    9) The new interface alias name.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_ConnectedIfChg .1.3.6.1.4.1.11.2.17.1.0.58982419 "IGNORE" Normal
FORMAT Connected Interface field change
SDESC
This event is emitted by ovtopmd when topology database
changes occur for the if_connectedIfaceId field.  The value
of this field is the topology UUID of the interface
connected to this interface.  The consumers of this event
are NNM daemons like ipmap.  Ipmap uses this information to
trigger an update of the port label for this interface.

The data (var-binds) passed with the event are:
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event.
    4) The database name, if applicable.
    5) A time stamp for when the event occurred.
    6) The HP OpenView object identifier of the interface
       that caused the event.
    7) The name or label for the interface that caused the
       event.
    8) The IP address for the interface that caused the
       event, or "0" if unavailable.
    9) The topology UUID of the interface that this
       interface is connected to.
   10) The NNM management station ID

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_ConnectedPortGrpChg .1.3.6.1.4.1.11.2.17.1.0.58982420 "IGNORE" Normal
FORMAT Connected Port Group field change
SDESC
This event is emitted by ovtopmd when topology database
changes occur for the if_connectedPortNumber field.  The
value of this field is the port number for this interface.
This value varies for ip interfaces, switches and hubs.  The
consumers of this event are NNM daemons like ipmap.  Ipmap
uses this information to trigger an update of the port label
for this interface.

The data (var-binds) passed with the event are:
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event.
    4) The database name, if applicable.
    5) A time stamp for when the event occurred.
    6) The HP OpenView object identifier of the interface
       that caused the event.
    7) The name or label for the interface that caused the
       event.
    8) The IP address for the interface that caused the
       event, or "0" if unavailable.
    9) The port number this interface.
   10) The NNM management station ID

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_ConnectedPortNumChg .1.3.6.1.4.1.11.2.17.1.0.58982421 "IGNORE" Normal
FORMAT Connected Port Number field change
SDESC
This event is emitted by ovtopmd when topology database
changes occur for the if_connectedPortGroup field.  The
value of this field is the group that this interface is a
member of.  This value varies for ip interfaces, switches
and hubs.  The consumers of this event are NNM daemons like
ipmap.  Ipmap uses this information to trigger an update of
the port label for this interface.

The data (var-binds) passed with the event are:
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event.
    4) The database name, if applicable.
    5) A time stamp for when the event occurred.
    6) The HP OpenView object identifier of the interface
       that caused the event.
    7) The name or label for the interface that caused the
       event.
    8) The IP address for the interface that caused the
       event, or "0" if unavailable.
    9) The port group this interface is a member of.
   10) The NNM management station ID


On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DuplicateIfAlias .1.3.6.1.4.1.11.2.17.1.0.58982422 "Configuration Alarms" Major
FORMAT Duplicate ifAlias value configured on different ifIndexes - ignoring ifAlias on the following ifIndexes:$5
SDESC
This event is emitted by netmon when it detects
that multiple ifAliases on the same device are configured
with the same value.  HP OpenView recommends that you
configure the interfaces with different ifAliases
so that you will be able to detect in reports which
interface is being described.

The data (var-binds) passed with the event are:
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event.
    4) The database name, if applicable.
    5) The ifIndexes which were duplicated


On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_IF_Intermittent .1.3.6.1.4.1.11.2.17.1.0.58982423 "Status Alarms" Warning
FORMAT IF $7 Intermittent Status
SDESC
This event is generated by HP OpenView when
it detects the status of an interface has gone
down and up multiple times.

The data passed with the event is
    1) The ID of application sending the event.
    2) The hostname of the node that caused the event.
    3) The HP OpenView object identifier of the node that
       caused the event.
    4) The database name, if applicable.
    5) A time stamp for when the event occurred.
    6) The HP OpenView object identifier of the interface
       that caused the event.
    7) The name or label for the interface that caused the
       event.
    8) The IP address for the interface that caused the
       event, or "0" if unavailable.
    9) Number of cycles of status changes on the interface
       in the period described in var-bind 10.  For example,
       down, up, down, up would be 2 cycles.
   10) Period of intermittent behavior in seconds.
   11) The NNM management station ID.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Chassis_Temperature .1.3.6.1.4.1.11.2.17.1.0.58982424 "Status Alarms" Warning
FORMAT Chassis temperature fault
SDESC
This event is generated by HP OpenView when
it detects a fault in the chassis of a network
device.

The data passed with the event is
    1) The ID of application sending the event.
    2) The name of the node that caused the event.
    3) The HP OpenView object identifier of the node that
       caused the event.
    4) The database name, if applicable.
    5) A time stamp for when the event occurred.
    6) The IP address for the chassis or "0" if unavailable.
    7) The chassis entity ID or empty string if unavailable.
    8) Numeric measurement of the chassis parameter. 
    9) Locale neutral units of measure for the chassis parameter.
       Use "F" for degrees Fahrenheit, "C" Celsius, "V" volts, 
       for example.
   10) Station ID.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Chassis_FanFailure .1.3.6.1.4.1.11.2.17.1.0.58982425 "Status Alarms" Warning
FORMAT Chassis fan fault (component $7)
SDESC
This event is generated by HP OpenView when
it detects a fault in the chassis of a network
device.

The data passed with the event is
    1) The ID of application sending the event.
    2) The name of the node that caused the event.
    3) The HP OpenView object identifier of the node that
       caused the event.
    4) The database name, if applicable.
    5) A time stamp for when the event occurred.
    6) The IP address for the chassis or "0" if unavailable.
    7) The chassis entity ID or empty string if unavailable.
    8) Numeric measurement of the chassis parameter. 
    9) Locale neutral units of measure for the chassis parameter.
       Use "F" for degrees Fahrenheit, "C" Celsius, "V" volts, 
       for example.
   10) Station ID.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Chassis_PowerSupply .1.3.6.1.4.1.11.2.17.1.0.58982426 "Status Alarms" Warning
FORMAT Chassis power fault (component $7)
SDESC
This event is generated by HP OpenView when
it detects a fault in the chassis of a network
device.

The data passed with the event is
    1) The ID of application sending the event.
    2) The name of the node that caused the event.
    3) The HP OpenView object identifier of the node that
       caused the event.
    4) The database name, if applicable.
    5) A time stamp for when the event occurred.
    6) The IP address for the chassis or "0" if unavailable.
    7) The chassis entity ID or empty string if unavailable.
    8) Numeric measurement of the chassis parameter. 
    9) Locale neutral units of measure for the chassis parameter.
       Use "F" for degrees Fahrenheit, "C" Celsius, "V" volts, 
       for example.
   10) Station ID.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Multiple_Reboots .1.3.6.1.4.1.11.2.17.1.0.58982427 "Status Alarms" Warning
FORMAT Multiple reboots detected ($6 times in $5)
SDESC
This event is generated when multiple reboots of a network device
were detected (coldStart and warmStart traps) in a short period
of time.  This may indicate issues with the network device.

The data passed with the event is
    1) The ID of application sending the event.
    2) The hostname of the node that caused the event.
    3) The HP OpenView object identifier of the node that
       caused the event.
    4) The database name, if applicable.
    5) The interval in which the reboots occurred.
    6) The number of reboots.
EDESC
#
#
#
EVENT OV_FrameRelayReset .1.3.6.1.4.1.11.2.17.1.0.58982428 "Error Alarms" Warning
FORMAT Frame Relay: PVC bouncing ifIndex=$5 ($6) $7
SDESC
This event is generated if one or multiple virtual connections are
reset. A reset is a transition from inactive to active within the specified
time period. 
The interface index on which the virtual connections are layered
is reported along with the affected DLCIs and the number
of times a reset occurred within the time period. 
E.g. [(401, 2), (402, 1)] indicates 2 resets for DLCI 401 and 1 reset
for DLCI 402.

The data passed with the event is
    1) The ID of the application sending the event.
    2) The hostname of the node that caused the event.
    3) The HP OpenView object identifier of the node that
       caused the event.
    4) The database name, if applicable.
    5) The interface index (ifIndex).
    6) A list with affected DLCIs and the number of resets
       for each DLCI.
    7) An indicator for LMI failures.
EDESC
#
#
#
EVENT OV_FrameRelayCarrierProblem .1.3.6.1.4.1.11.2.17.1.0.58982429 "Error Alarms" Minor
FORMAT Frame Relay: Carrier problem ifIndex=$5 ($6) $7
SDESC
This event is generated if one or multiple virtual connections
experience problems with the carrier network.
 
The interface index on which the virtual connections are layered
is reported along with the affected DLCIs and the number
of times a reset occurred within the time period.
E.g. [(401, 2), (402, 1)] indicates 2 resets for DLCI 401 and 1 reset
for DLCI 402.

The data passed with the event is
    1) The ID of the application sending the event.
    2) The hostname of the node that caused the event.
    3) The HP OpenView object identifier of the node that
       caused the event.
    4) The database name, if applicable.
    5) The interface index (ifIndex).
    6) A list with affected DLCIs and the number of resets
       for each DLCI.
    7) An indicator for LMI failures.
EDESC
#
#
#
EVENT OV_FrameRelayLocalCircuitProblem .1.3.6.1.4.1.11.2.17.1.0.58982430 "Error Alarms" Minor
FORMAT Frame Relay: Local circuit problem ifIndex=$5 ($6)
SDESC
This event is generated if one or multiple virtual connections
experience problems with the local circuit.

The interface index on which the virtual connections are layered
is reported along with the affected DLCIs and the number
of times a reset occurred within the time period.
E.g. [(401, 2), (402, 1)] indicates 2 resets for DLCI 401 and 1 reset
for DLCI 402.

The data passed with the event is
    1) The ID of the application sending the event.
    2) The hostname of the node that caused the event.
    3) The HP OpenView object identifier of the node that
       caused the event.
    4) The database name, if applicable.
    5) The interface index (ifIndex).
    6) A list with affected DLCIs and the number of resets
       for each DLCI.
EDESC
#
#
#
EVENT OV_FrameRelayCircuitProblem .1.3.6.1.4.1.11.2.17.1.0.58982431 "Error Alarms" Minor
FORMAT Frame Relay: Circuit problem ifIndex=$5 ($6)
SDESC
This event is generated if one or multiple virtual connections
experience problems with the circuit.

The interface index on which the virtual connections are layered
is reported along with the affected DLCIs and the number
of times a reset occurred within the time period.
E.g. [(401, 2), (402, 1)] indicates 2 resets for DLCI 401 and 1 reset
for DLCI 402.

The data passed with the event is
    1) The ID of the application sending the event.
    2) The hostname of the node that caused the event.
    3) The HP OpenView object identifier of the node that
       caused the event.
    4) The database name, if applicable.
    5) The interface index (ifIndex).
    6) A list with affected DLCIs and the number of resets
       for each DLCI.
EDESC
#
#
#
EVENT OV_Correlation_Error .1.3.6.1.4.1.11.2.17.1.0.58982450 "Status Alarms" Major
FORMAT Correlation Error : $1
SDESC
This event is generated by the HP Correlation Composer when
it detects an error in processing a correlation rule.

The data passed with the event is:
    1) A string which indicates the name of the rule that caused the
       event and the specific error encountered.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_APA_Message .1.3.6.1.4.1.11.2.17.1.0.58983000 "IGNORE" Normal
FORMAT $N $5 $3
SDESC
This event is generated by the ovet_poll Polling Engine and
Status Analyzer to reflect changes in the network that are best
communicated via text.  This event is similar to the OV_Message
event.  The text is in the third variable (var-bind).  Var-bind
4 is provided to allow each event to be slightly different and
allow identical events to be sent in quick succession. PMD
does not support identical events occurring in the same one second
time slot.

On UNIX, see the trapd.conf(4) manpage for a discussion on
how to set up the parameters to send this event, and a
description of the parameters.  On Windows, see the
trapd.conf reference page in the help file.

The data passed with the event is
    1) The ID of ovet_poll application sending the event
    2) The source of the event, if available
    3) The string to display
    4) Timestamp
    5) Counter of the number of these events emitted by the sender

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_APA_ADDR_UP .1.3.6.1.4.1.11.2.17.1.0.58983001 "IGNORE" Normal
FORMAT Address Up $10 Capabilities: $15
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.
The structure of the alarm supports node, interface and address
granularity for single and double entity secondary failure situations.
In addition, primary failures are indicated with entity 3.

This specific alarm indicates that the address is responding to polls.
Entity 3 could indicate an entity (e.g. interface) on another device
that originally caused this address to not respond to polls.  Entity
2 will not be populated.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    Var-binds associated with single object failures.  Like
    ifDown.

    3) Entity 1: Nodename of the responsible node
    4) Entity 1: NNM extended topology objectID of the responsible node

    5) Entity 1: Label of the responsible interface
    6) Entity 1: IfAlias of the responsible interface
    7) Entity 1: NNM extended topology objectID of the responsible interface
    8) Entity 1: IfIndex of the responsible interface
    9) Entity 1: IfDescr of the responsible interface

   10) Entity 1: Responsible Level 3 address or port number
   11) Entity 1: Responsible Level 2 address
   12) Entity 1: Number of bits in the subnet mask of the entity
   13) Entity 1: Route distinguisher of the entity
   14) Entity 1: NNM extended topology objectID of the responsible Level 3 address

   15) Entity 1: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with double object failures.  Like
    connectionDown (i.e.  Iface1-Iface2).

   16) Entity 2: Nodename of the responsible node
   17) Entity 2: NNM extended topology objectID of the responsible node

   18) Entity 2: Label of the responsible interface
   19) Entity 2: IfAlias of the responsible interface
   20) Entity 2: NNM extended topology objectID of the responsible interface
   21) Entity 2: IfIndex of the responsible interface
   22) Entity 2: IfDescr of the responsible interface

   23) Entity 2: Responsible Level 3 address or port number
   24) Entity 2: Responsible Level 2 address
   25) Entity 2: Number of bits in the subnet mask of the entity
   26) Entity 2: Route distinguisher of the entity
   27) Entity 2: NNM extended topology objectID of the responsible Level 3 address

   28) Entity 2: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with the primary failure entity if this
    failure is a secondary failure.

   29) Entity 3: Nodename of the responsible node
   30) Entity 3: NNM extended topology objectID of the responsible node

   31) Entity 3: Label of the responsible interface
   32) Entity 3: IfAlias of the responsible interface
   33) Entity 3: NNM extended topology objectID of the responsible interface
   34) Entity 3: IfIndex of the responsible interface
   35) Entity 3: IfDescr of the responsible interface

   36) Entity 3: Responsible Level 3 address or port number
   37) Entity 3: Responsible Level 2 address
   38) Entity 3: Number of bits in the subnet mask of the entity
   39) Entity 3: Route distinguisher of the entity
   40) Entity 3: NNM extended topology objectID of the responsible Level 3 address

   41) Entity 3: Locale neutral comma separated list of capabilities
   42) Entity 3: Event correlation event UUID which identifies the
                 primary failure event.
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_IF_UP .1.3.6.1.4.1.11.2.17.1.0.58983002 "IGNORE" Normal
FORMAT IF Up $5 $10 $6 Capabilities: $15
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.
The structure of the alarm supports node, interface and address
granularity for single and double entity secondary failure situations.
In addition, primary failures are indicated with entity 3.

This specific alarm indicates that the interface is responding to polls.
Entity 3 could indicate an entity (e.g. interface) on another device
that originally caused this interface to not respond to polls.  Entity
Entity 2 will not be populated.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    Var-binds associated with single object failures.  Like
    ifDown.

    3) Entity 1: Nodename of the responsible node
    4) Entity 1: NNM extended topology objectID of the responsible node

    5) Entity 1: Label of the responsible interface
    6) Entity 1: IfAlias of the responsible interface
    7) Entity 1: NNM extended topology objectID of the responsible interface
    8) Entity 1: IfIndex of the responsible interface
    9) Entity 1: IfDescr of the responsible interface

   10) Entity 1: Responsible Level 3 address or port number
   11) Entity 1: Responsible Level 2 address
   12) Entity 1: Number of bits in the subnet mask of the entity
   13) Entity 1: Route distinguisher of the entity
   14) Entity 1: NNM extended topology objectID of the responsible Level 3 address

   15) Entity 1: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with double object failures.  Like
    connectionDown (i.e.  Iface1-Iface2).

   16) Entity 2: Nodename of the responsible node
   17) Entity 2: NNM extended topology objectID of the responsible node

   18) Entity 2: Label of the responsible interface
   19) Entity 2: IfAlias of the responsible interface
   20) Entity 2: NNM extended topology objectID of the responsible interface
   21) Entity 2: IfIndex of the responsible interface
   22) Entity 2: IfDescr of the responsible interface

   23) Entity 2: Responsible Level 3 address or port number
   24) Entity 2: Responsible Level 2 address
   25) Entity 2: Number of bits in the subnet mask of the entity
   26) Entity 2: Route distinguisher of the entity
   27) Entity 2: NNM extended topology objectID of the responsible Level 3 address

   28) Entity 2: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with the primary failure entity if this
    failure is a secondary failure.

   29) Entity 3: Nodename of the responsible node
   30) Entity 3: NNM extended topology objectID of the responsible node

   31) Entity 3: Label of the responsible interface
   32) Entity 3: IfAlias of the responsible interface
   33) Entity 3: NNM extended topology objectID of the responsible interface
   34) Entity 3: IfIndex of the responsible interface
   35) Entity 3: IfDescr of the responsible interface

   36) Entity 3: Responsible Level 3 address or port number
   37) Entity 3: Responsible Level 2 address
   38) Entity 3: Number of bits in the subnet mask of the entity
   39) Entity 3: Route distinguisher of the entity
   40) Entity 3: NNM extended topology objectID of the responsible Level 3 address

   41) Entity 3: Locale neutral comma separated list of capabilities
   42) Entity 3: Event correlation event UUID which identifies the
                 primary failure event.
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_NODE_UP .1.3.6.1.4.1.11.2.17.1.0.58983003 "IGNORE" Normal
FORMAT Node Up $10 Capabilities: $15
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.
The structure of the alarm supports node, interface and address
granularity for single and double entity secondary failure situations.
In addition, primary failures are indicated with entity 3.

This specific alarm indicates that the node is responding to polls.
Entity 3 could indicate an entity (e.g. interface) on another device
that originally caused this node to not respond to polls.  Entity
Entity 2 will not be populated.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    Var-binds associated with single object failures.  Like
    ifDown.

    3) Entity 1: Nodename of the responsible node
    4) Entity 1: NNM extended topology objectID of the responsible node

    5) Entity 1: Label of the responsible interface
    6) Entity 1: IfAlias of the responsible interface
    7) Entity 1: NNM extended topology objectID of the responsible interface
    8) Entity 1: IfIndex of the responsible interface
    9) Entity 1: IfDescr of the responsible interface

   10) Entity 1: Responsible Level 3 address or port number
   11) Entity 1: Responsible Level 2 address
   12) Entity 1: Number of bits in the subnet mask of the entity
   13) Entity 1: Route distinguisher of the entity
   14) Entity 1: NNM extended topology objectID of the responsible Level 3 address

   15) Entity 1: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with double object failures.  Like
    connectionDown (i.e.  Iface1-Iface2).

   16) Entity 2: Nodename of the responsible node
   17) Entity 2: NNM extended topology objectID of the responsible node

   18) Entity 2: Label of the responsible interface
   19) Entity 2: IfAlias of the responsible interface
   20) Entity 2: NNM extended topology objectID of the responsible interface
   21) Entity 2: IfIndex of the responsible interface
   22) Entity 2: IfDescr of the responsible interface

   23) Entity 2: Responsible Level 3 address or port number
   24) Entity 2: Responsible Level 2 address
   25) Entity 2: Number of bits in the subnet mask of the entity
   26) Entity 2: Route distinguisher of the entity
   27) Entity 2: NNM extended topology objectID of the responsible Level 3 address

   28) Entity 2: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with the primary failure entity if this
    failure is a secondary failure.

   29) Entity 3: Nodename of the responsible node
   30) Entity 3: NNM extended topology objectID of the responsible node

   31) Entity 3: Label of the responsible interface
   32) Entity 3: IfAlias of the responsible interface
   33) Entity 3: NNM extended topology objectID of the responsible interface
   34) Entity 3: IfIndex of the responsible interface
   35) Entity 3: IfDescr of the responsible interface

   36) Entity 3: Responsible Level 3 address or port number
   37) Entity 3: Responsible Level 2 address
   38) Entity 3: Number of bits in the subnet mask of the entity
   39) Entity 3: Route distinguisher of the entity
   40) Entity 3: NNM extended topology objectID of the responsible Level 3 address

   41) Entity 3: Locale neutral comma separated list of capabilities
   42) Entity 3: Event correlation event UUID which identifies the
                 primary failure event.
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_CONNECTION_UP .1.3.6.1.4.1.11.2.17.1.0.58983004 "IGNORE" Normal
FORMAT Connection Up $5 $10 connected to $16 $18 $23 Capabilities IF1: $15 IF2: $28
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.
The structure of the alarm supports node, interface and address
granularity for single and double entity secondary failure situations.
In addition, primary failures are indicated with entity 3.

This specific alarm indicates that both sides of the connection between
entity 1 and entity 2 are responding to polls.  Entity 3 could indicate
an entity (e.g. interface) on another device that originally caused 
this connection to not respond to polls.  For consistency, the address
of Entity 1 is always lexicographically smaller than the address of
Entity 2.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    Var-binds associated with single object failures.  Like
    ifDown.

    3) Entity 1: Nodename of the responsible node
    4) Entity 1: NNM extended topology objectID of the responsible node

    5) Entity 1: Label of the responsible interface
    6) Entity 1: IfAlias of the responsible interface
    7) Entity 1: NNM extended topology objectID of the responsible interface
    8) Entity 1: IfIndex of the responsible interface
    9) Entity 1: IfDescr of the responsible interface

   10) Entity 1: Responsible Level 3 address or port number
   11) Entity 1: Responsible Level 2 address
   12) Entity 1: Number of bits in the subnet mask of the entity
   13) Entity 1: Route distinguisher of the entity
   14) Entity 1: NNM extended topology objectID of the responsible Level 3 address

   15) Entity 1: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with double object failures.  Like
    connectionDown (i.e.  Iface1-Iface2).

   14) Entity 2: Nodename of the responsible node
   15) Entity 2: NNM extended topology objectID of the responsible node

   16) Entity 2: Label of the responsible interface
   17) Entity 2: IfAlias of the responsible interface
   18) Entity 2: NNM extended topology objectID of the responsible interface
   34) Entity 2: IfIndex of the responsible interface
   35) Entity 2: IfDescr of the responsible interface

   19) Entity 2: Responsible Level 3 address or port number
   20) Entity 2: Responsible Level 2 address
   21) Entity 2: Number of bits in the subnet mask of the entity
   22) Entity 2: Route distinguisher of the entity
   23) Entity 2: NNM extended topology objectID of the responsible Level 3 address

   24) Entity 2: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with the primary failure entity if this
    failure is a secondary failure.

   25) Entity 3: Nodename of the responsible node
   26) Entity 3: NNM extended topology objectID of the responsible node

   27) Entity 3: Label of the responsible interface
   28) Entity 3: IfAlias of the responsible interface
   29) Entity 3: NNM extended topology objectID of the responsible interface
   34) Entity 3: IfIndex of the responsible interface
   35) Entity 3: IfDescr of the responsible interface

   30) Entity 3: Responsible Level 3 address or port number
   31) Entity 3: Responsible Level 2 address
   32) Entity 3: Number of bits in the subnet mask of the entity
   33) Entity 3: Route distinguisher of the entity
   34) Entity 3: NNM extended topology objectID of the responsible Level 3 address

   35) Entity 3: Locale neutral comma separated list of capabilities
   36) Entity 3: Event correlation event UUID which identifies the
                 primary failure event.
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_AGGPORT_UP .1.3.6.1.4.1.11.2.17.1.0.58983005 "IGNORE" Normal
FORMAT Aggregate Port Up $5 $6 connected to $21 $23 $24
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.

This specific alarm indicates that the aggregate port connection 
between two nodes is responding to polls and no interfaces are 
down. 

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    3) Entity 1: Hostname of the responsible node
    4) Entity 1: NNM ET objectID of the responsible node
  
    5) Entity 1: Label of the aggregated interface
    6) Entity 1: IfAlias of the aggregated interface
    7) Entity 1: NNM ET objectID of the aggregated interface
    8) Entity 1: IfIndex
    9) Entity 1: IfDescr
   10) Entity 1: Number of contained interfaces down.
   11) Entity 1: Number of contained interfaces.
  
   12) Entity 1: Management address of host.
   13) Entity 1: Number of bits in the subnet mask of the entity
   14) Entity 1: Route distinguisher of the entity
   15) Entity 1: NNM ET objectID of the management address
   16) Entity 1: Locale neutral comma separated list of capabilities
   17) Entity 1: Not used
   18) Entity 1: Not used
   19) Entity 1: Not used
   20) Entity 1: Not used
   -----------------------------------------------------------------
   21) Entity 2: Hostname of the responsible node
   22) Entity 2: NNM ET objectID of the responsible node
  
   23) Entity 2: Label of the aggregated interface
   24) Entity 2: IfAlias of the aggregated interface
   25) Entity 2: NNM ET objectID of the aggregated interface
   26) Entity 2: IfIndex
   27) Entity 2: IfDescr
   28) Entity 2: Number of contained interfaces down.
   29) Entity 2: Number of contained interfaces.
  
   30) Entity 2: Management address of host.
   31) Entity 2: Number of bits in the subnet mask of the entity
   32) Entity 2: Route distinguisher of the entity
   33) Entity 2: NNM ET objectID of the management address
   34) Entity 2: Locale neutral comma separated list of capabilities
   35) Entity 2: Not used
   36) Entity 2: Not used
   37) Entity 2: Not used
   38) Entity 2: Not used
   -----------------------------------------------------------------
   39) Optional event correlation UUID of primary failure event.
   40) Optional Important Node specification
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_AGGPORT_DOWN .1.3.6.1.4.1.11.2.17.1.0.58983006 "IGNORE" Critical
FORMAT Aggregate Port Down $5 $6 connected to $21 $23 $24
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.

This specific alarm indicates that the aggregate port connection 
between two nodes is not responding to polls and all interfaces may
be down. 

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    3) Entity 1: Hostname of the responsible node
    4) Entity 1: NNM ET objectID of the responsible node
  
    5) Entity 1: Label of the aggregated interface
    6) Entity 1: IfAlias of the aggregated interface
    7) Entity 1: NNM ET objectID of the aggregated interface
    8) Entity 1: IfIndex
    9) Entity 1: IfDescr
   10) Entity 1: Number of contained interfaces down.
   11) Entity 1: Number of contained interfaces.
  
   12) Entity 1: Management address of host.
   13) Entity 1: Number of bits in the subnet mask of the entity
   14) Entity 1: Route distinguisher of the entity
   15) Entity 1: NNM ET objectID of the management address
   16) Entity 1: Locale neutral comma separated list of capabilities
   17) Entity 1: Not used
   18) Entity 1: Not used
   19) Entity 1: Not used
   20) Entity 1: Not used
   -----------------------------------------------------------------
   21) Entity 2: Hostname of the responsible node
   22) Entity 2: NNM ET objectID of the responsible node
  
   23) Entity 2: Label of the aggregated interface
   24) Entity 2: IfAlias of the aggregated interface
   25) Entity 2: NNM ET objectID of the aggregated interface
   26) Entity 2: IfIndex
   27) Entity 2: IfDescr
   28) Entity 2: Number of contained interfaces down.
   29) Entity 2: Number of contained interfaces.
  
   30) Entity 2: Management address of host.
   31) Entity 2: Number of bits in the subnet mask of the entity
   32) Entity 2: Route distinguisher of the entity
   33) Entity 2: NNM ET objectID of the management address
   34) Entity 2: Locale neutral comma separated list of capabilities
   35) Entity 2: Not used
   36) Entity 2: Not used
   37) Entity 2: Not used
   38) Entity 2: Not used
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_AGGPORT_DEGRADED .1.3.6.1.4.1.11.2.17.1.0.58983007 "IGNORE" Critical
FORMAT Aggregate Port Degraded $5 $6 connected to $21 $23 $24  Down $10/$11 $28/$29
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.

This specific alarm indicates that the aggregate port connection 
between two nodes is responding to polls and some of the 
interfaces are down. 

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    3) Entity 1: Hostname of the responsible node
    4) Entity 1: NNM ET objectID of the responsible node
  
    5) Entity 1: Label of the aggregated interface
    6) Entity 1: IfAlias of the aggregated interface
    7) Entity 1: NNM ET objectID of the aggregated interface
    8) Entity 1: IfIndex
    9) Entity 1: IfDescr
   10) Entity 1: Number of contained interfaces down.
   11) Entity 1: Number of contained interfaces.
  
   12) Entity 1: Management address of host.
   13) Entity 1: Number of bits in the subnet mask of the entity
   14) Entity 1: Route distinguisher of the entity
   15) Entity 1: NNM ET objectID of the management address
   16) Entity 1: Locale neutral comma separated list of capabilities
   17) Entity 1: Not used
   18) Entity 1: Not used
   19) Entity 1: Not used
   20) Entity 1: Not used
   -----------------------------------------------------------------
   21) Entity 2: Hostname of the responsible node
   22) Entity 2: NNM ET objectID of the responsible node
  
   23) Entity 2: Label of the aggregated interface
   24) Entity 2: IfAlias of the aggregated interface
   25) Entity 2: NNM ET objectID of the aggregated interface
   26) Entity 2: IfIndex
   27) Entity 2: IfDescr
   28) Entity 2: Number of contained interfaces down.
   29) Entity 2: Number of contained interfaces.
  
   30) Entity 2: Management address of host.
   31) Entity 2: Number of bits in the subnet mask of the entity
   32) Entity 2: Route distinguisher of the entity
   33) Entity 2: NNM ET objectID of the management address
   34) Entity 2: Locale neutral comma separated list of capabilities
   35) Entity 2: Not used
   36) Entity 2: Not used
   37) Entity 2: Not used
   38) Entity 2: Not used
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_AGGPORT_UNREACHABLE .1.3.6.1.4.1.11.2.17.1.0.58983008 "IGNORE" Warning
FORMAT Aggregate Port Unreachable $5 $6 connected to $21 $23 $24
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.

This specific alarm indicates that the aggregate port connection 
between two nodes is not responding to polls.  The problem is 
probably due to another entity.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    3) Entity 1: Hostname of the responsible node
    4) Entity 1: NNM ET objectID of the responsible node
  
    5) Entity 1: Label of the aggregated interface
    6) Entity 1: IfAlias of the aggregated interface
    7) Entity 1: NNM ET objectID of the aggregated interface
    8) Entity 1: IfIndex
    9) Entity 1: IfDescr
   10) Entity 1: Number of contained interfaces down.
   11) Entity 1: Number of contained interfaces.
  
   12) Entity 1: Management address of host.
   13) Entity 1: Number of bits in the subnet mask of the entity
   14) Entity 1: Route distinguisher of the entity
   15) Entity 1: NNM ET objectID of the management address
   16) Entity 1: Locale neutral comma separated list of capabilities
   17) Entity 1: Not used
   18) Entity 1: Not used
   19) Entity 1: Not used
   20) Entity 1: Not used
   -----------------------------------------------------------------
   21) Entity 2: Hostname of the responsible node
   22) Entity 2: NNM ET objectID of the responsible node
  
   23) Entity 2: Label of the aggregated interface
   24) Entity 2: IfAlias of the aggregated interface
   25) Entity 2: NNM ET objectID of the aggregated interface
   26) Entity 2: IfIndex
   27) Entity 2: IfDescr
   28) Entity 2: Number of contained interfaces down.
   29) Entity 2: Number of contained interfaces.
  
   30) Entity 2: Management address of host.
   31) Entity 2: Number of bits in the subnet mask of the entity
   32) Entity 2: Route distinguisher of the entity
   33) Entity 2: NNM ET objectID of the management address
   34) Entity 2: Locale neutral comma separated list of capabilities
   35) Entity 2: Not used
   36) Entity 2: Not used
   37) Entity 2: Not used
   38) Entity 2: Not used
   -----------------------------------------------------------------
   39) Optional event correlation UUID of primary failure event.
   40) Optional Important Node specification
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_AGGPORTCONN_UP .1.3.6.1.4.1.11.2.17.1.0.58983009 "IGNORE" Normal
FORMAT Aggregate Port Connection Up $5 $6 connected to $21 $23 $24
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.

This specific alarm indicates that the aggregate port connection 
between two nodes is responding to polls and no interfaces are down
on either side of the connection. 

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    3) Entity 1: Hostname of the responsible node
    4) Entity 1: NNM ET objectID of the responsible node
  
    5) Entity 1: Label of the aggregated interface
    6) Entity 1: IfAlias of the aggregated interface
    7) Entity 1: NNM ET objectID of the aggregated interface
    8) Entity 1: IfIndex
    9) Entity 1: IfDescr
   10) Entity 1: Number of contained interfaces down.
   11) Entity 1: Number of contained interfaces.
  
   12) Entity 1: Management address of host.
   13) Entity 1: Number of bits in the subnet mask of the entity
   14) Entity 1: Route distinguisher of the entity
   15) Entity 1: NNM ET objectID of the management address
   16) Entity 1: Locale neutral comma separated list of capabilities
   17) Entity 1: Not used
   18) Entity 1: Not used
   19) Entity 1: Not used
   20) Entity 1: Not used
   -----------------------------------------------------------------
   21) Entity 2: Hostname of the responsible node
   22) Entity 2: NNM ET objectID of the responsible node
  
   23) Entity 2: Label of the aggregated interface
   24) Entity 2: IfAlias of the aggregated interface
   25) Entity 2: NNM ET objectID of the aggregated interface
   26) Entity 2: IfIndex
   27) Entity 2: IfDescr
   28) Entity 2: Number of contained interfaces down.
   29) Entity 2: Number of contained interfaces.
  
   30) Entity 2: Management address of host.
   31) Entity 2: Number of bits in the subnet mask of the entity
   32) Entity 2: Route distinguisher of the entity
   33) Entity 2: NNM ET objectID of the management address
   34) Entity 2: Locale neutral comma separated list of capabilities
   35) Entity 2: Not used
   36) Entity 2: Not used
   37) Entity 2: Not used
   38) Entity 2: Not used
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_AGGPORTCONN_DOWN .1.3.6.1.4.1.11.2.17.1.0.58983010 "IGNORE" Critical
FORMAT Aggregate Port Connection Down $5 $6 connected to $21 $23 $24
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.

This specific alarm indicates that the aggregate port connection 
between two nodes is not responding to polls and all interfaces may
be down on both sides of the connection. 

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    3) Entity 1: Hostname of the responsible node
    4) Entity 1: NNM ET objectID of the responsible node
  
    5) Entity 1: Label of the aggregated interface
    6) Entity 1: IfAlias of the aggregated interface
    7) Entity 1: NNM ET objectID of the aggregated interface
    8) Entity 1: IfIndex
    9) Entity 1: IfDescr
   10) Entity 1: Number of contained interfaces down.
   11) Entity 1: Number of contained interfaces.
  
   12) Entity 1: Management address of host.
   13) Entity 1: Number of bits in the subnet mask of the entity
   14) Entity 1: Route distinguisher of the entity
   15) Entity 1: NNM ET objectID of the management address
   16) Entity 1: Locale neutral comma separated list of capabilities
   17) Entity 1: Not used
   18) Entity 1: Not used
   19) Entity 1: Not used
   20) Entity 1: Not used
   -----------------------------------------------------------------
   21) Entity 2: Hostname of the responsible node
   22) Entity 2: NNM ET objectID of the responsible node
  
   23) Entity 2: Label of the aggregated interface
   24) Entity 2: IfAlias of the aggregated interface
   25) Entity 2: NNM ET objectID of the aggregated interface
   26) Entity 2: IfIndex
   27) Entity 2: IfDescr
   28) Entity 2: Number of contained interfaces down.
   29) Entity 2: Number of contained interfaces.
  
   30) Entity 2: Management address of host.
   31) Entity 2: Number of bits in the subnet mask of the entity
   32) Entity 2: Route distinguisher of the entity
   33) Entity 2: NNM ET objectID of the management address
   34) Entity 2: Locale neutral comma separated list of capabilities
   35) Entity 2: Not used
   36) Entity 2: Not used
   37) Entity 2: Not used
   38) Entity 2: Not used
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_ADDR_DOWN .1.3.6.1.4.1.11.2.17.1.0.58983011 "IGNORE" Critical
FORMAT Address Down $5 $10 $6 Capabilities: $15
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.
The structure of the alarm supports node, interface and address
granularity for single and double entity secondary failure situations.
In addition, primary failures are indicated with entity 3. 

This specific alarm indicates that the address is not responding to
polls.  This address is the primary failure and so entity 3 will not
be populated.  Entity 2 will not be populated.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    Var-binds associated with single object failures.  Like
    ifDown.

    3) Entity 1: Nodename of the responsible node
    4) Entity 1: NNM extended topology objectID of the responsible node

    5) Entity 1: Label of the responsible interface
    6) Entity 1: IfAlias of the responsible interface
    7) Entity 1: NNM extended topology objectID of the responsible interface
    8) Entity 1: IfIndex of the responsible interface
    9) Entity 1: IfDescr of the responsible interface

   10) Entity 1: Responsible Level 3 address or port number
   11) Entity 1: Responsible Level 2 address
   12) Entity 1: Number of bits in the subnet mask of the entity
   13) Entity 1: Route distinguisher of the entity
   14) Entity 1: NNM extended topology objectID of the responsible Level 3 address

   15) Entity 1: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with double object failures.  Like
    connectionDown (i.e.  Iface1-Iface2).

   16) Entity 2: Nodename of the responsible node
   17) Entity 2: NNM extended topology objectID of the responsible node

   18) Entity 2: Label of the responsible interface
   19) Entity 2: IfAlias of the responsible interface
   20) Entity 2: NNM extended topology objectID of the responsible interface
   21) Entity 2: IfIndex of the responsible interface
   22) Entity 2: IfDescr of the responsible interface

   23) Entity 2: Responsible Level 3 address or port number
   24) Entity 2: Responsible Level 2 address
   25) Entity 2: Number of bits in the subnet mask of the entity
   26) Entity 2: Route distinguisher of the entity
   27) Entity 2: NNM extended topology objectID of the responsible Level 3 address

   28) Entity 2: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with the primary failure entity if this
    failure is a secondary failure.

   29) Entity 3: Nodename of the responsible node
   30) Entity 3: NNM extended topology objectID of the responsible node

   31) Entity 3: Label of the responsible interface
   32) Entity 3: IfAlias of the responsible interface
   33) Entity 3: NNM extended topology objectID of the responsible interface
   34) Entity 3: IfIndex of the responsible interface
   35) Entity 3: IfDescr of the responsible interface

   36) Entity 3: Responsible Level 3 address or port number
   37) Entity 3: Responsible Level 2 address
   38) Entity 3: Number of bits in the subnet mask of the entity
   39) Entity 3: Route distinguisher of the entity
   40) Entity 3: NNM extended topology objectID of the responsible Level 3 address

   41) Entity 3: Locale neutral comma separated list of capabilities
   42) Entity 3: Event correlation event UUID which identifies the
                 primary failure event.
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_IF_DOWN .1.3.6.1.4.1.11.2.17.1.0.58983012 "IGNORE" Critical
FORMAT IF Down $5 $10 $6 Capabilities: $15
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.
The structure of the alarm supports node, interface and address
granularity for single and double entity secondary failure situations.
In addition, primary failures are indicated with entity 3.

This specific alarm indicates that the interface is not responding to
polls.  This interface is the primary failure and so entity 3 will not
be populated.  Entity 2 will not be populated.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    Var-binds associated with single object failures.  Like
    ifDown.

    3) Entity 1: Nodename of the responsible node
    4) Entity 1: NNM extended topology objectID of the responsible node

    5) Entity 1: Label of the responsible interface
    6) Entity 1: IfAlias of the responsible interface
    7) Entity 1: NNM extended topology objectID of the responsible interface
    8) Entity 1: IfIndex of the responsible interface
    9) Entity 1: IfDescr of the responsible interface

   10) Entity 1: Responsible Level 3 address or port number
   11) Entity 1: Responsible Level 2 address
   12) Entity 1: Number of bits in the subnet mask of the entity
   13) Entity 1: Route distinguisher of the entity
   14) Entity 1: NNM extended topology objectID of the responsible Level 3 address

   15) Entity 1: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with double object failures.  Like
    connectionDown (i.e.  Iface1-Iface2).

   16) Entity 2: Nodename of the responsible node
   17) Entity 2: NNM extended topology objectID of the responsible node

   18) Entity 2: Label of the responsible interface
   19) Entity 2: IfAlias of the responsible interface
   20) Entity 2: NNM extended topology objectID of the responsible interface
   21) Entity 2: IfIndex of the responsible interface
   22) Entity 2: IfDescr of the responsible interface

   23) Entity 2: Responsible Level 3 address or port number
   24) Entity 2: Responsible Level 2 address
   25) Entity 2: Number of bits in the subnet mask of the entity
   26) Entity 2: Route distinguisher of the entity
   27) Entity 2: NNM extended topology objectID of the responsible Level 3 address

   28) Entity 2: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with the primary failure entity if this
    failure is a secondary failure.

   29) Entity 3: Nodename of the responsible node
   30) Entity 3: NNM extended topology objectID of the responsible node

   31) Entity 3: Label of the responsible interface
   32) Entity 3: IfAlias of the responsible interface
   33) Entity 3: NNM extended topology objectID of the responsible interface
   34) Entity 3: IfIndex of the responsible interface
   35) Entity 3: IfDescr of the responsible interface

   36) Entity 3: Responsible Level 3 address or port number
   37) Entity 3: Responsible Level 2 address
   38) Entity 3: Number of bits in the subnet mask of the entity
   39) Entity 3: Route distinguisher of the entity
   40) Entity 3: NNM extended topology objectID of the responsible Level 3 address

   41) Entity 3: Locale neutral comma separated list of capabilities
   42) Entity 3: Event correlation event UUID which identifies the
                 primary failure event.
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_NODE_DOWN .1.3.6.1.4.1.11.2.17.1.0.58983013 "IGNORE" Critical
FORMAT Node Down $10 Capabilities: $15
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.
The structure of the alarm supports node, interface and address
granularity for single and double entity secondary failure situations.
In addition, primary failures are indicated with entity 3.

This specific alarm indicates that the node is not responding to
polls.  The node is the primary failure and so entity 3 will not
be populated.  Entity 2 will not be populated.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    Var-binds associated with single object failures.  Like
    ifDown.

    3) Entity 1: Nodename of the responsible node
    4) Entity 1: NNM extended topology objectID of the responsible node

    5) Entity 1: Label of the responsible interface
    6) Entity 1: IfAlias of the responsible interface
    7) Entity 1: NNM extended topology objectID of the responsible interface
    8) Entity 1: IfIndex of the responsible interface
    9) Entity 1: IfDescr of the responsible interface

   10) Entity 1: Responsible Level 3 address or port number
   11) Entity 1: Responsible Level 2 address
   12) Entity 1: Number of bits in the subnet mask of the entity
   13) Entity 1: Route distinguisher of the entity
   14) Entity 1: NNM extended topology objectID of the responsible Level 3 address

   15) Entity 1: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with double object failures.  Like
    connectionDown (i.e.  Iface1-Iface2).

   14) Entity 2: Nodename of the responsible node
   15) Entity 2: NNM extended topology objectID of the responsible node

   16) Entity 2: Label of the responsible interface
   17) Entity 2: IfAlias of the responsible interface
   18) Entity 2: NNM extended topology objectID of the responsible interface
   34) Entity 2: IfIndex of the responsible interface
   35) Entity 2: IfDescr of the responsible interface

   19) Entity 2: Responsible Level 3 address or port number
   20) Entity 2: Responsible Level 2 address
   21) Entity 2: Number of bits in the subnet mask of the entity
   22) Entity 2: Route distinguisher of the entity
   23) Entity 2: NNM extended topology objectID of the responsible Level 3 address

   24) Entity 2: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with the primary failure entity if this
    failure is a secondary failure.

   25) Entity 3: Nodename of the responsible node
   26) Entity 3: NNM extended topology objectID of the responsible node

   27) Entity 3: Label of the responsible interface
   28) Entity 3: IfAlias of the responsible interface
   29) Entity 3: NNM extended topology objectID of the responsible interface
   34) Entity 3: IfIndex of the responsible interface
   35) Entity 3: IfDescr of the responsible interface

   30) Entity 3: Responsible Level 3 address or port number
   31) Entity 3: Responsible Level 2 address
   32) Entity 3: Number of bits in the subnet mask of the entity
   33) Entity 3: Route distinguisher of the entity
   34) Entity 3: NNM extended topology objectID of the responsible Level 3 address

   35) Entity 3: Locale neutral comma separated list of capabilities
   36) Entity 3: Event correlation event UUID which identifies the
                 primary failure event.
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_CONNECTION_DOWN .1.3.6.1.4.1.11.2.17.1.0.58983014 "IGNORE" Critical
FORMAT Connection Down $5 $10 connected to $16 $18 $23 Capabilities IF1: $15 IF2: $28
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.
The structure of the alarm supports node, interface and address
granularity for single and double entity secondary failure situations.
In addition, primary failures are indicated with entity 3.

This specific alarm indicates that both sides of the connection between
entity 1 and entity 2 are not responding to polls due to entity 1, entity
2 or the cable between them.  This connection is the primary failure and
so entity 3 will not be populated.  For consistency, the address of 
Entity 1 is always lexicographically smaller than the address of Entity 2.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    Var-binds associated with single object failures.  Like
    ifDown.

    3) Entity 1: Nodename of the responsible node
    4) Entity 1: NNM extended topology objectID of the responsible node

    5) Entity 1: Label of the responsible interface
    6) Entity 1: IfAlias of the responsible interface
    7) Entity 1: NNM extended topology objectID of the responsible interface
    8) Entity 1: IfIndex of the responsible interface
    9) Entity 1: IfDescr of the responsible interface

   10) Entity 1: Responsible Level 3 address or port number
   11) Entity 1: Responsible Level 2 address
   12) Entity 1: Number of bits in the subnet mask of the entity
   13) Entity 1: Route distinguisher of the entity
   14) Entity 1: NNM extended topology objectID of the responsible Level 3 address

   15) Entity 1: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with double object failures.  Like
    connectionDown (i.e.  Iface1-Iface2).

   16) Entity 2: Nodename of the responsible node
   17) Entity 2: NNM extended topology objectID of the responsible node

   18) Entity 2: Label of the responsible interface
   19) Entity 2: IfAlias of the responsible interface
   20) Entity 2: NNM extended topology objectID of the responsible interface
   21) Entity 2: IfIndex of the responsible interface
   22) Entity 2: IfDescr of the responsible interface

   23) Entity 2: Responsible Level 3 address or port number
   24) Entity 2: Responsible Level 2 address
   25) Entity 2: Number of bits in the subnet mask of the entity
   26) Entity 2: Route distinguisher of the entity
   27) Entity 2: NNM extended topology objectID of the responsible Level 3 address

   28) Entity 2: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with the primary failure entity if this
    failure is a secondary failure.

   29) Entity 3: Nodename of the responsible node
   30) Entity 3: NNM extended topology objectID of the responsible node

   31) Entity 3: Label of the responsible interface
   32) Entity 3: IfAlias of the responsible interface
   33) Entity 3: NNM extended topology objectID of the responsible interface
   34) Entity 3: IfIndex of the responsible interface
   35) Entity 3: IfDescr of the responsible interface

   36) Entity 3: Responsible Level 3 address or port number
   37) Entity 3: Responsible Level 2 address
   38) Entity 3: Number of bits in the subnet mask of the entity
   39) Entity 3: Route distinguisher of the entity
   40) Entity 3: NNM extended topology objectID of the responsible Level 3 address

   41) Entity 3: Locale neutral comma separated list of capabilities
   42) Entity 3: Event correlation event UUID which identifies the
                 primary failure event.
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_IF_Intermittent .1.3.6.1.4.1.11.2.17.1.0.58983015 "IGNORE" Warning
FORMAT IF $5 Intermittent Status
SDESC
This event is generated by HP OpenView when
it detects the status of an interface has gone
down and up multiple times.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    Var-binds associated with single object failures.  Like
    ifDown.

    3) Entity 1: Nodename of the responsible node
    4) Entity 1: NNM extended topology objectID of the responsible node

    5) Entity 1: Label of the responsible interface
    6) Entity 1: IfAlias of the responsible interface
    7) Entity 1: NNM extended topology objectID of the responsible interface
    8) Entity 1: IfIndex of the responsible interface
    9) Entity 1: IfDescr of the responsible interface

   10) Entity 1: Responsible Level 3 address or port number
   11) Entity 1: Responsible Level 2 address
   12) Entity 1: Number of bits in the subnet mask of the entity
   13) Entity 1: Route distinguisher of the entity
   14) Entity 1: NNM extended topology objectID of the responsible Level 3 address

   15) Entity 1: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with double object failures.  Like
    connectionDown (i.e.  Iface1-Iface2).

   16) Entity 2: Nodename of the responsible node
   17) Entity 2: NNM extended topology objectID of the responsible node

   18) Entity 2: Label of the responsible interface
   19) Entity 2: IfAlias of the responsible interface
   20) Entity 2: NNM extended topology objectID of the responsible interface
   21) Entity 2: IfIndex of the responsible interface
   22) Entity 2: IfDescr of the responsible interface

   23) Entity 2: Responsible Level 3 address or port number
   24) Entity 2: Responsible Level 2 address
   25) Entity 2: Number of bits in the subnet mask of the entity
   26) Entity 2: Route distinguisher of the entity
   27) Entity 2: NNM extended topology objectID of the responsible Level 3 address

   28) Entity 2: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with the primary failure entity if this
    failure is a secondary failure.

   29) Entity 3: Nodename of the responsible node
   30) Entity 3: NNM extended topology objectID of the responsible node

   31) Entity 3: Label of the responsible interface
   32) Entity 3: IfAlias of the responsible interface
   33) Entity 3: NNM extended topology objectID of the responsible interface
   34) Entity 3: IfIndex of the responsible interface
   35) Entity 3: IfDescr of the responsible interface

   36) Entity 3: Responsible Level 3 address or port number
   37) Entity 3: Responsible Level 2 address
   38) Entity 3: Number of bits in the subnet mask of the entity
   39) Entity 3: Route distinguisher of the entity
   40) Entity 3: NNM extended topology objectID of the responsible Level 3 address

   41) Entity 3: Locale neutral comma separated list of capabilities
   42) Entity 3: Event correlation event UUID which identifies the
                 primary failure event.
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_ADDR_Intermittent .1.3.6.1.4.1.11.2.17.1.0.58983016 "IGNORE" Warning
FORMAT Address Intermittent $5 $10 $6
SDESC
This event is generated by HP OpenView when
it detects the status of a network address has gone
down and up multiple times.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    Var-binds associated with single object failures.  Like
    ifDown.

    3) Entity 1: Nodename of the responsible node
    4) Entity 1: NNM extended topology objectID of the responsible node

    5) Entity 1: Label of the responsible interface
    6) Entity 1: IfAlias of the responsible interface
    7) Entity 1: NNM extended topology objectID of the responsible interface
    8) Entity 1: IfIndex of the responsible interface
    9) Entity 1: IfDescr of the responsible interface

   10) Entity 1: Responsible Level 3 address or port number
   11) Entity 1: Responsible Level 2 address
   12) Entity 1: Number of bits in the subnet mask of the entity
   13) Entity 1: Route distinguisher of the entity
   14) Entity 1: NNM extended topology objectID of the responsible Level 3 address

   15) Entity 1: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with double object failures.  Like
    connectionDown (i.e.  Iface1-Iface2).

   16) Entity 2: Nodename of the responsible node
   17) Entity 2: NNM extended topology objectID of the responsible node

   18) Entity 2: Label of the responsible interface
   19) Entity 2: IfAlias of the responsible interface
   20) Entity 2: NNM extended topology objectID of the responsible interface
   21) Entity 2: IfIndex of the responsible interface
   22) Entity 2: IfDescr of the responsible interface

   23) Entity 2: Responsible Level 3 address or port number
   24) Entity 2: Responsible Level 2 address
   25) Entity 2: Number of bits in the subnet mask of the entity
   26) Entity 2: Route distinguisher of the entity
   27) Entity 2: NNM extended topology objectID of the responsible Level 3 address

   28) Entity 2: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with the primary failure entity if this
    failure is a secondary failure.

   29) Entity 3: Nodename of the responsible node
   30) Entity 3: NNM extended topology objectID of the responsible node

   31) Entity 3: Label of the responsible interface
   32) Entity 3: IfAlias of the responsible interface
   33) Entity 3: NNM extended topology objectID of the responsible interface
   34) Entity 3: IfIndex of the responsible interface
   35) Entity 3: IfDescr of the responsible interface

   36) Entity 3: Responsible Level 3 address or port number
   37) Entity 3: Responsible Level 2 address
   38) Entity 3: Number of bits in the subnet mask of the entity
   39) Entity 3: Route distinguisher of the entity
   40) Entity 3: NNM extended topology objectID of the responsible Level 3 address

   41) Entity 3: Locale neutral comma separated list of capabilities
   42) Entity 3: Event correlation event UUID which identifies the
                 primary failure event.
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_CONNECTION_Intermittent .1.3.6.1.4.1.11.2.17.1.0.58983017 "IGNORE" Minor
FORMAT Connection Intermittent $5 $10 connected to $16 $18 $23 Capabilities IF1: $15 IF2: $28
SDESC
This event is generated by HP OpenView when
it detects the status of a connection has gone
down and up multiple times.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    Var-binds associated with single object failures.  Like
    ifDown.

    3) Entity 1: Nodename of the responsible node
    4) Entity 1: NNM extended topology objectID of the responsible node

    5) Entity 1: Label of the responsible interface
    6) Entity 1: IfAlias of the responsible interface
    7) Entity 1: NNM extended topology objectID of the responsible interface
    8) Entity 1: IfIndex of the responsible interface
    9) Entity 1: IfDescr of the responsible interface

   10) Entity 1: Responsible Level 3 address or port number
   11) Entity 1: Responsible Level 2 address
   12) Entity 1: Number of bits in the subnet mask of the entity
   13) Entity 1: Route distinguisher of the entity
   14) Entity 1: NNM extended topology objectID of the responsible Level 3 address

   15) Entity 1: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with double object failures.  Like
    connectionDown (i.e.  Iface1-Iface2).

   16) Entity 2: Nodename of the responsible node
   17) Entity 2: NNM extended topology objectID of the responsible node

   18) Entity 2: Label of the responsible interface
   19) Entity 2: IfAlias of the responsible interface
   20) Entity 2: NNM extended topology objectID of the responsible interface
   21) Entity 2: IfIndex of the responsible interface
   22) Entity 2: IfDescr of the responsible interface

   23) Entity 2: Responsible Level 3 address or port number
   24) Entity 2: Responsible Level 2 address
   25) Entity 2: Number of bits in the subnet mask of the entity
   26) Entity 2: Route distinguisher of the entity
   27) Entity 2: NNM extended topology objectID of the responsible Level 3 address

   28) Entity 2: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with the primary failure entity if this
    failure is a secondary failure.

   29) Entity 3: Nodename of the responsible node
   30) Entity 3: NNM extended topology objectID of the responsible node

   31) Entity 3: Label of the responsible interface
   32) Entity 3: IfAlias of the responsible interface
   33) Entity 3: NNM extended topology objectID of the responsible interface
   34) Entity 3: IfIndex of the responsible interface
   35) Entity 3: IfDescr of the responsible interface

   36) Entity 3: Responsible Level 3 address or port number
   37) Entity 3: Responsible Level 2 address
   38) Entity 3: Number of bits in the subnet mask of the entity
   39) Entity 3: Route distinguisher of the entity
   40) Entity 3: NNM extended topology objectID of the responsible Level 3 address

   41) Entity 3: Locale neutral comma separated list of capabilities
   42) Entity 3: Event correlation event UUID which identifies the
                 primary failure event.
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_NODE_Intermittent .1.3.6.1.4.1.11.2.17.1.0.58983018 "IGNORE" Minor
FORMAT Node Intermittent $10 Capabilities: $15
SDESC
This event is generated by HP OpenView when
it detects the status of a node has gone
down and up multiple times.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    Var-binds associated with single object failures.  Like
    ifDown.

    3) Entity 1: Nodename of the responsible node
    4) Entity 1: NNM extended topology objectID of the responsible node

    5) Entity 1: Label of the responsible interface
    6) Entity 1: IfAlias of the responsible interface
    7) Entity 1: NNM extended topology objectID of the responsible interface
    8) Entity 1: IfIndex of the responsible interface
    9) Entity 1: IfDescr of the responsible interface

   10) Entity 1: Responsible Level 3 address or port number
   11) Entity 1: Responsible Level 2 address
   12) Entity 1: Number of bits in the subnet mask of the entity
   13) Entity 1: Route distinguisher of the entity
   14) Entity 1: NNM extended topology objectID of the responsible Level 3 address

   15) Entity 1: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with double object failures.  Like
    connectionDown (i.e.  Iface1-Iface2).

   16) Entity 2: Nodename of the responsible node
   17) Entity 2: NNM extended topology objectID of the responsible node

   18) Entity 2: Label of the responsible interface
   19) Entity 2: IfAlias of the responsible interface
   20) Entity 2: NNM extended topology objectID of the responsible interface
   21) Entity 2: IfIndex of the responsible interface
   22) Entity 2: IfDescr of the responsible interface

   23) Entity 2: Responsible Level 3 address or port number
   24) Entity 2: Responsible Level 2 address
   25) Entity 2: Number of bits in the subnet mask of the entity
   26) Entity 2: Route distinguisher of the entity
   27) Entity 2: NNM extended topology objectID of the responsible Level 3 address

   28) Entity 2: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with the primary failure entity if this
    failure is a secondary failure.

   29) Entity 3: Nodename of the responsible node
   30) Entity 3: NNM extended topology objectID of the responsible node

   31) Entity 3: Label of the responsible interface
   32) Entity 3: IfAlias of the responsible interface
   33) Entity 3: NNM extended topology objectID of the responsible interface
   34) Entity 3: IfIndex of the responsible interface
   35) Entity 3: IfDescr of the responsible interface

   36) Entity 3: Responsible Level 3 address or port number
   37) Entity 3: Responsible Level 2 address
   38) Entity 3: Number of bits in the subnet mask of the entity
   39) Entity 3: Route distinguisher of the entity
   40) Entity 3: NNM extended topology objectID of the responsible Level 3 address

   41) Entity 3: Locale neutral comma separated list of capabilities
   42) Entity 3: Event correlation event UUID which identifies the
                 primary failure event.
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_Link_Intermittent .1.3.6.1.4.1.11.2.17.1.0.58983019 "Status Alarms" Warning
FORMAT Link $1 Intermittent Status
SDESC
This event is generated by HP OpenView when
it detects the status of a link has gone
down and up multiple times.

The data passed with the event is
    1) The name and value of the ifIndex instance
       for the affected interface.  The name of
       the interface can be retrieved via an snmpget
       of .1.3.6.1.2.1.2.2.1.2.INST, where INST is
       the instance returned with the trap
    2) The hostname of the node that caused the event
    3) Route distinguisher for this source
EDESC
#
#
#
EVENT OV_APA_AGGPORTCONN_UNREACHABLE .1.3.6.1.4.1.11.2.17.1.0.58983020 "IGNORE" Warning
FORMAT Aggregate Port Connection Unreachable $5 $6 connected to $21 $23 $24
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.

This specific alarm indicates that the aggregate port connection
between two nodes is not responding to polls on both sides of the
connection.  The problem is probably due to another entity.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    3) Entity 1: Hostname of the responsible node
    4) Entity 1: NNM ET objectID of the responsible node

    5) Entity 1: Label of the aggregated interface
    6) Entity 1: IfAlias of the aggregated interface
    7) Entity 1: NNM ET objectID of the aggregated interface
    8) Entity 1: IfIndex
    9) Entity 1: IfDescr
   10) Entity 1: Number of contained interfaces down.
   11) Entity 1: Number of contained interfaces.

   12) Entity 1: Management address of host.
   13) Entity 1: Number of bits in the subnet mask of the entity
   14) Entity 1: Route distinguisher of the entity
   15) Entity 1: NNM ET objectID of the management address
   16) Entity 1: Locale neutral comma separated list of capabilities
   17) Entity 1: Not used
   18) Entity 1: Not used
   19) Entity 1: Not used
   20) Entity 1: Not used
   -----------------------------------------------------------------
   21) Entity 2: Hostname of the responsible node
   22) Entity 2: NNM ET objectID of the responsible node

   23) Entity 2: Label of the aggregated interface
   24) Entity 2: IfAlias of the aggregated interface
   25) Entity 2: NNM ET objectID of the aggregated interface
   26) Entity 2: IfIndex
   27) Entity 2: IfDescr
   28) Entity 2: Number of contained interfaces down.
   29) Entity 2: Number of contained interfaces.

   30) Entity 2: Management address of host.
   31) Entity 2: Number of bits in the subnet mask of the entity
   32) Entity 2: Route distinguisher of the entity
   33) Entity 2: NNM ET objectID of the management address
   34) Entity 2: Locale neutral comma separated list of capabilities
   35) Entity 2: Not used
   36) Entity 2: Not used
   37) Entity 2: Not used
   38) Entity 2: Not used
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_ADDR_UNREACHABLE .1.3.6.1.4.1.11.2.17.1.0.58983021 "IGNORE" Warning
FORMAT Address Unreachable $10 Unreachable Capabilities: $15  Root Cause: $29 $31 $32 $36 $41
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.
The structure of the alarm supports node, interface and address
granularity for single and double entity secondary failure situations.
In addition, primary failures are indicated with entity 3.

This specific alarm indicates that the address is not responding to
polls due to another entity in the network identified in the entity 3
var-binds.  Entity 2 will not be populated.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    Var-binds associated with single object failures.  Like
    ifDown.

    3) Entity 1: Nodename of the responsible node
    4) Entity 1: NNM extended topology objectID of the responsible node

    5) Entity 1: Label of the responsible interface
    6) Entity 1: IfAlias of the responsible interface
    7) Entity 1: NNM extended topology objectID of the responsible interface
    8) Entity 1: IfIndex of the responsible interface
    9) Entity 1: IfDescr of the responsible interface

   10) Entity 1: Responsible Level 3 address or port number
   11) Entity 1: Responsible Level 2 address
   12) Entity 1: Number of bits in the subnet mask of the entity
   13) Entity 1: Route distinguisher of the entity
   14) Entity 1: NNM extended topology objectID of the responsible Level 3 address

   15) Entity 1: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with double object failures.  Like
    connectionDown (i.e.  Iface1-Iface2).

   16) Entity 2: Nodename of the responsible node
   17) Entity 2: NNM extended topology objectID of the responsible node

   18) Entity 2: Label of the responsible interface
   19) Entity 2: IfAlias of the responsible interface
   20) Entity 2: NNM extended topology objectID of the responsible interface
   21) Entity 2: IfIndex of the responsible interface
   22) Entity 2: IfDescr of the responsible interface

   23) Entity 2: Responsible Level 3 address or port number
   24) Entity 2: Responsible Level 2 address
   25) Entity 2: Number of bits in the subnet mask of the entity
   26) Entity 2: Route distinguisher of the entity
   27) Entity 2: NNM extended topology objectID of the responsible Level 3 address

   28) Entity 2: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with the primary failure entity if this
    failure is a secondary failure.

   29) Entity 3: Nodename of the responsible node
   30) Entity 3: NNM extended topology objectID of the responsible node

   31) Entity 3: Label of the responsible interface
   32) Entity 3: IfAlias of the responsible interface
   33) Entity 3: NNM extended topology objectID of the responsible interface
   34) Entity 3: IfIndex of the responsible interface
   35) Entity 3: IfDescr of the responsible interface

   36) Entity 3: Responsible Level 3 address or port number
   37) Entity 3: Responsible Level 2 address
   38) Entity 3: Number of bits in the subnet mask of the entity
   39) Entity 3: Route distinguisher of the entity
   40) Entity 3: NNM extended topology objectID of the responsible Level 3 address

   41) Entity 3: Locale neutral comma separated list of capabilities
   42) Entity 3: Event correlation event UUID which identifies the
                 primary failure event.
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_IF_UNREACHABLE .1.3.6.1.4.1.11.2.17.1.0.58983022 "IGNORE" Warning
FORMAT IF Unreachable $5 $10 $6 Capabilities: $15  Root Cause: $29 $31 $32 $36 $41
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.
The structure of the alarm supports node, interface and address
granularity for single and double entity secondary failure situations.
In addition, primary failures are indicated with entity 3.

This specific alarm indicates that the interface is not responding to
polls due to another entity in the network identified in the entity 3
var-binds.  Entity 2 will not be populated.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    Var-binds associated with single object failures.  Like
    ifDown.

    3) Entity 1: Nodename of the responsible node
    4) Entity 1: NNM extended topology objectID of the responsible node

    5) Entity 1: Label of the responsible interface
    6) Entity 1: IfAlias of the responsible interface
    7) Entity 1: NNM extended topology objectID of the responsible interface
    8) Entity 1: IfIndex of the responsible interface
    9) Entity 1: IfDescr of the responsible interface

   10) Entity 1: Responsible Level 3 address or port number
   11) Entity 1: Responsible Level 2 address
   12) Entity 1: Number of bits in the subnet mask of the entity
   13) Entity 1: Route distinguisher of the entity
   14) Entity 1: NNM extended topology objectID of the responsible Level 3 address

   15) Entity 1: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with double object failures.  Like
    connectionDown (i.e.  Iface1-Iface2).

   16) Entity 2: Nodename of the responsible node
   17) Entity 2: NNM extended topology objectID of the responsible node

   18) Entity 2: Label of the responsible interface
   19) Entity 2: IfAlias of the responsible interface
   20) Entity 2: NNM extended topology objectID of the responsible interface
   21) Entity 2: IfIndex of the responsible interface
   22) Entity 2: IfDescr of the responsible interface

   23) Entity 2: Responsible Level 3 address or port number
   24) Entity 2: Responsible Level 2 address
   25) Entity 2: Number of bits in the subnet mask of the entity
   26) Entity 2: Route distinguisher of the entity
   27) Entity 2: NNM extended topology objectID of the responsible Level 3 address

   28) Entity 2: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with the primary failure entity if this
    failure is a secondary failure.

   29) Entity 3: Nodename of the responsible node
   30) Entity 3: NNM extended topology objectID of the responsible node

   31) Entity 3: Label of the responsible interface
   32) Entity 3: IfAlias of the responsible interface
   33) Entity 3: NNM extended topology objectID of the responsible interface
   34) Entity 3: IfIndex of the responsible interface
   35) Entity 3: IfDescr of the responsible interface

   36) Entity 3: Responsible Level 3 address or port number
   37) Entity 3: Responsible Level 2 address
   38) Entity 3: Number of bits in the subnet mask of the entity
   39) Entity 3: Route distinguisher of the entity
   40) Entity 3: NNM extended topology objectID of the responsible Level 3 address

   41) Entity 3: Locale neutral comma separated list of capabilities
   42) Entity 3: Event correlation event UUID which identifies the
                 primary failure event.
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_NODE_UNREACHABLE .1.3.6.1.4.1.11.2.17.1.0.58983023 "IGNORE" Warning
FORMAT Node Unreachable $10 Capabilities: $15  Root Cause: $29 $31 $32 $36 $41
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.
The structure of the alarm supports node, interface and address
granularity for single and double entity secondary failure situations.
In addition, primary failures are indicated with entity 3.

This specific alarm indicates that the node is not responding to
polls due to another entity in the network identified in the entity 3
var-binds.  Entity 2 will not be populated.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    Var-binds associated with single object failures.  Like
    ifDown.

    3) Entity 1: Nodename of the responsible node
    4) Entity 1: NNM extended topology objectID of the responsible node

    5) Entity 1: Label of the responsible interface
    6) Entity 1: IfAlias of the responsible interface
    7) Entity 1: NNM extended topology objectID of the responsible interface
    8) Entity 1: IfIndex of the responsible interface
    9) Entity 1: IfDescr of the responsible interface

   10) Entity 1: Responsible Level 3 address or port number
   11) Entity 1: Responsible Level 2 address
   12) Entity 1: Number of bits in the subnet mask of the entity
   13) Entity 1: Route distinguisher of the entity
   14) Entity 1: NNM extended topology objectID of the responsible Level 3 address

   15) Entity 1: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with double object failures.  Like
    connectionDown (i.e.  Iface1-Iface2).

   16) Entity 2: Nodename of the responsible node
   17) Entity 2: NNM extended topology objectID of the responsible node

   18) Entity 2: Label of the responsible interface
   19) Entity 2: IfAlias of the responsible interface
   20) Entity 2: NNM extended topology objectID of the responsible interface
   21) Entity 2: IfIndex of the responsible interface
   22) Entity 2: IfDescr of the responsible interface

   23) Entity 2: Responsible Level 3 address or port number
   24) Entity 2: Responsible Level 2 address
   25) Entity 2: Number of bits in the subnet mask of the entity
   26) Entity 2: Route distinguisher of the entity
   27) Entity 2: NNM extended topology objectID of the responsible Level 3 address

   28) Entity 2: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with the primary failure entity if this
    failure is a secondary failure.

   29) Entity 3: Nodename of the responsible node
   30) Entity 3: NNM extended topology objectID of the responsible node

   31) Entity 3: Label of the responsible interface
   32) Entity 3: IfAlias of the responsible interface
   33) Entity 3: NNM extended topology objectID of the responsible interface
   34) Entity 3: IfIndex of the responsible interface
   35) Entity 3: IfDescr of the responsible interface

   36) Entity 3: Responsible Level 3 address or port number
   37) Entity 3: Responsible Level 2 address
   38) Entity 3: Number of bits in the subnet mask of the entity
   39) Entity 3: Route distinguisher of the entity
   40) Entity 3: NNM extended topology objectID of the responsible Level 3 address

   41) Entity 3: Locale neutral comma separated list of capabilities
   42) Entity 3: Event correlation event UUID which identifies the
                 primary failure event.
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_CONNECTION_UNREACHABLE .1.3.6.1.4.1.11.2.17.1.0.58983024 "IGNORE" Warning
FORMAT Connection Unreachable $5 $10 connected to $16 $18 $23 Capabilities IF1: $15 IF2: $28  Root Cause: $29 $31 $32 $36 $41
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.
The structure of the alarm supports node, interface and address
granularity for single and double entity secondary failure situations.
In addition, primary failures are indicated with entity 3.

This specific alarm indicates that both sides of the connection between
entity 1 and entity 2 are not responding to polls due to another entity
in the network identified in the entity 3 var-binds. For consistency,
the address of Entity 1 is always lexicographically smaller than the
address of Entity 2.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    Var-binds associated with single object failures.  Like
    ifDown.

    3) Entity 1: Nodename of the responsible node
    4) Entity 1: NNM extended topology objectID of the responsible node

    5) Entity 1: Label of the responsible interface
    6) Entity 1: IfAlias of the responsible interface
    7) Entity 1: NNM extended topology objectID of the responsible interface
    8) Entity 1: IfIndex of the responsible interface
    9) Entity 1: IfDescr of the responsible interface

   10) Entity 1: Responsible Level 3 address or port number
   11) Entity 1: Responsible Level 2 address
   12) Entity 1: Number of bits in the subnet mask of the entity
   13) Entity 1: Route distinguisher of the entity
   14) Entity 1: NNM extended topology objectID of the responsible Level 3 address

   15) Entity 1: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with double object failures.  Like
    connectionDown (i.e.  Iface1-Iface2).

   16) Entity 2: Nodename of the responsible node
   17) Entity 2: NNM extended topology objectID of the responsible node

   18) Entity 2: Label of the responsible interface
   19) Entity 2: IfAlias of the responsible interface
   20) Entity 2: NNM extended topology objectID of the responsible interface
   21) Entity 2: IfIndex of the responsible interface
   22) Entity 2: IfDescr of the responsible interface

   23) Entity 2: Responsible Level 3 address or port number
   24) Entity 2: Responsible Level 2 address
   25) Entity 2: Number of bits in the subnet mask of the entity
   26) Entity 2: Route distinguisher of the entity
   27) Entity 2: NNM extended topology objectID of the responsible Level 3 address

   28) Entity 2: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with the primary failure entity if this
    failure is a secondary failure.

   29) Entity 3: Nodename of the responsible node
   30) Entity 3: NNM extended topology objectID of the responsible node

   31) Entity 3: Label of the responsible interface
   32) Entity 3: IfAlias of the responsible interface
   33) Entity 3: NNM extended topology objectID of the responsible interface
   34) Entity 3: IfIndex of the responsible interface
   35) Entity 3: IfDescr of the responsible interface

   36) Entity 3: Responsible Level 3 address or port number
   37) Entity 3: Responsible Level 2 address
   38) Entity 3: Number of bits in the subnet mask of the entity
   39) Entity 3: Route distinguisher of the entity
   40) Entity 3: NNM extended topology objectID of the responsible Level 3 address

   41) Entity 3: Locale neutral comma separated list of capabilities
   42) Entity 3: Event correlation event UUID which identifies the
                 primary failure event.
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_IF_DISABLED .1.3.6.1.4.1.11.2.17.1.0.58983025 "IGNORE" Critical
FORMAT IF Disabled $5 $10 $6 Capabilities: $15
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.
The structure of the alarm supports node, interface and address
granularity for single and double entity secondary failure situations.
In addition, primary failures are indicated with entity 3.

This specific alarm indicates that the interface is not responding to
polls in a normal fashion.  This could be because the interface 
ifAdminStatus is Down or Testing.  This interface is the primary
failure and so entity 3 will not be populated.  Entity 2 will not
be populated.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    Var-binds associated with single object failures.  Like
    ifDown.

    3) Entity 1: Nodename of the responsible node
    4) Entity 1: NNM extended topology objectID of the responsible node

    5) Entity 1: Label of the responsible interface
    6) Entity 1: IfAlias of the responsible interface
    7) Entity 1: NNM extended topology objectID of the responsible interface
    8) Entity 1: IfIndex of the responsible interface
    9) Entity 1: IfDescr of the responsible interface

   10) Entity 1: Responsible Level 3 address or port number
   11) Entity 1: Responsible Level 2 address
   12) Entity 1: Number of bits in the subnet mask of the entity
   13) Entity 1: Route distinguisher of the entity
   14) Entity 1: NNM extended topology objectID of the responsible Level 3 address

   15) Entity 1: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with double object failures.  Like
    connectionDown (i.e.  Iface1-Iface2).

   16) Entity 2: Nodename of the responsible node
   17) Entity 2: NNM extended topology objectID of the responsible node

   18) Entity 2: Label of the responsible interface
   19) Entity 2: IfAlias of the responsible interface
   20) Entity 2: NNM extended topology objectID of the responsible interface
   21) Entity 2: IfIndex of the responsible interface
   22) Entity 2: IfDescr of the responsible interface

   23) Entity 2: Responsible Level 3 address or port number
   24) Entity 2: Responsible Level 2 address
   25) Entity 2: Number of bits in the subnet mask of the entity
   26) Entity 2: Route distinguisher of the entity
   27) Entity 2: NNM extended topology objectID of the responsible Level 3 address

   28) Entity 2: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with the primary failure entity if this
    failure is a secondary failure.

   29) Entity 3: Nodename of the responsible node
   30) Entity 3: NNM extended topology objectID of the responsible node

   31) Entity 3: Label of the responsible interface
   32) Entity 3: IfAlias of the responsible interface
   33) Entity 3: NNM extended topology objectID of the responsible interface
   34) Entity 3: IfIndex of the responsible interface
   35) Entity 3: IfDescr of the responsible interface

   36) Entity 3: Responsible Level 3 address or port number
   37) Entity 3: Responsible Level 2 address
   38) Entity 3: Number of bits in the subnet mask of the entity
   39) Entity 3: Route distinguisher of the entity
   40) Entity 3: NNM extended topology objectID of the responsible Level 3 address

   41) Entity 3: Locale neutral comma separated list of capabilities
   42) Entity 3: Event correlation event UUID which identifies the
                 primary failure event.
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_AGGPORT_DISABLED .1.3.6.1.4.1.11.2.17.1.0.58983026 "IGNORE" Critical
FORMAT Aggregate Port Disabled $5 $6 connected to $21 $23 $24
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.

This specific alarm indicates that the aggregate port is not responding 
to polls in a normal fashion.  This could be because all the interfaces' 
ifAdminStatus are Down or Testing.  This aggregate port is the primary
failure and so entity 3 will not be populated.  Entity 2 will not
be populated.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    3) Entity 1: Hostname of the responsible node
    4) Entity 1: NNM ET objectID of the responsible node
  
    5) Entity 1: Label of the aggregated interface
    6) Entity 1: IfAlias of the aggregated interface
    7) Entity 1: NNM ET objectID of the aggregated interface
    8) Entity 1: IfIndex
    9) Entity 1: IfDescr
   10) Entity 1: Number of contained interfaces down.
   11) Entity 1: Number of contained interfaces.
  
   12) Entity 1: Management address of host.
   13) Entity 1: Number of bits in the subnet mask of the entity
   14) Entity 1: Route distinguisher of the entity
   15) Entity 1: NNM ET objectID of the management address
   16) Entity 1: Locale neutral comma separated list of capabilities
   17) Entity 1: Not used
   18) Entity 1: Not used
   19) Entity 1: Not used
   20) Entity 1: Not used
   -----------------------------------------------------------------
   21) Entity 2: Hostname of the responsible node
   22) Entity 2: NNM ET objectID of the responsible node
  
   23) Entity 2: Label of the aggregated interface
   24) Entity 2: IfAlias of the aggregated interface
   25) Entity 2: NNM ET objectID of the aggregated interface
   26) Entity 2: IfIndex
   27) Entity 2: IfDescr
   28) Entity 2: Number of contained interfaces down.
   29) Entity 2: Number of contained interfaces.
  
   30) Entity 2: Management address of host.
   31) Entity 2: Number of bits in the subnet mask of the entity
   32) Entity 2: Route distinguisher of the entity
   33) Entity 2: NNM ET objectID of the management address
   34) Entity 2: Locale neutral comma separated list of capabilities
   35) Entity 2: Not used
   36) Entity 2: Not used
   37) Entity 2: Not used
   38) Entity 2: Not used
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_NODE_SNMP_NOT_RESPONDING .1.3.6.1.4.1.11.2.17.1.0.58983027 "IGNORE" Critical
FORMAT SNMP Agent is not responding $10 Capabilities: $15
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.
The structure of the alarm supports node, interface and address
granularity for single and double entity secondary failure situations.
In addition, primary failures are indicated with entity 3.

This specific alarm indicates that the node is up but the SNMP Agent is
not responding to polls.  The node is the primary failure and so entity
3 will not be populated.  Entity 2 will not be populated.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    Var-binds associated with single object failures.  Like
    ifDown.

    3) Entity 1: Nodename of the responsible node
    4) Entity 1: NNM extended topology objectID of the responsible node

    5) Entity 1: Label of the responsible interface
    6) Entity 1: IfAlias of the responsible interface
    7) Entity 1: NNM extended topology objectID of the responsible interface
    8) Entity 1: IfIndex of the responsible interface
    9) Entity 1: IfDescr of the responsible interface

   10) Entity 1: Responsible Level 3 address or port number
   11) Entity 1: Responsible Level 2 address
   12) Entity 1: Number of bits in the subnet mask of the entity
   13) Entity 1: Route distinguisher of the entity
   14) Entity 1: NNM extended topology objectID of the responsible Level 3 address

   15) Entity 1: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with double object failures.  Like
    connectionDown (i.e.  Iface1-Iface2).

   14) Entity 2: Nodename of the responsible node
   15) Entity 2: NNM extended topology objectID of the responsible node

   16) Entity 2: Label of the responsible interface
   17) Entity 2: IfAlias of the responsible interface
   18) Entity 2: NNM extended topology objectID of the responsible interface
   34) Entity 2: IfIndex of the responsible interface
   35) Entity 2: IfDescr of the responsible interface

   19) Entity 2: Responsible Level 3 address or port number
   20) Entity 2: Responsible Level 2 address
   21) Entity 2: Number of bits in the subnet mask of the entity
   22) Entity 2: Route distinguisher of the entity
   23) Entity 2: NNM extended topology objectID of the responsible Level 3 address

   24) Entity 2: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with the primary failure entity if this
    failure is a secondary failure.

   25) Entity 3: Nodename of the responsible node
   26) Entity 3: NNM extended topology objectID of the responsible node

   27) Entity 3: Label of the responsible interface
   28) Entity 3: IfAlias of the responsible interface
   29) Entity 3: NNM extended topology objectID of the responsible interface
   34) Entity 3: IfIndex of the responsible interface
   35) Entity 3: IfDescr of the responsible interface

   30) Entity 3: Responsible Level 3 address or port number
   31) Entity 3: Responsible Level 2 address
   32) Entity 3: Number of bits in the subnet mask of the entity
   33) Entity 3: Route distinguisher of the entity
   34) Entity 3: NNM extended topology objectID of the responsible Level 3 address

   35) Entity 3: Locale neutral comma separated list of capabilities
   36) Entity 3: Event correlation event UUID which identifies the
                 primary failure event.
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_AGGPORT_NOTDEGRADED .1.3.6.1.4.1.11.2.17.1.0.58983028 "IGNORE" Normal
FORMAT Aggregate Port No Longer Degraded $5 $6 connected to $21 $23 $24  Down $10/$11 $28/$29
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.

This specific alarm indicates that the aggregate port connection 
between two nodes is responding to polls and all of the 
interfaces are up. 

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    3) Entity 1: Hostname of the responsible node
    4) Entity 1: NNM ET objectID of the responsible node
  
    5) Entity 1: Label of the aggregated interface
    6) Entity 1: IfAlias of the aggregated interface
    7) Entity 1: NNM ET objectID of the aggregated interface
    8) Entity 1: IfIndex
    9) Entity 1: IfDescr
   10) Entity 1: Number of contained interfaces down.
   11) Entity 1: Number of contained interfaces.
  
   12) Entity 1: Management address of host.
   13) Entity 1: Number of bits in the subnet mask of the entity
   14) Entity 1: Route distinguisher of the entity
   15) Entity 1: NNM ET objectID of the management address
   16) Entity 1: Locale neutral comma separated list of capabilities
   17) Entity 1: Not used
   18) Entity 1: Not used
   19) Entity 1: Not used
   20) Entity 1: Not used
   -----------------------------------------------------------------
   21) Entity 2: Hostname of the responsible node
   22) Entity 2: NNM ET objectID of the responsible node
  
   23) Entity 2: Label of the aggregated interface
   24) Entity 2: IfAlias of the aggregated interface
   25) Entity 2: NNM ET objectID of the aggregated interface
   26) Entity 2: IfIndex
   27) Entity 2: IfDescr
   28) Entity 2: Number of contained interfaces down.
   29) Entity 2: Number of contained interfaces.
  
   30) Entity 2: Management address of host.
   31) Entity 2: Number of bits in the subnet mask of the entity
   32) Entity 2: Route distinguisher of the entity
   33) Entity 2: NNM ET objectID of the management address
   34) Entity 2: Locale neutral comma separated list of capabilities
   35) Entity 2: Not used
   36) Entity 2: Not used
   37) Entity 2: Not used
   38) Entity 2: Not used
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_IF_REMOVED .1.3.6.1.4.1.11.2.17.1.0.58983029 "IGNORE" Critical
FORMAT IF Removed $5 $10 $6 Capabilities: $15
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that an SNMP noSuchObj error is returned from
monitoring queries of this network interface.  This kind of SNMP
error typically results from an ifRenumbering change on the device.
In that situation, some of the ifIndices that were valid at discovery
time no longer exist on the device.

It can also occur when the SNMP Agent on the device malfunctions.
For example, if the device returns this error for SNMP GET operations
but responds properly for SNMP NEXT operations.   APA always uses SNMP
GET.  SNMP browser tools typically use SNMP NEXT operations.   In this
case, the browser would indicate that the interface is okay but APA
would indicate that the interface is not okay.  This situation can
usually be fixed by loading the latest version of the operating system
into the device.  The entity 2 and 3 var-binds will not be populated.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    Var-binds associated with single object failures.  Like
    ifDown.

    3) Entity 1: Nodename of the responsible node
    4) Entity 1: NNM extended topology objectID of the responsible node

    5) Entity 1: Label of the responsible interface
    6) Entity 1: IfAlias of the responsible interface
    7) Entity 1: NNM extended topology objectID of the responsible interface
    8) Entity 1: IfIndex of the responsible interface
    9) Entity 1: IfDescr of the responsible interface

   10) Entity 1: Responsible Level 3 address or port number
   11) Entity 1: Responsible Level 2 address
   12) Entity 1: Number of bits in the subnet mask of the entity
   13) Entity 1: Route distinguisher of the entity
   14) Entity 1: NNM extended topology objectID of the responsible Level 3 address

   15) Entity 1: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with double object failures.  Like
    connectionDown (i.e.  Iface1-Iface2).

   16) Entity 2: Nodename of the responsible node
   17) Entity 2: NNM extended topology objectID of the responsible node

   18) Entity 2: Label of the responsible interface
   19) Entity 2: IfAlias of the responsible interface
   20) Entity 2: NNM extended topology objectID of the responsible interface
   21) Entity 2: IfIndex of the responsible interface
   22) Entity 2: IfDescr of the responsible interface

   23) Entity 2: Responsible Level 3 address or port number
   24) Entity 2: Responsible Level 2 address
   25) Entity 2: Number of bits in the subnet mask of the entity
   26) Entity 2: Route distinguisher of the entity
   27) Entity 2: NNM extended topology objectID of the responsible Level 3 address

   28) Entity 2: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with the primary failure entity if this
    failure is a secondary failure.

   29) Entity 3: Nodename of the responsible node
   30) Entity 3: NNM extended topology objectID of the responsible node

   31) Entity 3: Label of the responsible interface
   32) Entity 3: IfAlias of the responsible interface
   33) Entity 3: NNM extended topology objectID of the responsible interface
   34) Entity 3: IfIndex of the responsible interface
   35) Entity 3: IfDescr of the responsible interface

   36) Entity 3: Responsible Level 3 address or port number
   37) Entity 3: Responsible Level 2 address
   38) Entity 3: Number of bits in the subnet mask of the entity
   39) Entity 3: Route distinguisher of the entity
   40) Entity 3: NNM extended topology objectID of the responsible Level 3 address

   41) Entity 3: Locale neutral comma separated list of capabilities
   42) Entity 3: Event correlation event UUID which identifies the
                 primary failure event.
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_IF_APA_OWNS_POLLING .1.3.6.1.4.1.11.2.17.1.0.58983030 "LOGONLY" Normal
FORMAT $N Interface $7 - Polling enabled for NNM Extended Topology (netmon polling disabled)
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
the first time it detects and starts polling an interface
that originated in the NNM topology used by netmon. Upon receipt of this flag,
netmon will stop status polling on the indicated interface.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node containing the interface
    3) The HP OpenView object identifier of the node containing the interface
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
    7) The name or label for the interface
EDESC
#
#
#
EVENT OV_IF_NETMON_OWNS_POLLING .1.3.6.1.4.1.11.2.17.1.0.58983031 "LOGONLY" Normal
FORMAT $N Interface $7 - Polling enabled for netmon (NNM Extended Topology polling disabled)
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
the first time it detects and starts polling an interface
that originated in the NNM topology used by netmon. Upon receipt of this flag,
netmon will stop status polling on the indicated interface.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node containing the interface
    3) The HP OpenView object identifier of the node containing the interface
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the interface
    7) The name or label for the interface
EDESC
#
#
#
EVENT OV_APA_Statistics .1.3.6.1.4.1.11.2.17.1.0.58983032 "IGNORE" Normal
FORMAT $N APA stats: $2
SDESC
This event is generated by the ovet_poll Polling Engine and
Status Analyzer to report various execution statistics that are
useful for monitoring its performance.  Varbind $2 contains a single
string version of the important statistics where each statistic is
a colon separated name/value pair.  Each pair is space separate. 

The generation of this event by the ovet_poll process is controlled
by the "StatisticEnable" parameter in the ovet_poll configuration file at
$OV_CONF/nnmet/paConfig.xml. 

On UNIX, see the paConfig.xml(4) manpage for a discussion on
how to set up the parameters to send this event, and a
description of the parameters.  On Windows, see the
paConfig.xml reference page in the help file.

The data passed with the event is
    1) The ID of ovet_poll application sending the event
    2) The statistic string of form:
	StatName:StatValue  StatName:StatValue
EDESC
#
#
#
EVENT OV_APA_NODE_RENUMBERING .1.3.6.1.4.1.11.2.17.1.0.58983033 "IGNORE" Warning
FORMAT Detected potential renumbering on node: $3 (observed changing attributes)
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the interfaces or boards on a node were possibly
renumbered.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
    3) The hostname of the node that potentially experienced a renumbering
    4) The IP address of the node
    5) The route distinguisher of the node
    6) The Topology objectID of the node
EDESC
#
#
#
EVENT OV_APA_BOARD_UP .1.3.6.1.4.1.11.2.17.1.0.58983034 "IGNORE" Normal
FORMAT Board Up - $14
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.

This specific alarm indicates that the board is responding to polls.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    3) Name of the node containing the board
    4) NNM extended topology objectID of the responsible node
    5) Locale neutral comma separated list of capabilities for node
   -----------------------------------------------------------------
    6) Management address
    7) Route distinguisher
    8) NNM extended topology objectID of the management address
   -----------------------------------------------------------------
    9) Index of the responsible board
   10) NNM extended topology objectID of the responsible board
   11) SubBoard index of the responsible board
   12) NNM extended topology objectID of the responsible SubBoard
   13) Serial Number
   14) Module Name
   15) Module Description
   16) Hardware version
   17) Software version
   -----------------------------------------------------------------
   18) reserved
   19) reserved
   20) reserved
   -----------------------------------------------------------------
   21) Event correlation event UUID which identifies the primary failure event.
EDESC
#
#
#
EVENT OV_APA_BOARD_DOWN .1.3.6.1.4.1.11.2.17.1.0.58983035 "IGNORE" Critical
FORMAT Board Down - $14
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.

This specific alarm indicates that the board is not responding to
polls.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    3) Name of the node containing the board
    4) NNM extended topology objectID of the responsible node
    5) Locale neutral comma separated list of capabilities for node
   -----------------------------------------------------------------
    6) Management address
    7) Route distinguisher
    8) NNM extended topology objectID of the management address
   -----------------------------------------------------------------
    9) Index of the responsible board
   10) NNM extended topology objectID of the responsible board
   11) SubBoard index of the responsible board
   12) NNM extended topology objectID of the responsible SubBoard
   13) Serial Number
   14) Module Name
   15) Module Description
   16) Hardware version
   17) Software version
   -----------------------------------------------------------------
   18) reserved
   19) reserved
   20) reserved
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_BOARD_UNREACHABLE .1.3.6.1.4.1.11.2.17.1.0.58983036 "IGNORE" Warning
FORMAT Board Unreachable - $14
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.

This specific alarm indicates that the board is not responding to
polls due to another entity in the network identified by varbind 21.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    3) Name of the node containing the board
    4) NNM extended topology objectID of the responsible node
    5) Locale neutral comma separated list of capabilities for node
   -----------------------------------------------------------------
    6) Management address
    7) Route distinguisher
    8) NNM extended topology objectID of the management address
   -----------------------------------------------------------------
    9) Index of the responsible board
   10) NNM extended topology objectID of the responsible board
   11) SubBoard index of the responsible board
   12) NNM extended topology objectID of the responsible SubBoard
   13) Serial Number
   14) Module Name
   15) Module Description
   16) Hardware version
   17) Software version
   -----------------------------------------------------------------
   18) reserved
   19) reserved
   20) reserved
   -----------------------------------------------------------------
   21) Event correlation event UUID which identifies the primary failure event.
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_BOARD_REMOVED .1.3.6.1.4.1.11.2.17.1.0.58983037 "IGNORE" Warning
FORMAT Board Removed - $14
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the status of a network entity has changed.

This specific alarm indicates that the board was removed from a device.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    3) Name of the node containing the board
    4) NNM extended topology objectID of the responsible node
    5) Locale neutral comma separated list of capabilities for node
   -----------------------------------------------------------------
    6) Management address
    7) Route distinguisher
    8) NNM extended topology objectID of the management address
   -----------------------------------------------------------------
    9) Index of the responsible board
   10) NNM extended topology objectID of the responsible board
   11) SubBoard index of the responsible board
   12) NNM extended topology objectID of the responsible SubBoard
   13) Serial Number
   14) Module Name
   15) Module Description
   16) Hardware version
   17) Software version
   -----------------------------------------------------------------
   18) reserved
   19) reserved
   20) reserved
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_APA_POLL .1.3.6.1.4.1.11.2.17.1.0.58983038 "IGNORE" Normal
FORMAT APA Event Trigger Poll: $2
SDESC
This event is generated by HP OpenView processes when they want the Active 
Problem Analyzer to poll a certain network entity.

The data passed with the event is
    1) The ID of application sending the event
    2) Name of node.
    3) Reserved for future use.
    4) IP Address or NNM extended topology object of the network entity to poll.
    5) Type of poll to perform.  This is an integer with the following 
       definition: 
         Poll If status of network entity is not up = 1
         Poll If status of network entity is not down = 2
         Always Poll the network entity = 3
         Perform a configuration poll = 4
EDESC
#
#
#
EVENT OV_APA_DEMAND_POLL .1.3.6.1.4.1.11.2.17.1.0.58983039 "IGNORE" Normal
FORMAT APA Demand Poll: IP of source: $2 port: $3 Entity to Poll: $4
SDESC
This event is generated by HP OpenView processes when they want the Active 
Problem Analyzer to poll a certain network entity.

The data passed with the event is
    1) The ID of application sending the event
    2) The IP address of the node requesting
       the poll information
    3) The TCP port number to connect to on
       the requesting node
    4) The NNM/ET Object ID of the network entity to poll
EDESC
#
#
#
EVENT OV_APA_NODE_RENUMBERING_FIXED .1.3.6.1.4.1.11.2.17.1.0.58983040 "IGNORE" Warning
FORMAT Renumbering cleared on node: $3
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that the interfaces or boards on a node no longer appear
to have been renumbered.  This can happen after a rediscovery, and will
cause the prior OV_APA_NODE_RENUMBERING event for this node to be cleared.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
    3) The hostname of the node that no longer appears renumbered
    4) The IP address of the node
    5) The route distinguisher of the node
    6) The Topology objectID of the node
EDESC
#
#
#
EVENT OV_APA_AGGPORT_REMOVED .1.3.6.1.4.1.11.2.17.1.0.58983041 "IGNORE" Critical
FORMAT IF Removed $5 $10 $6 Capabilities: $15
SDESC
This alarm is generated by HP OpenView NNM Active Problem Analyzer
when it detects that an SNMP noSuchObj error is returned from
monitoring queries of this aggregated port network interface.  This
kind of SNMP error typically results from an ifRenumbering change on
the device.  In that situation, some of the ifIndices that were valid
at discovery time no longer exist on the device.

It can also occur when the SNMP Agent on the device malfunctions.
For example, if the device returns this error for SNMP GET operations
but responds properly for SNMP NEXT operations.   APA always uses SNMP
GET.  SNMP browser tools typically use SNMP NEXT operations.   In this
case, the browser would indicate that the interface is okay but APA
would indicate that the interface is not okay.  This situation can
usually be fixed by loading the latest version of the operating system
into the device.  The entity 2 and 3 var-binds will not be populated.

The data passed with the event is
    1) The ID of application sending the event
    2) A time stamp for when the event occurred
   -----------------------------------------------------------------
    Var-binds associated with single object failures.  Like
    ifDown.

    3) Entity 1: Nodename of the responsible node
    4) Entity 1: NNM extended topology objectID of the responsible node

    5) Entity 1: Label of the responsible interface
    6) Entity 1: IfAlias of the responsible interface
    7) Entity 1: NNM extended topology objectID of the responsible interface
    8) Entity 1: IfIndex of the responsible interface
    9) Entity 1: IfDescr of the responsible interface

   10) Entity 1: Responsible Level 3 address or port number
   11) Entity 1: Responsible Level 2 address
   12) Entity 1: Number of bits in the subnet mask of the entity
   13) Entity 1: Route distinguisher of the entity
   14) Entity 1: NNM extended topology objectID of the responsible Level 3 address

   15) Entity 1: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with double object failures.  Like
    connectionDown (i.e.  Iface1-Iface2).

   16) Entity 2: Nodename of the responsible node
   17) Entity 2: NNM extended topology objectID of the responsible node

   18) Entity 2: Label of the responsible interface
   19) Entity 2: IfAlias of the responsible interface
   20) Entity 2: NNM extended topology objectID of the responsible interface
   21) Entity 2: IfIndex of the responsible interface
   22) Entity 2: IfDescr of the responsible interface

   23) Entity 2: Responsible Level 3 address or port number
   24) Entity 2: Responsible Level 2 address
   25) Entity 2: Number of bits in the subnet mask of the entity
   26) Entity 2: Route distinguisher of the entity
   27) Entity 2: NNM extended topology objectID of the responsible Level 3 address

   28) Entity 2: Locale neutral comma separated list of capabilities
   -----------------------------------------------------------------
    Var-binds associated with the primary failure entity if this
    failure is a secondary failure.

   29) Entity 3: Nodename of the responsible node
   30) Entity 3: NNM extended topology objectID of the responsible node

   31) Entity 3: Label of the responsible interface
   32) Entity 3: IfAlias of the responsible interface
   33) Entity 3: NNM extended topology objectID of the responsible interface
   34) Entity 3: IfIndex of the responsible interface
   35) Entity 3: IfDescr of the responsible interface

   36) Entity 3: Responsible Level 3 address or port number
   37) Entity 3: Responsible Level 2 address
   38) Entity 3: Number of bits in the subnet mask of the entity
   39) Entity 3: Route distinguisher of the entity
   40) Entity 3: NNM extended topology objectID of the responsible Level 3 address

   41) Entity 3: Locale neutral comma separated list of capabilities
   42) Entity 3: Event correlation event UUID which identifies the
                 primary failure event.
   -----------------------------------------------------------------
EDESC
#
#
#
EVENT OV_Application_Alert .1.3.6.1.4.1.11.2.17.1.0.59047936 "Application Alert Alarms" Minor
FORMAT $4 : $5 : $6
SDESC
This event is generated by HP OpenView when an application
alert message is sent via the OVwAlertMsg() API call.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event
    3) Not applicable
    4) The name of application generating alert
    5) The class of alert
    6) The alert message

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_X_Error .1.3.6.1.4.1.11.2.17.1.0.59047937 "LOGONLY" Minor
FORMAT X11 error from $3's xnmevents session on $4: $5
SDESC
This event is generated by HP OpenView when xnmevents
receives an X error, such as a loss of connection with
the server.

The data passed with the event is
    1) The ID of application sending the event
    2) Not applicable
    3) The user's login name
    4) The user's display
    5) The X11 error message

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Planned_Outage .1.3.6.1.4.1.11.2.17.1.0.59100005 "Threshold Alarms" Normal
FORMAT Scheduled Maintenance Outage Name: $1  Host Specification: $2
SDESC
This event is generated by the HP OpenView event system when
the planned network outage time has reached for the node.

The data passed with the event is
	1) Maintenance List Parameter Outage Specification Name
	2) Maintenance List Parameter Host Specification 

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Set_Event_Filter .1.3.6.1.4.1.11.2.17.1.0.59179055 "LOGONLY" Normal
FORMAT $4 event filter changed to $5
SDESC
This event is generated by the HP OpenView event
system when an application changes the list
of events it would like to see.

The data passed with the event is
    1) The ID of application sending the event
    2) Not applicable
    3) Not applicable
    4) The name of the connecting application
    5) The integer source of the connecting application
    6) The new filter (empty indicates no events)

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Application_Up .1.3.6.1.4.1.11.2.17.1.0.59179056 "LOGONLY" Normal
FORMAT $4 connected to pmd
SDESC
This event is generated by the HP OpenView event
system when an application comes up (connects
to pmd).

The data passed with the event is
    1) The ID of application sending the event
    2) The initial filter (empty indicates no events)
    3) The address of the connecting application's machine
    4) The name of the connecting application
    5) The PID of the connecting application

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Application_Down .1.3.6.1.4.1.11.2.17.1.0.59179057 "LOGONLY" Normal
FORMAT $4 disconnected from pmd
SDESC
This event is generated by the HP OpenView event
system when an application goes down (disconnects
from pmd).

The data passed with the event is
    1) The ID of application sending the event
    2) Not applicable
    3) Not applicable
    4) The name of the disconnecting application

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_AppUngracefulExit .1.3.6.1.4.1.11.2.17.1.0.59179058 "Error Alarms" Major
FORMAT pmd lost contact with $4: pid $7 ungracefully disconnected from pmd with $6 pending events: $8
SDESC
This event is generated by pmd when it detects
one of selected applications ungracefully disconnects
from pmd.  This usually happens when the application
does not perform a normal shutdown of its sockets.

The selected applications include netmon, ovtopmd,
snmpCollect, and ovactiond.

The data passed with the event is
    1) The ID of application sending the event
    2) Not applicable
    3) Not applicable
    4) The name of the disconnected application
    5) The integer source of the disconnected application
    6) The number of outstanding events lost
    7) The process id of the disconnected application
    8) The reason for the disconnect

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Remote_Mgr_Add .1.3.6.1.4.1.11.2.17.1.0.59179059 "LOGONLY" Normal
FORMAT $2 added as remote manager.  It will receive events destined for remote managers
SDESC
This event is generated by ovtopmd when it detects
a remote manager would like to use the local station
as a collection station.  Any events designated to
be forwarded to the remote managers will also be
sent to this management station.

The data passed with the event is
    1) The ID of application sending the event
    2) The remote manager to add

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Remote_Mgr_Delete .1.3.6.1.4.1.11.2.17.1.0.59179060 "LOGONLY" Normal
FORMAT $2 removed as remote manager.  It will no longer receive events destined for remote managers
SDESC
This event is generated by ovtopmd when it detects
a remote manager would no longer like to use the local
station as a collection station.  Any events designated to
be forwarded to the remote managers will no longer be
sent to this management station.

The data passed with the event is
    1) The ID of application sending the event
    2) The remote manager to delete

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Remote_Mgr_Down .1.3.6.1.4.1.11.2.17.1.0.59179061 "Status Alarms" Major
FORMAT Lost contact with remote pmd at $2, disabled event forwarding to it.  Will retry the connection after $4 minutes
SDESC
This event is generated by pmd when a remote pmd
to which a connection already exists can no longer be
contacted.  The lost connection is disabled for the
defined time period.  After this time, the next event to
be forwarded to the disabled, remote pmd will cause pmd
to attempt a re-connection.  If this attempt fails, the
connection will be deleted. If this attempt succeeds,
event forwarding will be re-enabled.

The data passed with the event is
    1) The ID of application sending the event
    2) The remote pmd being disabled
    3) Not applicable
    4) The minimum time until a re-connection will be
       attempted

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Remote_Mgr_Up .1.3.6.1.4.1.11.2.17.1.0.59179062 "Status Alarms" Normal
FORMAT Reconnected with remote pmd at $2, enabled event forwarding to it.
SDESC
This event is generated by pmd when a remote pmd
that was previously disabled by an OV_Disable_Remote_Mgr
event is successfully re-connected.  The local pmd
will once again forward events to it.

The data passed with the event is
    1) The ID of application sending the event
    2) The remote pmd being enabled

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Postmaster_Down .1.3.6.1.4.1.11.2.17.1.0.59179065 "Error Alarms" Warning
FORMAT pmd lost contact with remote pmd at $4: pid $7 ungracefully disconnected with $6 pending events: $8
SDESC
This event is generated by pmd when it detects
that a remote pmd to which it has been connected
ungracefully disconnects from it.  This usually
happens when the remote pmd is shutdown as part
of an NNM platform shutdown on the remote station.

The data passed with the event is
    1) The ID of application sending the event
    2) Not applicable
    3) Not applicable
    4) The host name of the disconnecting Postmaster
    5) The integer source of the disconnected Postmaster
    6) The number of outstanding events lost
    7) The process id of the disconnected Postmaster
    8) The reason for the disconnect

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_EventStorm .1.3.6.1.4.1.11.2.17.1.0.59179066 "Application Alert Alarms" Critical
FORMAT pmd detected an event storm of $4 events over the past $5 seconds ($6 events per second > threshold of $7). $8 events have been sent since the pmd was started.
DISPLAY Event storm of $6 events/second over the past $5 seconds
SDESC
This event is generated by pmd when it detects
that events are being sent at a very fast rate
for a period of time.  The pmd will log
each time the given number of events ($4)
occur within the period ($5), but will only
generate an event no more frequent than a
minimum time span ($8).  The pmd will continue
to operate, but your system performance may
degrade due to this storm of events.  You should
look at all the events being generated by using
the ovdumpevents command.  If you determine that
the given number of events are acceptable, you
can modify the pmd.lrf file to modify the
rate of events ('c' option) allowed in the
interval ('i' option), and minimum alert
frequency ('m' option).  These options are all
documented in the ov_event reference page.

The data passed with the event is
    1) The ID of application sending the event
    2) Not applicable
    3) Not applicable
    4) The number of events in the interval
    5) The interval in seconds
    6) The rate of events per second ($4/$5)
    7) The configured storm detection event rate.
       If exceeded, an event is generated
    8) The total number of events since the pmd
       started
    9) The minimum interval until next notification

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_SecondaryEvent_Suppression_On .1.3.6.1.4.1.11.2.17.1.0.59179067 "Application Alert Alarms" Major
FORMAT Event Storm Detected. Secondary Event Suppression Enabled. Measured Rate of $6 / sec above configured rate of $4 / sec for last $7 seconds.
DISPLAY Event Storm Detected. Secondary Event Suppression Enabled. Measured Rate of $6 / sec above configured rate of $4 / sec for last $7 seconds.
SDESC
This event is generated by pmd when it detects
that events are being sent at a faster rate than
the configured values for a period of time.
pmd will issue this event when the measured
rate ($6) of events is greater than the configured
rate ($4) over the measured period ($7).
pmd will continue to operate, but will suppress
Secondary Failure events from being sent to ECSS Stack.
You should look at all the events being generated by
using the ovdumpevents command.  If you determine that
the given number of events are acceptable, you
can modify the pmd.lrf file to modify the
rate of events ('c' option) allowed in the
interval ('i' option). These options are all
documented in the ov_event reference page.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) Not Applicable
    4) The configured storm detection event rate.
       If exceeded, an event is generated ('c' option)
    5) The configured interval in seconds ('i' option)
    6) The measured rate of events per second
    7) The measured period(in seconds) for the detection of event storm.


On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_SecondaryEvent_Suppression_Off .1.3.6.1.4.1.11.2.17.1.0.59179068 "Application Alert Alarms" Normal
FORMAT Event Storm Over. Secondary Event Suppression disabled. Measured rate of $6/sec below configured rate of $4/sec for last $7 secs.
DISPLAY Event Storm Over. Secondary Event Suppression disabled. Measured rate of $6/sec below configured rate of $4/sec for last $7 secs.
SDESC
This event is generated by pmd when it detects that the event
rate has dropped below the configured rate when secondary
failure event suppression is in operation.
pmd will issue this event containing the measured rate ($6),
the configured rate ($4) and the measured period($7).
pmd will resume the forwarding of secondary failure
events to ECSS stack.
These options are all documented in the ov_event reference page.

The data passed with the event is
    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) Not Applicable
    4) The configured storm detection event rate ('c' option)
    5) The configured interval in seconds ('i' option)
    6) The measured rate of events per second
    7) The measured interval in seconds.
       This will either be $8 or the time taken to receive $4 * $5 events.
    8) The minimum delay ('d' option)


On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_LicNodeViolation .1.3.6.1.4.1.11.2.17.1.0.59179225 "Application Alert Alarms" Major
FORMAT Network Node Manager licensed maximum number of managed nodes reached ($4)
DISPLAY $2: Network Node Manager licensed maximum number of managed nodes reached ($4)
FORWARD %REMOTE_MANAGERS_LIST%
SDESC
This event is generated by Network Node Manager when
it first manages the licensed maximum number of managed
nodes.  Network Node Manager generates this event once
a day as long as it continues to manage the licensed
maximum number of managed nodes.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event
    3) Not applicable
    4) The licensed maximum number of managed nodes

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_LicNodeWarn .1.3.6.1.4.1.11.2.17.1.0.59179226 "Application Alert Alarms" Minor
FORMAT Network Node Manager licensed maximum number of managed nodes nearly reached ($5 of $4)
DISPLAY $2: Network Node Manager licensed maximum number of managed nodes nearly reached ($5 of $4)
FORWARD %REMOTE_MANAGERS_LIST%
SDESC
This event is generated by Network Node Manager when
it first manages 90% of the licensed maximum number
of managed nodes.  Network Node Manager generates this
event once a day as long as it continues to manage 90%
of the licensed maximum number of managed nodes.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event
    3) Not applicable
    4) The licensed maximum number of managed nodes
    5) The current number of managed nodes

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_LicExpire .1.3.6.1.4.1.11.2.17.1.0.59179227 "Application Alert Alarms" Critical
FORMAT Network Node Manager license expired on $4
DISPLAY $2: Network Node Manager license expired on $4
FORWARD %REMOTE_MANAGERS_LIST%
SDESC
WARNING: YOU ARE USING AN EXPIRED LICENSE.  PLEASE,
CONTACT YOUR HP SALES REPRESENTATIVE OR CHANNEL
PARTNER TO PURCHASE A NETWORK NODE MANAGER LICENSE.

This event is generated by Network Node Manager
once a day when its license has expired.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event
    3) Not applicable
    4) The expiration date of the license

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_LicExpireWarn .1.3.6.1.4.1.11.2.17.1.0.59179228 "Application Alert Alarms" Major
FORMAT Network Node Manager license expires on $4
DISPLAY $2: Network Node Manager license expires on $4
FORWARD %REMOTE_MANAGERS_LIST%
SDESC
WARNING: YOU ARE USING A TEMPORARY LICENSE.  PLEASE,
CONTACT YOUR HP SALES REPRESENTATIVE OR CHANNEL
PARTNER TO PURCHASE A NETWORK NODE MANAGER LICENSE.

This event is generated by Network Node Manager once
a day when its license will expire within one year.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event
    3) Not applicable
    4) The expiration date of the license

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_LicOneTime .1.3.6.1.4.1.11.2.17.1.0.59179229 "Application Alert Alarms" Critical
FORMAT Network Node Manager license obtained is a one-time emergency license
DISPLAY $2: Network Node Manager license obtained is a one-time emergency license
FORWARD %REMOTE_MANAGERS_LIST%
SDESC
WARNING: THERE IS NO NETWORK NODE MANAGER LICENSE
AVAILABLE FROM THE LICENSE SERVER.  IF YOU HAVE
INSTALLED LICENSE PASSWORDS ON THE LICENSE SERVER,
THIS MAY BE DUE TO PROBLEMS ACCESSING THE LICENSE
SERVER.

THIS IS THE LAST TIME YOU WILL BE ALLOWED TO RUN
NETWORK NODE MANAGER WITHOUT INSTALLING A LICENSE
OR CORRECTING ACCESS TO THE LICENSE SERVER.

IF YOU HAVE NOT INSTALLED A LICENSE, PLEASE CONTACT
YOUR HP SALES REPRESENTATIVE OR CHANNEL PARTNER TO
PURCHASE A NETWORK NODE MANAGER LICENSE.

This event is generated by Network Node Manager
once a day when its license is an emergency license
that allows Network Node Manager to start only one
time.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event
    3) Not applicable

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_LicNoLic .1.3.6.1.4.1.11.2.17.1.0.59179230 "Application Alert Alarms" Critical
FORMAT $4
DISPLAY $2: $4
FORWARD %REMOTE_MANAGERS_LIST%
SDESC
ERROR: THERE IS NO NETWORK NODE MANAGER LICENSE
AVAILABLE FROM THE LICENSE SERVER.  IF YOU HAVE
INSTALLED LICENSE PASSWORDS ON THE LICENSE SERVER,
THIS MAY BE DUE TO PROBLEMS ACCESSING THE LICENSE
SERVER.

YOU WILL NOT BE ALLOWED TO RUN NETWORK NODE
MANAGER WITHOUT INSTALLING A LICENSE OR CORRECTING
ACCESS TO THE LICENSE SERVER.

IF YOU HAVE NOT INSTALLED A LICENSE, PLEASE CONTACT
YOUR HP SALES REPRESENTATIVE OR CHANNEL PARTNER TO
PURCHASE A NETWORK NODE MANAGER LICENSE.

This event is generated by Network Node Manager
when it cannot obtain a license to start.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event
    3) Not applicable
    4) The formatted description of the licensing error

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_LicGood .1.3.6.1.4.1.11.2.17.1.0.59179231 "LOGONLY" Normal
FORMAT $4
SDESC
This event is generated by Network Node Manager
when it obtains a license to start.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event
    3) Not applicable
    4) The formatted description of the license obtained

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_LicConnViolation .1.3.6.1.4.1.11.2.17.1.0.59179232 "Application Alert Alarms" Major
FORMAT Network Node Manager licensed maximum number of connector nodes reached ($4)
DISPLAY $2: Network Node Manager licensed maximum number of connector nodes reached ($4)
FORWARD %REMOTE_MANAGERS_LIST%
SDESC
This event is generated by Network Node Manager when
it first discovers the licensed maximum number of connector
nodes.  Network Node Manager generates this event once a
day as long as the licensed maximum number of connector
nodes has been reached.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event
    3) Not applicable
    4) The licensed maximum number of connector nodes

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_LicConnWarn .1.3.6.1.4.1.11.2.17.1.0.59179233 "Application Alert Alarms" Minor
FORMAT Network Node Manager licensed maximum number of connector nodes nearly reached ($5 of $4)
DISPLAY $2: Network Node Manager licensed maximum number of connector nodes nearly reached ($5 of $4)
FORWARD %REMOTE_MANAGERS_LIST%
SDESC
This event is generated by Network Node Manager when
it first discovers 90% of the licensed maximum number
of connector nodes.  Network Node Manager generates this
event once a day as long as 90% of the licensed maximum
number of connector nodes has been discovered.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event
    3) Not applicable
    4) The licensed maximum number of connector nodes
    5) The current number of connector nodes

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_LicNodeDiscViol .1.3.6.1.4.1.11.2.17.1.0.59179234 "Application Alert Alarms" Major
FORMAT Network Node Manager licensed maximum number of nodes reached ($4)
DISPLAY $2: Network Node Manager licensed maximum number of nodes reached ($4)
FORWARD %REMOTE_MANAGERS_LIST%
SDESC
This event is generated by Network Node Manager
Special Edition when it first discovers the licensed
maximum number of nodes. Network Node Manager Special
Edition generates this event once a day as long as it
continues to operate at the licensed maximum number
of nodes.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event
    3) Not applicable
    4) The licensed maximum number of nodes

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_LicNodeDiscWarn .1.3.6.1.4.1.11.2.17.1.0.59179235 "Application Alert Alarms" Minor
FORMAT Network Node Manager licensed maximum number of nodes nearly reached ($5 of $4)
DISPLAY $2: Network Node Manager licensed maximum number of nodes nearly reached ($5 of $4)
FORWARD %REMOTE_MANAGERS_LIST%
SDESC
This event is generated by Network Node Manager
Special Edition when it first discovers 90% of the
licensed maximum number of nodes.  Network Node Manager
generates this event once a day as long as it continues
to operate at 90% of the licensed maximum number of nodes.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event
    3) Not applicable
    4) The licensed maximum number of nodes
    5) The current number of discovered nodes

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_PasswordAdded .1.3.6.1.4.1.11.2.17.1.0.59179236 "Application Alert Alarms" Normal
FORMAT A new $5 password was added: $6
FORWARD %REMOTE_MANAGERS_LIST%
SDESC
This event is generated by Network Node Manager
when a new password has been installed.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event
    3) Not Applicable
    4) The product type installed (numeric)
    5) The product type installed (text)
    6) The password that was added

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_LicNodeViolationNNMAE .1.3.6.1.4.1.11.2.17.1.0.59179237 "Application Alert Alarms" Major
FORMAT NNM Advanced Edition licensed maximum number of managed nodes reached ($4).  NNM Advanced Edition is now running outside of licensed parameters.  $5 Additional 250 Node Bank license(s) (or the equivalent number of larger Node Bank licenses) must be purchased.
DISPLAY $2: NNM Advanced Edition licensed maximum number of managed nodes reached ($4).\nNNM Advanced Edition is now running outside of licensed parameters.\n$5 Additional 250 Node Bank license(s) (or the equivalent number of\nlarger Node Bank licenses) must be purchased.
FORWARD %REMOTE_MANAGERS_LIST%
SDESC
This event is generated by NNM Advanced Edition when
it first manages the licensed maximum number of managed
nodes.  NNM Advanced Edition generates this event once
a day as long as it continues to manage the licensed
maximum number of managed nodes.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event
    3) Not Applicable
    4) The licensed maximum number of managed nodes
    5) The number of additional 250 node bank licenses needed to
       meet customer's needs.

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_LicExpireWarnNNMAE .1.3.6.1.4.1.11.2.17.1.0.59179238 "Application Alert Alarms" Major
FORMAT NNM Advanced Edition license expires on $5
DISPLAY $2: NNM Advanced Edition license expires on $5
FORWARD %REMOTE_MANAGERS_LIST%
SDESC
WARNING: YOU ARE USING A TEMPORARY LICENSE.  PLEASE,
CONTACT YOUR HP SALES REPRESENTATIVE OR CHANNEL
PARTNER TO PURCHASE AN NNM ADVANCED EDITION LICENSE.

This event is generated by NNM Advanced Edition once
a day when its license will expire within one year.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event
    3) Not Applicable
    4) The expiration date of the license
    5) Same as above, but a time_t string

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_LicExpireNNMAE .1.3.6.1.4.1.11.2.17.1.0.59179239 "Application Alert Alarms" Critical
FORMAT NNM Advanced Edition license expired on $5
DISPLAY $2: NNM Advanced Edition license expired on $5
FORWARD %REMOTE_MANAGERS_LIST%
SDESC
WARNING: YOU ARE USING AN EXPIRED LICENSE.  PLEASE,
CONTACT YOUR HP SALES REPRESENTATIVE OR CHANNEL
PARTNER TO PURCHASE AN NNM ADVANCED EDITION LICENSE.

This event is generated by NNM Advanced Edition 
once a day when its license has expired.

The data passed with the event is
    1) The ID of application sending the event
    2) The source of the event
    3) Not Applicable
    4) The expiration date of the license
    5) Same as above, but a time_t string

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_PauseStart .1.3.6.1.4.1.11.2.17.1.0.59180000 "Application Alert Alarms" Normal
FORMAT ovpause initiated
SDESC
A pause was initiated with $OV_BIN/ovpause.

The data passed with the event is
    1) The ID of application sending the event
    2) Not applicable
    3) Not applicable
    4) Message from the ovpause program


On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_PauseSuccess .1.3.6.1.4.1.11.2.17.1.0.59180001 "LOGONLY" Normal
FORMAT ovpause completed without errors
SDESC
A pause finished without errors.

The data passed with the event is
    1) The ID of application sending the event
    2) Not applicable
    3) Not applicable
    4) Message from the ovpause program


On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_PauseFail .1.3.6.1.4.1.11.2.17.1.0.59180002 "Application Alert Alarms" Major
FORMAT ovpause failed with errors - $4
SDESC
A pause finished with errors.

The data passed with the event is
    1) The ID of application sending the event
    2) Not applicable
    3) Not applicable
    4) Message from the ovpause program


On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_ResumeStart .1.3.6.1.4.1.11.2.17.1.0.59180003 "LOGONLY" Normal
FORMAT ovresume initiated
SDESC
A resume was initiated by $OV_BIN/ovresume.

The data passed with the event is
    1) The ID of application sending the event
    2) Not applicable
    3) Not applicable
    4) Message from the ovresume program


On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_ResumeSuccess .1.3.6.1.4.1.11.2.17.1.0.59180004 "Application Alert Alarms" Normal
FORMAT ovresume completed without errors.
SDESC
A resume finished without errors.

The data passed with the event is
    1) The ID of application sending the event
    2) Not applicable
    3) Not applicable
    4) Message from the ovresume program


On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_ResumeFail .1.3.6.1.4.1.11.2.17.1.0.59180005 "Application Alert Alarms" Major
FORMAT ovresume completed with errors - $4
SDESC
A resume finished with errors.

The data passed with the event is
    1) The ID of application sending the event
    2) Not applicable
    3) Not applicable
    4) Message from the ovresume program


On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DaemonTerminated .1.3.6.1.4.1.11.2.17.1.0.59180100 "Application Alert Alarms" Major
FORMAT ovspmd managed process ($4) has terminated unexpectedly
DISPLAY $4 is no longer running.  Restart it with 'ovstart $4'
SDESC
A ovspmd managed process closed its connection to ovspmd.
ovspmd will assume the process is no longer running.

The data passed with the event is
    1) The ID of application sending the event
    2) Not applicable
    3) Not applicable
    4) The managed process that ungracefully closed its
       connection to ovspmd


On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_ovspmdAutoResume .1.3.6.1.4.1.11.2.17.1.0.59180101 "Application Alert Alarms" Normal
FORMAT ovspmd resumed process ($4) outside of the control of ovresume
SDESC
A ovspmd managed process has been resumed automatically by
ovspmd.  It was previously in DEPENDENCY_ERR state because
one of it dependencies could not be resumed.  The dependency
is now running so this process could be resumed.  This can
occur when a process takes too long to resume (time out) and
eventually completes after the ovresume command has
terminated.

The data passed with the event is
    1) The ID of application sending the event
    2) Not applicable
    3) Not applicable
    4) The managed process that was auto resumed by ovspmd


On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_ovspmdPostTimeoutRes .1.3.6.1.4.1.11.2.17.1.0.59180102 "Application Alert Alarms" Normal
FORMAT Process ($4) resumed itself after timing out and after ovpause/ovresume has completed.
SDESC
A ovspmd managed process responded to ovspmd after timing
out and after ovpause/ovresume has completed.  It has been
returned to a RUNNING state from a RESUME_TIMEOUT state.
This can occur when a process takes too long to resume (time
out) and eventually completes after the ovresume command has
terminated.

The data passed with the event is
    1) The ID of application sending the event
    2) Not applicable
    3) Not applicable
    4) The managed process that successfully resumed
       AFTER timing out


On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_dataWarehouseMaintError .1.3.6.1.4.1.11.2.17.1.0.59181002 "Application Alert Alarms" Major
FORMAT Data warehouse maintenance program ($4) exited with a non-zero return code of $5 and the following message: $6
SDESC
A data warehouse maintenance program exited with a non-zero
return code indicating an error.  This can occur for several
reasons.  Check the message for a better indication of what
happened.

The data passed with the event is
    1) The ID of application sending the event
    2) Not applicable
    3) Not applicable
    4) The data warehouse maintenance program name
    5) The return code
    6) The message returned from the data warehouse
       maintenance program

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_RptError .1.3.6.1.4.1.11.2.17.1.0.59181004 "Application Alert Alarms" Major
FORMAT Reporting system error: $2  Details: $3
SDESC
This event is generated by HP OpenView when
it detects a error situation in the reporting subsystem.

The data passed with the event is
    1) The ID of application sending the event
    2) The formatted description of event
    3) Low-level details of failure (English only)

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DBDown .1.3.6.1.4.1.11.2.17.1.0.59181005 "Error Alarms" Major
FORMAT HP OpenView Data Warehouse is down:$2
DISPLAY HP OpenView Data Warehouse is down:$2
SDESC
This event is generated by HP OpenView ovdbcheck when
it detects an error with the database.

The data passed with the event is
    1) The ID of application sending the event
    2) The formatted description of event

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_DBUp .1.3.6.1.4.1.11.2.17.1.0.59181006 "Error Alarms" Major
FORMAT HP OpenView Data Warehouse is back up
SDESC
This event is generated by HP OpenView when
it detects the database is available again
EDESC
#
#
#
EVENT OV_Field_Changed .1.3.6.1.4.1.11.2.17.1.0.60000000 "IGNORE" Normal
FORMAT Station $1: Field change for $6 : time $7 : type $3 : event number $2
FORWARD %REMOTE_MANAGERS_LIST%
SDESC
This event is used to forward changes in
topology information from a collection station to
interested management stations.


The data passed with the event is
    1) The station name/identifying string
    2) The event sequence number for ordering events
    3) The type of change:
        1 == New object
        2 == Deleted object
        3 == Field value changes
    4) The object identifier of the remote object, with the
       SNMP object identifier of the of the field matching
       the appropriate MIB column by type.
    5) The UUID of the remote object.
    6) The type of the remote object (network, segment,
       node, etc)
    7) The time the change occurred at the collection
       station

    8-N) If type is 3, then 1 or more fields indicating the
       new value, where the SNMP object identifier of the
       field matches the MIB value that has changed

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Map_Sync_Start .1.3.6.1.4.1.11.2.17.1.0.60000025 "LOGONLY" Normal
FORMAT Map Synchronization Start on map $3, session $4
SDESC
This event is sent by HP OpenView when map synchronization
has begun.

The data passed with the event is
    1) The ID of application sending the event
    2) The application source
    3) The Map Name
    4) The ovw Session Identifier
    5) The PID of the synchronizing application


On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Map_Sync_Stop .1.3.6.1.4.1.11.2.17.1.0.60000026 "LOGONLY" Normal
FORMAT Map Synchronization Completed on map $3, session $4
SDESC
This event is sent by HP OpenView when map synchronization
has completed.

The data passed with the event is
    1) The ID of application sending the event
    2) The application source
    3) The Map Name
    4) The ovw Session Identifier
    5) The PID of the synchronizing application


On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_Map_Filter_Change .1.3.6.1.4.1.11.2.17.1.0.60000027 "LOGONLY" Normal
FORMAT Map Filter Changed on map $4, session $5
SDESC
This event is sent by HP OpenView when map filter 
is changed.

The data passed with the event is
    1) The ID of application sending the event
    2) The application source
    3) Not Applicable 
    4) The Map Name
    5) The ovw Session Identifier
    6) The PID of the synchronizing application


On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_MgX_ECS_MgxDeviceDown .1.3.6.1.4.1.11.2.17.1.0.60000200 "LOGONLY" Warning
FORMAT MgX Device $6 Down ($5)
EXEC snmpnotify -v 1 -e 1.3.6.1.4.1.11.2.17.1 $10 1.3.6.1.4.1.11.2.17.1.60000200 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$1" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$2" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$3" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$4" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$5" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$6" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$7" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$8" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$9" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$10" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$11" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$12" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$13" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$14"
SDESC
This event is used as part of the integration of the NNM and
ManageX event systems.  More specifically, this event is
sent from NNM to the ManageX console whenever the MgX device
is inaccessible.

This event is a locale neutral event.  That is, the event
should contain English (that won't be displayed) or locale
neutral information like integers or ipAddresses.  The
receiver of the event localizes the event into the receivers
locale prior to displaying the event.

The data (var-binds) passed with the event is:

    1) Special constant value of "NNM/MgX Integration
       Message".  Always in English.  (Never Displayed)

    2) Application.  Usually, "NNM ECS Application" or
       "Network Node Manager".  This string should always be
       in English.  (Never Displayed)

    3) Application Host's ip address in dotted notation
       (e.g.  15.2.1.3).  (Displayable)

    4) Application Host's fully qualified hostname
       (myhost.cnd.hp.com).  (Displayable)

    5) Managed Host's ip address or ipx address.  The value
       for ipAddr is in dotted notation.  (Displayable)

    6) Managed Host's fully qualified hostname (e.g.
       hishost.cnd.hp.com).  (Displayable)

    7) Connector device's ip or level-2 address.  The value
       for ipAddr is in dotted notation.  (Displayable) Not
       used for this event.

    8) Connector device's fully qualified hostname (e.g.
       herhost.cnd.hp.com).  (Displayable) Not used for this
       event.

    9) MgX Console device's ipAddress.  The value is in
       dotted notation.  (Displayable)

   10) MgX Console device's fully qualified hostname (e.g.
       thehost.cnd.hp.com).  (Displayable)

   11) Critical route from the MgX console node to the
       managed node.  Initial implementations may simplify
       this to the path from NNM to the managed node.  The
       value will be English since this is debugging
       information that does not require localization.  The
       value will be triples of the following form for
       level-3 components:  (Never Displayed)

       		topoID <fully qualified node name>.<ifNumber>

   12) English console message to use if the receiver, which
       is typically the WMI MgX policy, has not localized
       the event.  This var-bind value is transmitted but
       should not be used.  (Never Displayed)

   13) MgX Console Message Severity Type - May be a zero
       length str.  Only used for specific traps in the
       range of 60000208 to 60000299.  Not used in this
       event.

   14) MgX Console Message Category - May be a zero length
       string.  Only used for specific traps in the range of
       60000208 to 60000299.  Not used in this event.
EDESC
#
#
#
EVENT OV_MgX_ECS_MgxNetPathDown .1.3.6.1.4.1.11.2.17.1.0.60000201 "LOGONLY" Warning
FORMAT Network path to MgX Device $6 Down ($5) due to $8 ($7)
EXEC snmpnotify -v 1 -e 1.3.6.1.4.1.11.2.17.1 $10 1.3.6.1.4.1.11.2.17.1.60000201 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$1" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$2" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$3" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$4" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$5" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$6" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$7" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$8" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$9" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$10" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$11" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$12" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$13" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$14"
SDESC
This event is used to as part of the integration of the NNM
and ManageX event systems.  More specifically, this event is
sent from NNM to the ManageX console whenever the MgX device
is inaccessible due to a connector device.

This event is a locale neutral event.  That is, the event
should contain English (that won't be displayed) or locale
neutral information like integers or ipAddresses.  The
receiver of the event localizes the event into the receivers
locale prior to displaying the event.

The data (var-binds) passed with the event is:

    1) Special constant value of "NNM/MgX Integration
       Message".  Always in English.  (Never Displayed)

    2) Application.  Usually, "NNM ECS Application" or
       "Network Node Manager".  This string should always be
       in English.  (Never Displayed)

    3) Application Host's ip address in dotted notation
       (e.g.  15.2.1.3).  (Displayable)

    4) Application Host's fully qualified hostname
       (myhost.cnd.hp.com).  (Displayable)

    5) Managed Host's ip address or ipx address.  The value
       for ipAddr is in dotted notation.  (Displayable)

    6) Managed Host's fully qualified hostname (e.g.
       hishost.cnd.hp.com).  (Displayable)

    7) Connector device's ip or level-2 address.  The value
       for ipAddr is in dotted notation.  (Displayable)

    8) Connector device's fully qualified hostname (e.g.
       herhost.cnd.hp.com).  (Displayable)

    9) MgX Console device's ipAddress.  The value is in
       dotted notation.  (Displayable)

   10) MgX Console device's fully qualified hostname (e.g.
       thehost.cnd.hp.com).  (Displayable)

   11) Critical route from the MgX console node to the
       managed node.  Initial implementations may simplify
       this to the path from NNM to the managed node.  The
       value will be English since this is debugging
       information that does not require localization.  The
       value will be triples of the following form for
       level-3 components:  (Never Displayed)

       		topoID <fully qualified node name>.<ifNumber>

   12) English console message to use if the receiver, which
       is typically the WMI MgX policy, has not localized
       the event.  This var-bind value is transmitted but
       should not be used.  (Never Displayed)

   13) MgX Console Message Severity Type - May be a zero
       length str.  Only used for specific traps in the
       range of 60000208 to 60000299.  Not used in this
       event.

   14) MgX Console Message Category - May be a zero length
       string.  Only used for specific traps in the range of
       60000208 to 60000299.  Not used in this event.
EDESC
#
#
#
EVENT OV_MgX_ECS_MgxDeviceUp .1.3.6.1.4.1.11.2.17.1.0.60000202 "LOGONLY" Warning
FORMAT MgX Device $6 Up ($5)
EXEC snmpnotify -v 1 -e 1.3.6.1.4.1.11.2.17.1 $10 1.3.6.1.4.1.11.2.17.1.60000202 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$1" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$2" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$3" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$4" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$5" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$6" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$7" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$8" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$9" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$10" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$11" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$12" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$13" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$14"
SDESC
This event is used to as part of the integration of the NNM
and ManageX event systems.  More specifically, this event is
sent from NNM to the ManageX console whenever the MgX device
is accessible.

This event is a locale neutral event.  That is, the event
should contain English (that won't be displayed) or locale
neutral information like integers or ipAddresses.  The
receiver of the event localizes the event into the receivers
locale prior to displaying the event.

The data (var-binds) passed with the event is:

    1) Special constant value of "NNM/MgX Integration
       Message".  Always in English.  (Never Displayed)

    2) Application.  Usually, "NNM ECS Application" or
       "Network Node Manager".  This string should always be
       in English.  (Never Displayed)

    3) Application Host's ip address in dotted notation
       (e.g.  15.2.1.3).  (Displayable)

    4) Application Host's fully qualified hostname
       (myhost.cnd.hp.com).  (Displayable)

    5) Managed Host's ip address or ipx address.  The value
       for ipAddr is in dotted notation.  (Displayable)

    6) Managed Host's fully qualified hostname (e.g.
       hishost.cnd.hp.com).  (Displayable)

    7) Connector device's ip or level-2 address.  The value
       for ipAddr is in dotted notation.  (Displayable) Not
       used for this event.

    8) Connector device's fully qualified hostname (e.g.
       herhost.cnd.hp.com).  (Displayable) Not used for this
       event.

    9) MgX Console device's ipAddress.  The value is in
       dotted notation.  (Displayable)

   10) MgX Console device's fully qualified hostname (e.g.
       thehost.cnd.hp.com).  (Displayable)

   11) Critical route from the MgX console node to the
       managed node.  Initial implementations may simplify
       this to the path from NNM to the managed node.  The
       value will be English since this is debugging
       information that does not require localization.  The
       value will be triples of the following form for
       level-3 components:  (Never Displayed)

       		topoID <fully qualified node name>.<ifNumber>

   12) English console message to use if the receiver, which
       is typically the WMI MgX policy, has not localized
       the event.  This var-bind value is transmitted but
       should not be used.  (Never Displayed)

   13) MgX Console Message Severity Type - May be a zero
       length str.  Only used for specific traps in the
       range of 60000208 to 60000299.  Not used in this
       event.

   14) MgX Console Message Category - May be a zero length
       string.  Only used for specific traps in the range of
       60000208 to 60000299.  Not used in this event.
EDESC
#
#
#
EVENT OV_MgX_ECS_MgxNetPathUp .1.3.6.1.4.1.11.2.17.1.0.60000203 "LOGONLY" Warning
FORMAT Network path to MgX Device $6 Up ($5) due to $8 ($7)
EXEC snmpnotify -v 1 -e 1.3.6.1.4.1.11.2.17.1 $10 1.3.6.1.4.1.11.2.17.1.60000203 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$1" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$2" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$3" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$4" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$5" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$6" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$7" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$8" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$9" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$10" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$11" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$12" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$13" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$14"
SDESC
This event is used to as part of the integration of the NNM
and ManageX event systems.  More specifically, this event is
sent from NNM to the ManageX console whenever the MgX device
is inaccessible.

This event is a locale neutral event.  That is, the event
should contain English (that won't be displayed) or locale
neutral information like integers or ipAddresses.  The
receiver of the event localizes the event into the receivers
locale prior to displaying the event.

The data (var-binds) passed with the event is:


    1) Special constant value of "NNM/MgX Integration
       Message".  Always in English.  (Never Displayed)

    2) Application.  Usually, "NNM ECS Application" or
       "Network Node Manager".  This string should always be
       in English.  (Never Displayed)

    3) Application Host's ip address in dotted notation
       (e.g.  15.2.1.3).  (Displayable)

    4) Application Host's fully qualified hostname
       (myhost.cnd.hp.com).  (Displayable)

    5) Managed Host's ip address or ipx address.  The value
       for ipAddr is in dotted notation.  (Displayable)

    6) Managed Host's fully qualified hostname (e.g.
       hishost.cnd.hp.com).  (Displayable)

    7) Connector device's ip or level-2 address.  The value
       for ipAddr is in dotted notation.  (Displayable)

    8) Connector device's fully qualified hostname (e.g.
       herhost.cnd.hp.com).  (Displayable)

    9) MgX Console device's ipAddress.  The value is in
       dotted notation.  (Displayable)

   10) MgX Console device's fully qualified hostname (e.g.
       thehost.cnd.hp.com).  (Displayable)

   11) Critical route from the MgX console node to the
       managed node.  Initial implementations may simplify
       this to the path from NNM to the managed node.  The
       value will be English since this is debugging
       information that does not require localization.  The
       value will be triples of the following form for
       level-3 components:  (Never Displayed)

       		topoID <fully qualified node name>.<ifNumber>

   12) English console message to use if the receiver, which
       is typically the WMI MgX policy, has not localized
       the event.  This var-bind value is transmitted but
       should not be used.  (Never Displayed)

   13) MgX Console Message Severity Type - May be a zero
       length str.  Only used for specific traps in the
       range of 60000208 to 60000299.  Not used in this
       event.

   14) MgX Console Message Category - May be a zero length
       string.  Only used for specific traps in the range of
       60000208 to 60000299.  Not used in this event.
EDESC
#
#
#
EVENT OV_MgX_ECS_DeviceDown .1.3.6.1.4.1.11.2.17.1.0.60000204 "LOGONLY" Warning
FORMAT Non-MgX Device $6 Down ($5)
EXEC snmpnotify -v 1 -e 1.3.6.1.4.1.11.2.17.1 $10 1.3.6.1.4.1.11.2.17.1.60000204 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$1" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$2" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$3" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$4" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$5" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$6" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$7" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$8" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$9" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$10" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$11" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$12" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$13" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$14"
SDESC
This event is used to as part of the integration of the NNM
and ManageX event systems.  More specifically, this event is
sent from NNM to the ManageX console whenever the MgX device
is inaccessible.

This event is a locale neutral event.  That is, the event
should contain English (that won't be displayed) or locale
neutral information like integers or ipAddresses.  The
receiver of the event localizes the event into the receivers
locale prior to displaying the event.

The data (var-binds) passed with the event is:

    1) Special constant value of "NNM/MgX Integration
       Message".  Always in English.  (Never Displayed)

    2) Application.  Usually, "NNM ECS Application" or
       "Network Node Manager".  This string should always be
       in English.  (Never Displayed)

    3) Application Host's ip address in dotted notation
       (e.g.  15.2.1.3).  (Displayable)

    4) Application Host's fully qualified hostname
       (myhost.cnd.hp.com).  (Displayable)

    5) Managed Host's ip address or ipx address.  The value
       for ipAddr is in dotted notation.  (Displayable)

    6) Managed Host's fully qualified hostname (e.g.
       hishost.cnd.hp.com).  (Displayable)

    7) Connector device's ip or level-2 address.  The value
       for ipAddr is in dotted notation.  (Displayable) Not
       used for this event.

    8) Connector device's fully qualified hostname (e.g.
       herhost.cnd.hp.com).  (Displayable) Not used for this
       event.

    9) MgX Console device's ipAddress.  The value is in
       dotted notation.  (Displayable)

   10) MgX Console device's fully qualified hostname (e.g.
       thehost.cnd.hp.com).  (Displayable)

   11) Critical route from the MgX console node to the
       managed node.  Initial implementations may simplify
       this to the path from NNM to the managed node.  The
       value will be English since this is debugging
       information that does not require localization.  The
       value will be triples of the following form for
       level-3 components:  (Never Displayed)

       		topoID <fully qualified node name>.<ifNumber>

   12) English console message to use if the receiver, which
       is typically the WMI MgX policy, has not localized
       the event.  This var-bind value is transmitted but
       should not be used.  (Never Displayed)

   13) MgX Console Message Severity Type - May be a zero
       length str.  Only used for specific traps in the
       range of 60000208 to 60000299.  Not used in this
       event.

   14) MgX Console Message Category - May be a zero length
       string.  Only used for specific traps in the range of
       60000208 to 60000299.  Not used in this event.
EDESC
#
#
#
EVENT OV_MgX_ECS_NetPathDown .1.3.6.1.4.1.11.2.17.1.0.60000205 "LOGONLY" Warning
FORMAT Network path to Non-MgX Device $6 Down ($5) due to $8 ($7)
EXEC snmpnotify -v 1 -e 1.3.6.1.4.1.11.2.17.1 $10 1.3.6.1.4.1.11.2.17.1.60000205 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$1" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$2" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$3" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$4" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$5" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$6" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$7" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$8" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$9" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$10" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$11" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$12" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$13" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$14"
SDESC
This event is used to as part of the integration of the NNM
and ManageX event systems.  More specifically, this event is
sent from NNM to the ManageX console whenever the MgX device
is inaccessible due to a connector device.

This event is a locale neutral event.  That is, the event
should contain English (that won't be displayed) or locale
neutral information like integers or ipAddresses.  The
receiver of the event localizes the event into the receivers
locale prior to displaying the event.

The data (var-binds) passed with the event is:

    1) Special constant value of "NNM/MgX Integration
       Message".  Always in English.  (Never Displayed)

    2) Application.  Usually, "NNM ECS Application" or
       "Network Node Manager".  This string should always be
       in English.  (Never Displayed)

    3) Application Host's ip address in dotted notation
       (e.g.  15.2.1.3).  (Displayable)

    4) Application Host's fully qualified hostname
       (myhost.cnd.hp.com).  (Displayable)

    5) Managed Host's ip address or ipx address.  The value
       for ipAddr is in dotted notation.  (Displayable)

    6) Managed Host's fully qualified hostname (e.g.
       hishost.cnd.hp.com).  (Displayable)

    7) Connector device's ip or level-2 address.  The value
       for ipAddr is in dotted notation.  (Displayable)

    8) Connector device's fully qualified hostname (e.g.
       herhost.cnd.hp.com).  (Displayable)

    9) MgX Console device's ipAddress.  The value is in
       dotted notation.  (Displayable)

   10) MgX Console device's fully qualified hostname (e.g.
       thehost.cnd.hp.com).  (Displayable)

   11) Critical route from the MgX console node to the
       managed node.  Initial implementations may simplify
       this to the path from NNM to the managed node.  The
       value will be English since this is debugging
       information that does not require localization.  The
       value will be triples of the following form for
       level-3 components:  (Never Displayed)

       		topoID <fully qualified node name>.<ifNumber>

   12) English console message to use if the receiver, which
       is typically the WMI MgX policy, has not localized
       the event.  This var-bind value is transmitted but
       should not be used.  (Never Displayed)

   13) MgX Console Message Severity Type - May be a zero
       length str.  Only used for specific traps in the
       range of 60000208 to 60000299.  Not used in this
       event.

   14) MgX Console Message Category - May be a zero length
       string.  Only used for specific traps in the range of
       60000208 to 60000299.  Not used in this event.
EDESC
#
#
#
EVENT OV_MgX_ECS_DeviceUp .1.3.6.1.4.1.11.2.17.1.0.60000206 "LOGONLY" Warning
FORMAT Non-MgX Device $6 Up ($5)
EXEC snmpnotify -v 1 -e 1.3.6.1.4.1.11.2.17.1 $10 1.3.6.1.4.1.11.2.17.1.60000206 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$1" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$2" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$3" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$4" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$5" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$6" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$7" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$8" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$9" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$10" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$11" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$12" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$13" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$14"
SDESC
This event is used to as part of the integration of the NNM
and ManageX event systems.  More specifically, this event is
sent from NNM to the ManageX console whenever the MgX device
is accessible.

This event is a locale neutral event.  That is, the event
should contain English (that won't be displayed) or locale
neutral information like integers or ipAddresses.  The
receiver of the event localizes the event into the receivers
locale prior to displaying the event.

The data (var-binds) passed with the event is:

    1) Special constant value of "NNM/MgX Integration
       Message".  Always in English.  (Never Displayed)

    2) Application.  Usually, "NNM ECS Application" or
       "Network Node Manager".  This string should always be
       in English.  (Never Displayed)

    3) Application Host's ip address in dotted notation
       (e.g.  15.2.1.3).  (Displayable)

    4) Application Host's fully qualified hostname
       (myhost.cnd.hp.com).  (Displayable)

    5) Managed Host's ip address or ipx address.  The value
       for ipAddr is in dotted notation.  (Displayable)

    6) Managed Host's fully qualified hostname (e.g.
       hishost.cnd.hp.com).  (Displayable)

    7) Connector device's ip or level-2 address.  The value
       for ipAddr is in dotted notation.  (Displayable) Not
       used for this event.

    8) Connector device's fully qualified hostname (e.g.
       herhost.cnd.hp.com).  (Displayable) Not used for this
       event.

    9) MgX Console device's ipAddress.  The value is in
       dotted notation.  (Displayable)

   10) MgX Console device's fully qualified hostname (e.g.
       thehost.cnd.hp.com).  (Displayable)

   11) Critical route from the MgX console node to the
       managed node.  Initial implementations may simplify
       this to the path from NNM to the managed node.  The
       value will be English since this is debugging
       information that does not require localization.  The
       value will be triples of the following form for
       level-3 components:  (Never Displayed)

       		topoID <fully qualified node name>.<ifNumber>

   12) English console message to use if the receiver, which
       is typically the WMI MgX policy, has not localized
       the event.  This var-bind value is transmitted but
       should not be used.  (Never Displayed)

   13) MgX Console Message Severity Type - May be a zero
       length str.  Only used for specific traps in the
       range of 60000208 to 60000299.  Not used in this
       event.

   14) MgX Console Message Category - May be a zero length
       string.  Only used for specific traps in the range of
       60000208 to 60000299.  Not used in this event.
EDESC
#
#
#
EVENT OV_MgX_ECS_NetPathUp .1.3.6.1.4.1.11.2.17.1.0.60000207 "LOGONLY" Warning
FORMAT Network path to Non-MgX Device $6 Up ($5) due to $8 ($7)
EXEC snmpnotify -v 1 -e 1.3.6.1.4.1.11.2.17.1 $10 1.3.6.1.4.1.11.2.17.1.60000207 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$1" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$2" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$3" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$4" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$5" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$6" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$7" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$8" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$9" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$10" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$11" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$12" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$13" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$14"
SDESC
This event is used to as part of the integration of the NNM
and ManageX event systems.  More specifically, this event is
sent from NNM to the ManageX console whenever the MgX device
is inaccessible.

This event is a locale neutral event.  That is, the event
should contain English (that won't be displayed) or locale
neutral information like integers or ipAddresses.  The
receiver of the event localizes the event into the receivers
locale prior to displaying the event.

The data (var-binds) passed with the event is:

    1) Special constant value of "NNM/MgX Integration
       Message".  Always in English.  (Never Displayed)

    2) Application.  Usually, "NNM ECS Application" or
       "Network Node Manager".  This string should always be
       in English.  (Never Displayed)

    3) Application Host's ip address in dotted notation
       (e.g.  15.2.1.3).  (Displayable)

    4) Application Host's fully qualified hostname
       (myhost.cnd.hp.com).  (Displayable)

    5) Managed Host's ip address or ipx address.  The value
       for ipAddr is in dotted notation.  (Displayable)

    6) Managed Host's fully qualified hostname (e.g.
       hishost.cnd.hp.com).  (Displayable)

    7) Connector device's ip or level-2 address.  The value
       for ipAddr is in dotted notation.  (Displayable)

    8) Connector device's fully qualified hostname (e.g.
       herhost.cnd.hp.com).  (Displayable)

    9) MgX Console device's ipAddress.  The value is in
       dotted notation.  (Displayable)

   10) MgX Console device's fully qualified hostname (e.g.
       thehost.cnd.hp.com).  (Displayable)

   11) Critical route from the MgX console node to the
       managed node.  Initial implementations may simplify
       this to the path from NNM to the managed node.  The
       value will be English since this is debugging
       information that does not require localization.  The
       value will be triples of the following form for
       level-3 components:  (Never Displayed)

       		topoID <fully qualified node name>.<ifNumber>

   12) English console message to use if the receiver, which
       is typically the WMI MgX policy, has not localized
       the event.  This var-bind value is transmitted but
       should not be used.  (Never Displayed)

   13) MgX Console Message Severity Type - May be a zero
       length str.  Only used for specific traps in the
       range of 60000208 to 60000299.  Not used in this
       event.

   14) MgX Console Message Category - May be a zero length
       string.  Only used for specific traps in the range of
       60000208 to 60000299.  Not used in this event.
EDESC
#
#
#
EVENT OV_MgX_NNM_Generic .1.3.6.1.4.1.11.2.17.1.0.60000208 "LOGONLY" Warning
FORMAT Generic NNM to MgX message. $12
EXEC echo snmpnotify -v 1 -e 1.3.6.1.4.1.11.2.17.1 $10 1.3.6.1.4.1.11.2.17.1.60000207 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$1" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$2" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$3" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$4" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$5" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$6" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$7" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$8" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$9" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$10" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$11" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$12" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$13" 1.3.6.1.4.1.232.6444.0.1 octetstringascii "$14"
SDESC
This event can be used as part of the integration of the NNM
and ManageX event systems.  More specifically, this event
can be sent to the MgX Console by sending an identical SNMP
trap to the MgX ipAddress.  The string in var-bind 12 will
be displayed in the MgX message reader drill down.  The
other var-binds control other displayable fields as
described below.

The intended purpose of this event is to provide a means to
display meaningful messages in MgX without requiring that
the MgX WMI policy be revised.  Long term, this information
should be communicated in different event IDs and the policy
should be updated and localized for the new events.  Short
term, this event can be used to enhance NNM/MgX event system
integration in-between MgX releases.  This event is not
locale neutral.  It displays in MgX in English.

The data (var-binds) passed with the event is:


    1) Special constant value of "NNM/MgX Integration
       Message".  Always in English.  (Never Displayed)

    2) Application.  Usually, "NNM ECS Application" or
       "Network Node Manager".  This string should always be
       in English.  (Never Displayed)

    3) Application Host's ip address in dotted notation
       (e.g.  15.2.1.3).  (Displayable)

    4) Application Host's fully qualified hostname
       (myhost.cnd.hp.com).  (Displayable)

    5) Managed Host's ip address or ipx address.  The value
       for ipAddr is in dotted notation.  (Displayable)

    6) Managed Host's fully qualified hostname (e.g.
       hishost.cnd.hp.com).  (Displayable)

    7) Connector device's ip or level-2 address.  The value
       for ipAddr is in dotted notation.  (Displayable)

    8) Connector device's fully qualified hostname (e.g.
       herhost.cnd.hp.com).  (Displayable)

    9) MgX Console device's ipAddress.  The value is in
       dotted notation.  (Displayable)

   10) MgX Console device's fully qualified hostname (e.g.
       thehost.cnd.hp.com).  (Displayable)

   11) Critical route from the MgX console node to the
       managed node.  Initial implementations may simplify
       this to the path from NNM to the managed node.  The
       value will be English since this is debugging
       information that does not require localization.  The
       value will be triples of the following form for
       level-3 components:  (Never Displayed)

       		topoID <fully qualified node name>.<ifNumber>

   12) English console message to use if the receiver, which
       is typically the WMI MgX policy, has not localized
       the event.  This var-bind value is transmitted but
       should not be used.  (Never Displayed)

   13) MgX Console Message Severity Type - May be a zero
       length str.  Only used for specific traps in the
       range of 60000208 to 60000299.  Not used in this
       event.

   14) MgX Console Message Category - May be a zero length
       string.  Only used for specific traps in the range of
       60000208 to 60000299.  Not used in this event.

Event specific traps ....200-207 are tightly integrated with
the MgXServerDown ECS correlation.  An issue develops when
NNM and MgX are installed on the same system.  A loop is
created with the action (EXEC) specification.  To eliminate
this problem the correlation suppresses these events.

If this event ID is used with the same action the loop will
still exist but the MgXServerDown correlation will not
suppress the event.  So the loop will cause the event system
to recurse.  Therefore, the action has not been enabled here
to retransmit the event to the MgX console.  If you remove
the echo above in the exec line the loop will potentially be
present.  Do so only if you have the means to ensure that
the loop will not be created.
EDESC
#
#
#
EVENT OV_ECS_AnnotationServerReady .1.3.6.1.4.1.11.2.17.1.0.60000300 "LOGONLY" Warning
FORMAT ECS Annotation Server Ready $4 $6
SDESC
This event is used to synchronize ECS correlations with
annotation servers running in different processes.  It's
frequently the case that PMD and the ECS correlations start
up prior to all of the processes containing annotation
servers when ovstart is executed.  Since the correlation may
need to communicate with the annotation server immediately
at startup, this event gives the correlation notice that
things are ready.

The data (var-binds) passed with the event is:
    1) Unspecified at this time.
    2) Unspecified at this time.
    3) Unspecified at this time.
    4) Application Name (e.g. netmon).
    5) Unspecified at this time.
    6) Application verbose string.

WARNING: Since this event is used to enable synchronization
	 between NNM processes, the strings passed in these
	 var-binds should NEVER be localized.
EDESC
#
#
#
EVENT OV_ECS_CorrelationTest .1.3.6.1.4.1.11.2.17.1.0.60000301 "LOGONLY" Warning
FORMAT Dump ECS $4 correlation state to log file.
SDESC
This event is used to invoke test code in an ECS correlation
and cause it to log state information or send out the
information in a new event.  This is very useful if you need
to discover the state of a running correlation.  For
example, the contents of a table node could be logged at a
customer site in response to this event.

The behavior is correlation dependent.  The data (var-binds)
passed with the event is:
    1) Unspecified at this time.
    2) Unspecified at this time.
    3) Unspecified at this time.
    4) Correlation Name (e.g. MgXServerDown).
    5) Correlation function (e.g. DumpState).

WARNING: Since this event is used for debugging and control,
	 the strings passed in these var-binds should NEVER
	 be localized.
EDESC
#
#
#
EVENT OV_IPV6_AddressUP .1.3.6.1.4.1.11.2.17.1.0.60000350 "LOGONLY" Normal
FORMAT IPv6 Address $7 Up
SDESC
This event is generated when an IPv6 unicast address - which was
   previously not responding to PING (IPv6 ICMP) - is now responding to PING.

   The Source for this event would be the name of the Node which has
   this Address.
   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the Address object
    7) Address (string) that is now UP
EDESC
#
#
#
EVENT OV_IPV6_AddressDOWN .1.3.6.1.4.1.11.2.17.1.0.60000351 "Status Alarms" Critical
FORMAT IPv6 Address $7 Down (with $8 seconds of IPv6 Ping Timeout)
SDESC
This event is generated when an IPv6 Unicast address does not respond
   to PING (IPv6 ICMP) anymore.

   The Source for this event would be the name of the Node which has
   this Address.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the Address object
    7) Address (string) that is now DOWN
    8) PING Timeout value in seconds (integer)
EDESC
#
#
#
EVENT OV_IPV6_LoadPollConf .1.3.6.1.4.1.11.2.17.1.0.60000355 "LOGONLY" Normal
FORMAT Reload IPv6 Polling Agent Configuration File
SDESC
This is event is for HP OpenView internal purpose only.
   Used when user requests to load the new version of the
   IPv6 Polling Agent Configuration File.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
EDESC
#
#
#
EVENT OV_ET_DiscoComplete .1.3.6.1.4.1.11.2.17.1.0.60000356 "LOGONLY" Normal
FORMAT Extended Topology Discovery and Topology Creation Completed
SDESC
This event is for HP OpenView internal use only.
   Used for internal notifications when NNM Extended Topology
   discovery and topology creation is completed.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
EDESC
#
#
#
EVENT OV_IPV6_IfNormal .1.3.6.1.4.1.11.2.17.1.0.60000357 "LOGONLY" Normal
FORMAT IPv6 Status for Interface $7 $10 changed to Overall Status Normal
SDESC
This event is generated when an IPv6 Interface's Overall Status
   changes to Normal.

   Interface Status is compounded based on the corresopnding
   IPv6 Address Status.
   An IPv6 Interface object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the node containing
   this Interface.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the Interface Object
    7) Name of the Interface that has Status Change
    8) Address (string) that caused the Status Change
    9) Old Status (Integer)
   10) Interface descriptor of the interface that has Status Change
EDESC
#
#
#
EVENT OV_IPV6_IfUnknown .1.3.6.1.4.1.11.2.17.1.0.60000358 "LOGONLY" Normal
FORMAT IPv6 Status for the Interface, $7 $10, changed to Overall Status Unknown
SDESC
This event is generated when an IPv6 Interface's Overall Status
   changes to Unknown.

   Interface Status is compounded based on the corresopnding
   IPv6 Address Status.
   An IPv6 Interface object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the node containing
   this Interface.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the Interface Object
    7) Name of the Interface that has Status Change
    8) Address (string) that caused the Status Change
    9) Old Status (Integer)
   10) Interface descriptor of the interface that has Status Change
EDESC
#
#
#
EVENT OV_IPV6_IfCritical .1.3.6.1.4.1.11.2.17.1.0.60000359 "LOGONLY" Critical
FORMAT IPv6 Status for the Interface, $7 $10, changed to Overall Status Critical
SDESC
This event is generated when an IPv6 Interface's Overall Status
   changes to Critical.

   Interface Status is compounded based on the corresopnding
   IPv6 Address Status.
   An IPv6 Interface object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the node containing
   this Interface.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the Interface Object
    7) Name of the Interface that has Status Change
    8) Address (string) that caused the Status Change
    9) Old Status (Integer)
   10) Interface descriptor of the interface that has Status Change
EDESC
#
#
#
EVENT OV_IPV6_IfGlNormal .1.3.6.1.4.1.11.2.17.1.0.60000360 "LOGONLY" Normal
FORMAT IPv6 Status for the Interface, $7 $10, changed to Global Status Normal
SDESC
This event is generated when an IPv6 Interface's Global Status
   changes to Normal.

   Interface Status is compounded based on the corresopnding
   IPv6 Address Status.
   An IPv6 Interface object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the node containing
   this Interface.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the Interface Object
    7) Name of the Interface that has Status Change
    8) Address (string) that caused the Status Change
    9) Old Status (Integer)
   10) Interface descriptor of the interface that has Status Change
EDESC
#
#
#
EVENT OV_IPV6_IfGlUnknown .1.3.6.1.4.1.11.2.17.1.0.60000361 "LOGONLY" Normal
FORMAT IPv6 Status for the Interface, $7 $10, changed to Global Status Unknown
SDESC
This event is generated when an IPv6 Interface's Global Status
   changes to Unknown.

   Interface Status is compounded based on the corresopnding
   IPv6 Address Status.
   An IPv6 Interface object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the node containing
   this Interface.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the Interface Object
    7) Name of the Interface that has Status Change
    8) Address (string) that caused the Status Change
    9) Old Status (Integer)
   10) Interface descriptor of the interface that has Status Change
EDESC
#
#
#
EVENT OV_IPV6_IfGlCritical .1.3.6.1.4.1.11.2.17.1.0.60000362 "LOGONLY" Critical
FORMAT IPv6 Status for the Interface, $7 $10, changed to Global Status Critical
SDESC
This event is generated when an IPv6 Interface's Global Status
   changes to Critical.

   Interface Status is compounded based on the corresopnding
   IPv6 Address Status.
   An IPv6 Interface object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the node containing
   this Interface.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the Interface Object
    7) Name of the Interface that has Status Change
    8) Address (string) that caused the Status Change
    9) Old Status (Integer)
   10) Interface descriptor of the interface that has Status Change
EDESC
#
#
#
EVENT OV_IPV6_IfSlNormal .1.3.6.1.4.1.11.2.17.1.0.60000363 "LOGONLY" Normal
FORMAT IPv6 Status for the Interface, $7 $10, changed to Site-local Status Normal
SDESC
This event is generated when an IPv6 Interface's Site-local Status
   changes to Normal.

   Interface Status is compounded based on the corresopnding
   IPv6 Address Status.
   An IPv6 Interface object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the node containing
   this Interface.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the Interface Object
    7) Name of the Interface that has Status Change
    8) Address (string) that caused the Status Change
    9) Old Status (Integer)
   10) Interface descriptor of the interface that has Status Change
EDESC
#
#
#
EVENT OV_IPV6_IfSlUnknown .1.3.6.1.4.1.11.2.17.1.0.60000364 "LOGONLY" Normal
FORMAT IPv6 Status for the Interface, $7 $10, changed to Site-local Status Unknown
SDESC
This event is generated when an IPv6 Interface's Site-local Status
   changes to Unknown.

   Interface Status is compounded based on the corresopnding
   IPv6 Address Status.
   An IPv6 Interface object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the node containing
   this Interface.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the Interface Object
    7) Name of the Interface that has Status Change
    8) Address (string) that caused the Status Change
    9) Old Status (Integer)
   10) Interface descriptor of the interface that has Status Change
EDESC
#
#
#
EVENT OV_IPV6_IfSlCritical .1.3.6.1.4.1.11.2.17.1.0.60000365 "LOGONLY" Critical
FORMAT IPv6 Status for the Interface, $7 $10, changed to Site-local Status Critical
SDESC
This event is generated when an IPv6 Interface's Site-local Status
   changes to Critical.

   Interface Status is compounded based on the corresopnding
   IPv6 Address Status.
   An IPv6 Interface object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the node containing
   this Interface.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the Interface Object
    7) Name of the Interface that has Status Change
    8) Address (string) that caused the Status Change
    9) Old Status (Integer)
   10) Interface descriptor of the interface that has Status Change
EDESC
#
#
#
EVENT OV_IPV6_NdNormal .1.3.6.1.4.1.11.2.17.1.0.60000366 "LOGONLY" Normal
FORMAT IPv6 Status for the Node changed to Overall Status Normal
SDESC
This event is generated when an IPv6 Nodes's Overall Status changes
   to Normal.

   Node Status is compounded based on the corresopnding Interface IPv6 Status.
   An IPv6 Node object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the Node.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Address (string) that caused the Status Change
    7) Old Status (Integer)
EDESC
#
#
#
EVENT OV_IPV6_NdUnknown .1.3.6.1.4.1.11.2.17.1.0.60000367 "LOGONLY" Normal
FORMAT IPv6 Status for the Node changed to Overall Status Unknown
SDESC
This event is generated when an IPv6 Nodes's Overall Status changes
   to Unknown.

   Node Status is compounded based on the corresopnding Interface IPv6 Status.
   An IPv6 Node object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the Node.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Address (string) that caused the Status Change
    7) Old Status (Integer)
EDESC
#
#
#
EVENT OV_IPV6_NdWarning .1.3.6.1.4.1.11.2.17.1.0.60000368 "LOGONLY" Warning
FORMAT IPv6 Status for the Node changed to Overall Status Warning
SDESC
This event is generated when an IPv6 Nodes's Overall Status changes
   to Warning.

   Node Status is compounded based on the corresopnding Interface IPv6 Status.
   An IPv6 Node object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the Node.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Address (string) that caused the Status Change
    7) Old Status (Integer)
EDESC
#
#
#
EVENT OV_IPV6_NdMinor .1.3.6.1.4.1.11.2.17.1.0.60000369 "LOGONLY" Minor
FORMAT IPv6 Status for the Node changed to Overall Status Minor
SDESC
This event is generated when an IPv6 Nodes's Overall Status changes
   to Minor.

   Node Status is compounded based on the corresopnding Interface IPv6 Status.
   An IPv6 Node object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the Node.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Address (string) that caused the Status Change
    7) Old Status (Integer)
EDESC
#
#
#
EVENT OV_IPV6_NdMajor .1.3.6.1.4.1.11.2.17.1.0.60000370 "LOGONLY" Major
FORMAT IPv6 Status for the Node changed to Overall Status Major
SDESC
This event is generated when an IPv6 Nodes's Overall Status changes
   to Major.

   Node Status is compounded based on the corresopnding Interface IPv6 Status.
   An IPv6 Node object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the Node.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Address (string) that caused the Status Change
    7) Old Status (Integer)
EDESC
#
#
#
EVENT OV_IPV6_NdCritical .1.3.6.1.4.1.11.2.17.1.0.60000371 "LOGONLY" Critical
FORMAT IPv6 Status for the Node changed to Overall Status Critical
SDESC
This event is generated when an IPv6 Nodes's Overall Status changes
   to Critical.

   Node Status is compounded based on the corresopnding Interface IPv6 Status.
   An IPv6 Node object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the Node.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Address (string) that caused the Status Change
    7) Old Status (Integer)
EDESC
#
#
#
EVENT OV_IPV6_NdGlNormal .1.3.6.1.4.1.11.2.17.1.0.60000372 "LOGONLY" Normal
FORMAT IPv6 Status for the Node changed to Global Status Normal
SDESC
This event is generated when an IPv6 Nodes's Global Status changes
   to Normal.

   Node Status is compounded based on the corresopnding Interface IPv6 Status.
   An IPv6 Node object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the Node.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Address (string) that caused the Status Change
    7) Old Status (Integer)
EDESC
#
#
#
EVENT OV_IPV6_NdGlUnknown .1.3.6.1.4.1.11.2.17.1.0.60000373 "LOGONLY" Normal
FORMAT IPv6 Status for the Node changed to Global Status Unknown
SDESC
This event is generated when an IPv6 Nodes's Global Status changes
   to Unknown.

   Node Status is compounded based on the corresopnding Interface IPv6 Status.
   An IPv6 Node object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the Node.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Address (string) that caused the Status Change
    7) Old Status (Integer)
EDESC
#
#
#
EVENT OV_IPV6_NdGlWarning .1.3.6.1.4.1.11.2.17.1.0.60000374 "LOGONLY" Warning
FORMAT IPv6 Status for the Node changed to Global Status Warning
SDESC
This event is generated when an IPv6 Nodes's Global Status changes
   to Warning.

   Node Status is compounded based on the corresopnding Interface IPv6 Status.
   An IPv6 Node object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the Node.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Address (string) that caused the Status Change
    7) Old Status (Integer)
EDESC
#
#
#
EVENT OV_IPV6_NdGlMinor .1.3.6.1.4.1.11.2.17.1.0.60000375 "LOGONLY" Minor
FORMAT IPv6 Status for the Node changed to Global Status Minor
SDESC
This event is generated when an IPv6 Nodes's Global Status changes
   to Minor.

   Node Status is compounded based on the corresopnding Interface IPv6 Status.
   An IPv6 Node object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the Node.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Address (string) that caused the Status Change
    7) Old Status (Integer)
EDESC
#
#
#
EVENT OV_IPV6_NdGlMajor .1.3.6.1.4.1.11.2.17.1.0.60000376 "LOGONLY" Major
FORMAT IPv6 Status for the Node changed to Global Status Major
SDESC
This event is generated when an IPv6 Nodes's Global Status changes
   to Major.

   Node Status is compounded based on the corresopnding Interface IPv6 Status.
   An IPv6 Node object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the Node.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Address (string) that caused the Status Change
    7) Old Status (Integer)
EDESC
#
#
#
EVENT OV_IPV6_NdGlCritical .1.3.6.1.4.1.11.2.17.1.0.60000377 "LOGONLY" Critical
FORMAT IPv6 Status for the Node changed to Global Status Critical
SDESC
This event is generated when an IPv6 Nodes's Global Status changes
   to Critical.

   Node Status is compounded based on the corresopnding Interface IPv6 Status.
   An IPv6 Node object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the Node.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Address (string) that caused the Status Change
    7) Old Status (Integer)
EDESC
#
#
#
EVENT OV_IPV6_NdSlNormal .1.3.6.1.4.1.11.2.17.1.0.60000378 "LOGONLY" Normal
FORMAT IPv6 Status for the Node changed to Site-local Status Normal
SDESC
This event is generated when an IPv6 Nodes's Site-local Status changes
   to Normal.

   Node Status is compounded based on the corresopnding Interface IPv6 Status.
   An IPv6 Node object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the Node.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Address (string) that caused the Status Change
    7) Old Status (Integer)
EDESC
#
#
#
EVENT OV_IPV6_NdSlUnknown .1.3.6.1.4.1.11.2.17.1.0.60000379 "LOGONLY" Normal
FORMAT IPv6 Status for the Node changed to Site-local Status Unknown
SDESC
This event is generated when an IPv6 Nodes's Site-local Status changes
   to Unknown.

   Node Status is compounded based on the corresopnding Interface IPv6 Status.
   An IPv6 Node object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the Node.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Address (string) that caused the Status Change
    7) Old Status (Integer)
EDESC
#
#
#
EVENT OV_IPV6_NdSlWarning .1.3.6.1.4.1.11.2.17.1.0.60000380 "LOGONLY" Warning
FORMAT IPv6 Status for the Node changed to Site-local Status Warning
SDESC
This event is generated when an IPv6 Nodes's Site-local Status changes
   to Warning.

   Node Status is compounded based on the corresopnding Interface IPv6 Status.
   An IPv6 Node object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the Node.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Address (string) that caused the Status Change
    7) Old Status (Integer)
EDESC
#
#
#
EVENT OV_IPV6_NdSlMinor .1.3.6.1.4.1.11.2.17.1.0.60000381 "LOGONLY" Minor
FORMAT IPv6 Status for the Node changed to Site-local Status Minor
SDESC
This event is generated when an IPv6 Nodes's Site-local Status changes
   to Minor.

   Node Status is compounded based on the corresopnding Interface IPv6 Status.
   An IPv6 Node object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the Node.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Address (string) that caused the Status Change
    7) Old Status (Integer)
EDESC
#
#
#
EVENT OV_IPV6_NdSlMajor .1.3.6.1.4.1.11.2.17.1.0.60000382 "LOGONLY" Major
FORMAT IPv6 Status for the Node changed to Site-local Status Major
SDESC
This event is generated when an IPv6 Nodes's Site-local Status changes
   to Major.

   Node Status is compounded based on the corresopnding Interface IPv6 Status.
   An IPv6 Node object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the Node.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Address (string) that caused the Status Change
    7) Old Status (Integer)
EDESC
#
#
#
EVENT OV_IPV6_NdSlCritical .1.3.6.1.4.1.11.2.17.1.0.60000383 "LOGONLY" Critical
FORMAT IPv6 Status for the Node changed to Site-local Status Critical
SDESC
This event is generated when an IPv6 Nodes's Site-local Status changes
   to Critical.

   Node Status is compounded based on the corresopnding Interface IPv6 Status.
   An IPv6 Node object has three Status values:
    1) based on the Addresses with "Global Scope"
    2) based on the Addresses with "Site-local Scope"
    3) Overall (based on addresses of "Global Scope" and "Site-local Scope"

   Note that Link-local Scoped addresses always have "Unknown" Status.

   The Source for this event would be the name of the Node.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) Address (string) that caused the Status Change
    7) Old Status (Integer)
EDESC
#
#
#
EVENT OV_IPV6_PgNormal .1.3.6.1.4.1.11.2.17.1.0.60000384 "LOGONLY" Normal
FORMAT Status for the IPv6 Prefix Group, $7, changed to Normal
SDESC
This event is generated when an IPv6 Prefix Group Status changes
   to Normal.

   Prefix Group Status is compounded based on the contained IPv6 Addresses.

   The Source for this event would be the Prefix Group Name.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the Prefix Group Object
    7) Prefix Address
    8) Address (string) that caused the Status Change
    9) Old Status (Integer)
EDESC
#
#
#
EVENT OV_IPV6_PgUnknown .1.3.6.1.4.1.11.2.17.1.0.60000385 "LOGONLY" Normal
FORMAT Status for the IPv6 Prefix Group, $7, changed to Unknown
SDESC
This event is generated when an IPv6 Prefix Group Status changes
   to Unknown.

   Prefix Group Status is compounded based on the contained IPv6 Addresses.

   The Source for this event would be the Prefix Group Name.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the Prefix Group Object
    7) Prefix Address
    8) Address (string) that caused the Status Change
    9) Old Status (Integer)
EDESC
#
#
#
EVENT OV_IPV6_PgWarning .1.3.6.1.4.1.11.2.17.1.0.60000386 "LOGONLY" Warning
FORMAT Status for the IPv6 Prefix Group, $7, changed to Warning
SDESC
This event is generated when an IPv6 Prefix Group Status changes
   to Warning.

   Prefix Group Status is compounded based on the contained IPv6 Addresses.

   The Source for this event would be the Prefix Group Name.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the Prefix Group Object
    7) Prefix Address
    8) Address (string) that caused the Status Change
    9) Old Status (Integer)
EDESC
#
#
#
EVENT OV_IPV6_PgMinor .1.3.6.1.4.1.11.2.17.1.0.60000387 "LOGONLY" Minor
FORMAT Status for the IPv6 Prefix Group, $7, changed to Minor
SDESC
This event is generated when an IPv6 Prefix Group Status changes
   to Minor.

   Prefix Group Status is compounded based on the contained IPv6 Addresses.

   The Source for this event would be the Prefix Group Name.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the Prefix Group Object
    7) Prefix Address
    8) Address (string) that caused the Status Change
    9) Old Status (Integer)
EDESC
#
#
#
EVENT OV_IPV6_PgMajor .1.3.6.1.4.1.11.2.17.1.0.60000388 "LOGONLY" Major
FORMAT Status for the IPv6 Prefix Group, $7, changed to Major
SDESC
This event is generated when an IPv6 Prefix Group Status changes
   to Major.

   Prefix Group Status is compounded based on the contained IPv6 Addresses.

   The Source for this event would be the Prefix Group Name.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the Prefix Group Object
    7) Prefix Address
    8) Address (string) that caused the Status Change
    9) Old Status (Integer)
EDESC
#
#
#
EVENT OV_IPV6_PgCritical .1.3.6.1.4.1.11.2.17.1.0.60000389 "LOGONLY" Critical
FORMAT Status for the IPv6 Prefix Group, $7, changed to Critical
SDESC
This event is generated when an IPv6 Prefix Group Status changes
   to Critical.

   Prefix Group Status is compounded based on the contained IPv6 Addresses.

   The Source for this event would be the Prefix Group Name.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the Prefix Group Object
    7) Prefix Address
    8) Address (string) that caused the Status Change
    9) Old Status (Integer)
EDESC
#
#
#
EVENT OV_IPV6_AddrUpInt .1.3.6.1.4.1.11.2.17.1.0.60000390 "LOGONLY" Normal
FORMAT IPv6 Address $7 Up
SDESC
This is similar to OV_IPV6_AddressUP.  This event is for
   NNM internal use only.

   This event is generated when an IPv6 unicast address - which was
   previously not responding to PING (IPv6 ICMP) - is now responding to PING.

   The Source for this event would be the name of the Node which has
   this Address.
   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the Address object
    7) Address (string) that is now UP
EDESC
#
#
#
EVENT OV_IPV6_AddrDownInt .1.3.6.1.4.1.11.2.17.1.0.60000391 "LOGONLY" Critical
FORMAT IPv6 Address $7 Down (with $8 seconds of IPv6 Ping Timeout)
SDESC
This is similar to OV_IPV6_AddressDOWN.  This event is for
   NNM internal use only.

   This event is generated when an IPv6 Unicast address does not respond
   to PING (IPv6 ICMP) anymore.

   The Source for this event would be the name of the Node which has
   this Address.

   The data (var-binds) passed with the event is:

    1) The ID of application sending the event
    2) The hostname of the node that caused the event
    3) The HP OpenView object identifier of the node that
       caused the event
    4) The database name, if applicable
    5) A time stamp for when the event occurred
    6) The HP OpenView object identifier of the Address object
    7) Address (string) that is now DOWN
    8) PING Timeout value in seconds (integer)
EDESC
#
#
#
EVENT OV_PD_ROUTE_CHANGE .1.3.6.1.4.1.11.2.17.1.0.60000500 "Problem Diagnosis Alarms" Normal
FORMAT $2
SDESC
This event is generated by PD when the route to a destination has changed.

   The data (var-binds) passed with the event is:

    1)  The message
    2)  The probe.
    3)  The destination.
    4)  The path id of the old path
    5)  The path id of the new path
EDESC
#
#
#
EVENT OV_PD_DESTINATION_REACHABLE .1.3.6.1.4.1.11.2.17.1.0.60000501 "Problem Diagnosis Alarms" Normal
FORMAT $2
SDESC
This event is generated by PD when a destination changes from
being unreachable to reachable.

The data (var-binds) passed with the event is:
    1)  The message
    2)  The probe.
    3)  The destination.
    4)  The state "Reachable"
EDESC
#
#
#
EVENT OV_PD_DESTINATION_UNREACHABLE .1.3.6.1.4.1.11.2.17.1.0.60000502 "Problem Diagnosis Alarms" Major
FORMAT $2
SDESC
This event is generated by PD when a destination changes from being
reachable to unreachable.

The data (var-binds) passed with the event is:

    1)  The message
    2)  The probe.
    3)  The destination.
    4)  The state "Unreachable"
EDESC
#
#
#
EVENT OV_PD_BROWNOUT .1.3.6.1.4.1.11.2.17.1.0.60000503 "Problem Diagnosis Alarms" Major
FORMAT $2
SDESC
This event is generated by PD when a destination can be reached but the packet performance has slowed significantly from the baseline packet performance.

The data (var-binds) passed with the event is:

    1)  The message
    2)  The probe.
    3)  The destination.
    4)  The ip of the hop where the spike in packet times begins
    5)  The DNS of the hop where the spike in packet times begins
    6)  The ip of the hop where the spike in packet times ends
    7)  The DNS of the hop where the spike in packet times ends (i.e. the spike is occurring between 4/5 and 6/7)
EDESC
#
#
#
EVENT OV_PD_HOP_ERROR .1.3.6.1.4.1.11.2.17.1.0.60000504 "Problem Diagnosis Alarms" Warning
FORMAT $2
SDESC
This event is generated by PD when a trace to a destination generates an error
such as a routing loop, network unreachable, etc.

The data (var-binds) passed with the event is:

    1)  The message
    2)  The probe.
    3)  The destination.
    4)  The state "Trace Error"
EDESC
#
#
#
EVENT OV_RAMS_2ENDPTS_APA_2ENDPTS .1.3.6.1.4.1.11.2.17.1.0.60000600 "LOGONLY" Normal
FORMAT $>0
SDESC
This event is generated by the RAMS correlator "OV_RAMS_2ENDPTS_APA_2ENDPTS"
   It takes any RAMS event with two endpoints (currently Adjacency Lost, 
   Route Flap, and Adjaceny Flap) and combines it with any APA event with 
   two endpoints (currently connection down, connection unreachable).  
   This combined event is consumed by the OV_RAMS_22 correlator.

   The data (var-binds) passed with the event is:

    1)  The RAMS event UUID
    2)  The RAMS source address.
    3)  The RAMS destination address.
    4)  The APA event UUID
    5)  The APA source address
    6)  The APA destination address
    7)  The APA source node ET Object ID
    8)  The APA source interface ET Object ID
    9)  The APA destination node ET Object ID
    10)  The APA destination interface ET Object ID
EDESC
#
#
#
EVENT OV_RAMS_2ENDPTS_APA_1ENDPTS .1.3.6.1.4.1.11.2.17.1.0.60000601 "LOGONLY" Normal
FORMAT $>0
SDESC
This event is generated by the RAMS correlator "OV_RAMS_2ENDPTS_APA_1ENDPTS"
   It takes any RAMS event with two endpoints (currently Adjacency Lost, 
   Route Flap, and Adjacency Flap) and combines it with any APA event with 
   one endpoint (currently node down, node unreachable, interface down, and 
   interface unreachable).  This combined event is consumed by the 
   OV_RAMS_21 correlator.

   The data (var-binds) passed with the event is:

    1)  The RAMS event UUID
    2)  The RAMS source address.
    3)  The APA event UUID
    4)  The APA source address
    5)  The APA source node ET Object ID
    6)  The APA source interface ET Object ID
EDESC
#
#
#
EVENT OV_RAMS_1ENDPTS_APA_2ENDPTS .1.3.6.1.4.1.11.2.17.1.0.60000602 "LOGONLY" Normal
FORMAT $>0
SDESC
This event is generated by the RAMS correlator "OV_RAMS_1ENDPTS_APA_2ENDPTS"
   It takes any RAMS event with one endpoint (currently prefix flap, prefix
   origination change, prefix change, and peering change)
   and combines it with any APA event with two endpoints (currently
   connection down, and connection unreachable).
   This combined event is consumed by the OV_RAMS_12 correlator.

   The data (var-binds) passed with the event is:

    1)  The RAMS event UUID
    2)  The RAMS source address.
    3)  The APA event UUID
    4)  The APA source address
    5)  The APA destination address
    6)  The APA source node ET Object ID
    7)  The APA source interface ET Object ID
    8)  The APA destination node ET Object ID
    9)  The APA destination interface ET Object ID
EDESC
#
#
#
EVENT OV_RAMS_1ENDPTS_APA_1ENDPTS .1.3.6.1.4.1.11.2.17.1.0.60000603 "LOGONLY" Normal
FORMAT $>0
SDESC
This event is generated by the RAMS correlator "OV_RAMS_1ENDPTS_APA_1ENDPTS"
   It takes any RAMS event with one endpoint (currently prefix flap, prefix
   origination change, prefix change, and peering change)
   and combines it with any APA event with one endpoint (currently
   node down, node unreachable, interface down, interface unreachable).
   This combined event is consumed by the OV_RAMS_11 correlator.

   The data (var-binds) passed with the event is:

    1)  The RAMS event UUID
    2)  The RAMS source address.
    3)  The APA event UUID
    4)  The APA source address
    5)  The APA source node ET Object ID
    6)  The APA source interface ET Object ID
EDESC
#
#
#
EVENT OV_TOPOLOGY_Status_Change_Notification .1.3.6.1.4.1.11.2.17.1.0.60001101 "LOGONLY" Normal
FORMAT $3 (entity:$6) status change to $7 from $8 (entStat:$9)
SDESC
The status of an NNM extended topology object has changed
The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The name of the object whose status changed
    3)  The HP OpenView Universally Unique Identifier of 
        the object whose status changed
    4)  Not Applicable
    5)  The timestamp when the status change occurred.  
        This is an integer since the epoc (seconds since 1970)
    6)  The Entity Type whose status changed.  This value could be:
	    E_Unknown=0,
	    E_Node=1,
	    E_Interface=2,
	    E_LogicalInterface=3,
	    E_Vlan=4,
	    E_Card=5,
	    E_PSU=6,
	    E_Subnet=7,
	    E_Module=8,
	    E_Mesh=10,
	    E_HSRP=11,
	    E_IfC=12,
	    E_Address=25
    7)  The New Status of the object
	    NoStatus=0,
	    Normal=1,
	    Unknown=2,
	    Warning=3,
	    Marginal=4,
	    Major=5,
	    Critical=6
    8)  The Previous Status of the object
        Values are same as for the New status.
    9)  The v6 Entity Status Type
	    IPv6Overall   =0,
	    IPv6LinkLocal =1,
	    IPv6SiteLocal =2,
	    IPv6Global    =3,
	    IPv4Overall   =4,
	    Overall       =5
EDESC
#
#
#
EVENT OV_TOPOLOGY_Attr_Change_Notification .1.3.6.1.4.1.11.2.17.1.0.60001102 "LOGONLY" Normal
FORMAT $3 Attribute Change
SDESC
This event is generated whenever there is a change in the attributes
of a NNM extended topology object.

The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The name of the object whose attribute changed
    3)  The HP OpenView Universally Unique Identifier of 
        the object whose status changed
    4)  Not Applicable
    5)  The Entity Type whose status changed.  This value could be:
	    E_Unknown=0,
	    E_Node=1,
	    E_Interface=2,
	    E_LogicalInterface=3,
	    E_Vlan=4,
	    E_Card=5,
	    E_PSU=6,
	    E_Subnet=7,
	    E_Module=8,
	    E_Mesh=10,
	    E_HSRP=11,
            E_IfC=12,
	    E_IfCIF=13,
	    E_IfCAsc=14,
	    E_Address=25
    6)  The type of the Attribute that changed
	    HSRP_State=0,
	    HSRP_Certainty=1,
	    IfAdmin_Status=2,
	    IfOper_Status=3,
	    Ping_State=4,
	    Snmp_State=5,
	    HSRP_Priority=6
            IfC_AssocState=7,
            Extensible_Attribute=8,
	    Node_EntityOid=9,
	    IfC_AssocExtraInfo=10,
	    Node_SysName=11,
	    CardOper_Status=12,
	    CardAdmin_Status=13,
	    ManageUnManage_Status=14
    7)  The data type of the Attribute Val that changed.
	    E_Integer=0,
	    E_String=1
    8) The Value of the attribute, based on the value in
	VarBind #6, if the value of VarBind #7 is E_Integer, as follows:
	    HSRP_State : Integer (1-9)
		Initial=1,
		Learn=2,
		Listen=3,
		Speak=4,
		StandBy=5,
		Active=6,
		MiscState=7,
		Unavailable=8,  
		NoResponse=9
	    HSRP_Certainty : Integer (0-100)
		(not used with NNM 7.0)
	    IfAdmin_Status : Integer (1-3)
	    IfOper_Status  : Integer (1-7)
	    Ping_State : Integer (0-4)
		Ping_Responding=0,
		Ping_NotResponding=1,
		Ping_Unreachable=2,
		Ping_AgentDown=3,
		Ping_Disabled=4
	    Snmp_State : Integer (0-4)
		RESPONDING=0,
		NOT_RESPONDING=1,
		UNREACHABLE=2,
		AGENT_DOWN=3,
		Disabled=4
	    HSRP_Priority : Integer (0-255)
		Priority as defined by cHsrpGrpPriority of
		the CISCO-HSRP-MIB MIB
            IfC_AssocState : Integer (0-255)
		Association State as defined by Solution Developers
            ManageUnManage_Status : Integer (0-1)
		Allow=0,
		PollingDisabled=1

    9) The Value of the attribute, based on the value in
       VarBind #6, if the value of VarBind #7 is E_String, as follows:
            Extensible_Attribute : String
		As defined by the Device or Protocol Solution 
    10) The Address Id if entity type is HSRP.  This is the right Interface
        Container's ObjID if this notification is on a state change of 
        Association between two Interface Container Entities, otherwise null.
    11) This is the association type if the notification is on a state 
        change Association between two Interface Container Entities. Default value is 0.
    12) This is the name of the Attribute, if the attribute is an User Defined Extensible Attribute. Default value is null string ie; "".
EDESC
#
#
#
EVENT OV_TOPOLOGY_Life_Cycle_Notification .1.3.6.1.4.1.11.2.17.1.0.60001103 "LOGONLY" Normal
FORMAT $3 added/deleted
SDESC
This event is generated whenever an NNM extended topology Object
   is created or deleted. 
   NOTE : In NNM 7.0, this notification is NOT being generated.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The name of the object which was added or deleted.
    3)  The HP OpenView Universally Unique Identifier of 
        the object whose status changed
    4)  Not Applicable
    5)  The Entity Type which is added/deleted.  This value could be:
	    E_Unknown=0,
	    E_Node=1,
	    E_Interface=2,
	    E_LogicalInterface=3,
	    E_Vlan=4,
	    E_Card=5,
	    E_PSU=6,
	    E_Subnet=7,
	    E_Module=8,
	    E_Mesh=10,
	    E_HSRP=11,
	    E_IfC=12,
	    E_IfCIF=13,
	    E_IfCAsc=14,
	    E_Address=25
    6)  The zone Id in which the Object was created
EDESC
#
#
#
EVENT OV_TOPOLOGY_Topology_State_Notification .1.3.6.1.4.1.11.2.17.1.0.60001104 "LOGONLY" Normal
FORMAT NNM ET Topology State Change : $5 (0==TopologyReady, 1==TopologyReadOnly, 2==DiscoStart)
SDESC
This event is generated when the state of NNM ET Topology changes. 
The notification are generated :
i) When topology transits to read-only mode
ii) When topology is ready to be consumed by topology client ( Discovery completed )
ii) When Discovery starts 

The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  Not applicable
    3)  The database name, if applicable
    4)  Not Applicable
    5)  The Topology  State (TopologyReady/TopologyReadOnly).
	    TOPOLOGY_READY=0,
	    TOPOLOGY_READ_ONLY=1
	    TOPOLOGY_DISCO_START=2
    6)  The discovery start time (only when Topology ready).
    7)  The discovery end time (only when topology ready).
    8)  The previous discovery end time (only when topology ready).
    9)  The discovery Flag (Incremental/Full discovery). 
	    Full_Discovery=1,
	    Incremental_Discovery=2
EDESC
#
#
#
EVENT OV_Syslog_LinkDown .1.3.6.1.4.1.11.2.17.1.0.60001200 "Status Alarms" Minor
FORMAT LinkDown for interface $3  (reported via syslog)
SDESC
This event is generated whenever a %LINK-3-UPDOWN status DOWN is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The name of the interface
EDESC
#
#
#
EVENT OV_Syslog_LinkUp .1.3.6.1.4.1.11.2.17.1.0.60001201 "LOGONLY" Normal
FORMAT LinkUp for interface $3  (reported via syslog)
SDESC
This event is generated whenever a %LINK-3-UPDOWN status UP is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The name of the interface
EDESC
#
#
#
EVENT OV_Syslog_LineProtoDown .1.3.6.1.4.1.11.2.17.1.0.60001202 "LOGONLY" Warning
FORMAT Line Protocol DOWN for interface $3 (reported via syslog)
SDESC
This event is generated whenever a %LINEPROTO-5-UPDOWN status DOWN is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The name of the interface
EDESC
#
#
#
EVENT OV_Syslog_LineProtoUp .1.3.6.1.4.1.11.2.17.1.0.60001203 "LOGONLY" Normal
FORMAT Line Protocol UP for interface $3 (reported via syslog)
SDESC
This event is generated whenever a %LINEPROTO-5-UPDOWN status UP is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The name of the interface
EDESC
#
#
#
EVENT OV_Syslog_Reload .1.3.6.1.4.1.11.2.17.1.0.60001204 "LOGONLY" Normal
FORMAT $3  (reported via syslog)
SDESC
This event is generated whenever a %SYS-5-RELOAD syslog message is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The reload message
EDESC
#
#
#
EVENT OV_Syslog_Restart .1.3.6.1.4.1.11.2.17.1.0.60001205 "Configuration Alarms" Normal
FORMAT $3  (reported via syslog)
SDESC
This event is generated whenever a %SYS-5-RESTART syslog message is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The restart message
EDESC
#
#
#
EVENT OV_Syslog_FrameDLCI_Active .1.3.6.1.4.1.11.2.17.1.0.60001210 "Status Alarms" Normal
FORMAT Frame Relay DLCI $4 ACTIVE for interface $3 (reported via syslog)
SDESC
This event is generated whenever a %FR-5-DLCICHANGE status ACTIVE is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The name of the interface
    4)  The Frame Relay DLCI id
EDESC
#
#
#
EVENT OV_Syslog_FrameDLCI_Inactive .1.3.6.1.4.1.11.2.17.1.0.60001211 "Status Alarms" Normal
FORMAT Frame Relay DLCI $4 INACTIVE for interface $3 (reported via syslog)
SDESC
This event is generated whenever a %FR-5-DLCICHANGE status INACTIVE is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The name of the interface
    4)  The Frame Relay DLCI id
EDESC
#
#
#
EVENT OV_Syslog_FrameDLCI_Invalid .1.3.6.1.4.1.11.2.17.1.0.60001212 "Status Alarms" Normal
FORMAT Frame Relay DLCI $4 INVALID for interface $3 (reported via syslog)
SDESC
This event is generated whenever a %FR-5-DLCICHANGE status INVALID is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The name of the interface
    4)  The Frame Relay DLCI id
EDESC
#
#
#
EVENT OV_Syslog_OSPF_Neighbor_Up .1.3.6.1.4.1.11.2.17.1.0.60001220 "LOGONLY" Normal
FORMAT OSPF Neighbor $4 on interface $3 changed to FULL  (reported via syslog)
SDESC
This event is generated whenever a %OSPF-5-ADJCHG status FULL is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The name of the interface
    4)  The OSPF Neighbor IP address
EDESC
#
#
#
EVENT OV_Syslog_OSPF_Neighbor_Down .1.3.6.1.4.1.11.2.17.1.0.60001221 "Configuration Alarms" Minor
FORMAT OSPF Neighbor $4 on interface $3 changed to DOWN  (reported via syslog)
SDESC
This event is generated whenever a %OSPF-5-ADJCHG status DOWN is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The name of the interface
    4)  The OSPF Neighbor IP address
EDESC
#
#
#
EVENT OV_Syslog_OSPF_Default_Message .1.3.6.1.4.1.11.2.17.1.0.60001229 "LOGONLY" Normal
FORMAT $3
SDESC
This is the event used when no other OSPF event is configured for an
OSPF syslog message.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The syslog message
EDESC
#
#
#
EVENT OV_Syslog_HSRP_State_Active .1.3.6.1.4.1.11.2.17.1.0.60001230 "Status Alarms" Normal
FORMAT HSRP State Change from $4 to ACTIVE  (reported via syslog)
SDESC
This event is generated whenever a %STANDBY-6-STATECHANGE to state ACTIVE is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The name of the interface
    4)  The old HSRP state
    5)  The new HSRP state
    6)  The HSRP group
EDESC
#
#
#
EVENT OV_Syslog_HSRP_State_Standby .1.3.6.1.4.1.11.2.17.1.0.60001231 "Status Alarms" Normal
FORMAT HSRP State Change from $4 to STANDBY  (reported via syslog)
SDESC
This event is generated whenever a %STANDBY-6-STATECHANGE to state STANDBY is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The name of the interface
    4)  The old HSRP state
    5)  The new HSRP state
    6)  The HSRP group
EDESC
#
#
#
EVENT OV_Syslog_HSRP_State_Speak .1.3.6.1.4.1.11.2.17.1.0.60001232 "LOGONLY" Normal
FORMAT HSRP State Change from $4 to SPEAK  (reported via syslog)
SDESC
This event is generated whenever a %STANDBY-6-STATECHANGE to state SPEAK is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The name of the interface
    4)  The old HSRP state
    5)  The new HSRP state
    6)  The HSRP group
EDESC
#
#
#
EVENT OV_Syslog_HSRP_State_Init .1.3.6.1.4.1.11.2.17.1.0.60001233 "LOGONLY" Normal
FORMAT HSRP State Change from $4 to INIT  (reported via syslog)
SDESC
This event is generated whenever a %STANDBY-6-STATECHANGE to state INIT is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The name of the interface
    4)  The old HSRP state
    5)  The new HSRP state
    6)  The HSRP group
EDESC
#
#
#
EVENT OV_Syslog_HSRP_Duplicate_Address .1.3.6.1.4.1.11.2.17.1.0.60001234 "Status Alarms" Minor
FORMAT HSRP Duplicate IP Address $4 detected on $3  (reported via syslog)
SDESC
This event is generated whenever a %STANDBY-3-DUPADDR message is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The name of the interface
    4)  The duplicate IP address
EDESC
#
#
#
EVENT OV_Syslog_HSRP_Default_Message .1.3.6.1.4.1.11.2.17.1.0.60001239 "LOGONLY" Normal
FORMAT $3
SDESC
This is the event used when no other OSPF event is configured for an
OSPF syslog message.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The syslog message
EDESC
#
#
#
EVENT OV_Syslog_PAGP_JoinedBridgePort .1.3.6.1.4.1.11.2.17.1.0.60001240 "Configuration Alarms" Normal
FORMAT Aggregate Port: Board:$3, Port:$4 joined bridge port $5/$6  (reported via syslog)
SDESC
This event is generated whenever a %PAGP-5-PORTTOSPT message is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The physical board(module) number
    4)  The physical port number
    5)  The logical board number
    6)  The logical port range
EDESC
#
#
#
EVENT OV_Syslog_PAGP_LeftBridgePort .1.3.6.1.4.1.11.2.17.1.0.60001241 "Configuration Alarms" Normal
FORMAT Aggregate Port: Board:$3, Port:$4 left bridge port $5/$6  (reported via syslog)
SDESC
This event is generated whenever a %PAGP-5-PORTFROMSPT message is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The physical board(module) number
    4)  The physical port number
    5)  The logical board number
    6)  The logical port range
EDESC
#
#
#
EVENT OV_Syslog_PAGP_Default_Message .1.3.6.1.4.1.11.2.17.1.0.60001249 "LOGONLY" Normal
FORMAT $3
SDESC
This is the event used when no other PAGP event is configured for an
PAGP syslog message.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The syslog message
EDESC
#
#
#
EVENT OV_Syslog_Trunk_Port_Fail .1.3.6.1.4.1.11.2.17.1.0.60001250 "Status Alarms" Warning
FORMAT Trunking: Board:$3, Port range:$4 failed to become trunk  (reported via syslog)
SDESC
This event is generated whenever a %DTP-3-TRUNKPORTFAIL message is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The board(module) number
    4)  The port range
EDESC
#
#
#
EVENT OV_Syslog_Trunk_NonTrunkPort_Fail .1.3.6.1.4.1.11.2.17.1.0.60001251 "Status Alarms" Warning
FORMAT Trunking: Board:$3, Port range:$4 failed to become non-trunk  (reported via syslog)
SDESC
This event is generated whenever a %DTP-3-NONTRUNKPORTFAIL message is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The board(module) number
    4)  The port range
EDESC
#
#
#
EVENT OV_Syslog_Trunk_Port_On .1.3.6.1.4.1.11.2.17.1.0.60001252 "LOGONLY" Normal
FORMAT Trunking: Board:$3, Port range:$4 has become trunk  (reported via syslog)
SDESC
This event is generated whenever a %DTP-5-TRUNKPORTON message is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The board(module) number
    4)  The port range
EDESC
#
#
#
EVENT OV_Syslog_Trunk_Port_Change .1.3.6.1.4.1.11.2.17.1.0.60001253 "LOGONLY" Normal
FORMAT Trunking: Board:$3, Port range:$4 has changed from $5 trunk to $6 trunk  (reported via syslog)
SDESC
This event is generated whenever a %DTP-5-TRUNKPORTCHG message is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The board(module) number
    4)  The port range
    5)  The old encapsulation type
    6)  The new encapsulation type
EDESC
#
#
#
EVENT OV_Syslog_Trunk_Default_Message .1.3.6.1.4.1.11.2.17.1.0.60001259 "LOGONLY" Normal
FORMAT $3
SDESC
This is the event used when no other Trunking protocol event is configured for a
Trunking syslog message.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The syslog message
EDESC
#
#
#
EVENT OV_Syslog_Board_Down .1.3.6.1.4.1.11.2.17.1.0.60001260 "Status Alarms" Minor
FORMAT Board $3 is DOWN  (reported via syslog)
SDESC
This event is generated whenever a %SNMP-5-MODULETRAP DOWN message is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The board(module) number
    4)  The board status
EDESC
#
#
#
EVENT OV_Syslog_Board_Up .1.3.6.1.4.1.11.2.17.1.0.60001261 "Status Alarms" Normal
FORMAT Board $3 is UP  (reported via syslog)
SDESC
This event is generated whenever a %SNMP-5-MODULETRAP UP message is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The board(module) number
    4)  The board status
EDESC
#
#
#
EVENT OV_Syslog_Board_Failure .1.3.6.1.4.1.11.2.17.1.0.60001262 "Status Alarms" Minor
FORMAT Board $3 FAILED: $4  (reported via syslog)
SDESC
This event is generated whenever any of the following syslog messages are logged
to the syslog file:

 %SYS-5-MOD_NORESPONSE
 %SYS-3-MOD_FAIL
 %SYS-3-MOD_FAILREASON

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The board(module) number
    4)  Board failure information
EDESC
#
#
#
EVENT OV_Syslog_Board_Config_Mismatch .1.3.6.1.4.1.11.2.17.1.0.60001263 "Configuration Alarms" Minor
FORMAT Board: $3  (reported via syslog)
SDESC
This event is generated whenever any of the following syslog messages are logged
to the syslog file:

 %SYS-3-MOD_CFGMISMATCH1
 %SYS-3-MOD_CFGMISMATCH2
 %SYS-3-MOD_CFGMISMATCH3
 %SYS-3-MOD_CFGMISMATCH4

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The syslog message
EDESC
#
#
#
EVENT OV_Syslog_Board_Online .1.3.6.1.4.1.11.2.17.1.0.60001264 "LOGONLY" Normal
FORMAT Board $3 is ONLINE  (reported via syslog)
SDESC
This event is generated whenever a %SYS-5-MOD_OK message is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The board(module) number
EDESC
#
#
#
EVENT OV_Syslog_Board_Removed .1.3.6.1.4.1.11.2.17.1.0.60001265 "Configuration Alarms" Warning
FORMAT Board $3 has been removed  (reported via syslog)
SDESC
This event is generated whenever a %SYS-5-MOD_REMOVE message is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The board(module) number
EDESC
#
#
#
EVENT OV_Syslog_Board_Inserted .1.3.6.1.4.1.11.2.17.1.0.60001266 "Configuration Alarms" Warning
FORMAT Board $3 has been inserted  (reported via syslog)
SDESC
This event is generated whenever a %SYS-5-MOD_INSERT message is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The board(module) number
EDESC
#
#
#
EVENT OV_Syslog_Board_Reset .1.3.6.1.4.1.11.2.17.1.0.60001267 "Status Alarms" Warning
FORMAT Board $3 has been RESET [from $4]  (reported via syslog)
SDESC
This event is generated whenever a %SYS-5-MOD_RESET message is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The board(module) number
    4)  Source of Board Reset (Console or IP address)
EDESC
#
#
#
EVENT OV_Syslog_Board_Default_Message .1.3.6.1.4.1.11.2.17.1.0.60001269 "LOGONLY" Normal
FORMAT $3
SDESC
This is the event used when no other Cisco Board event is configured for a
Cisco Module syslog message.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The syslog message
EDESC
#
#
#
EVENT OV_Syslog_Spantree_Default_Message .1.3.6.1.4.1.11.2.17.1.0.60001279 "LOGONLY" Normal
FORMAT $3
SDESC
This is the event used when no other Cisco Spanning Tree Protocol event is configured for a
Cisco Spanning Tree Protocol syslog message.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The syslog message
EDESC
#
#
#
EVENT OV_Syslog_BGP_Default_Message .1.3.6.1.4.1.11.2.17.1.0.60001289 "LOGONLY" Normal
FORMAT $3
SDESC
This is the event used when no other Cisco BGP event is configured for a
Cisco BGP syslog message.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The syslog message
EDESC
#
#
#
EVENT OV_Syslog_CDP_Default_Message .1.3.6.1.4.1.11.2.17.1.0.60001299 "LOGONLY" Normal
FORMAT $3
SDESC
This is the event used when no other Cisco CDP event is configured for a
Cisco CDP syslog message.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the node that caused the event
    3)  The syslog message
EDESC
#
#
#
EVENT OV_Syslog_Stackwise_Master_Elected .1.3.6.1.4.1.11.2.17.1.0.60001310 "Configuration Alarms" Warning
FORMAT Stack $2: switch $3 has been elected as the MASTER of the stack (reported via syslog)
SDESC
This event is generated whenever a %STACKMGR-6-MASTER_ELECTED message is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the stackwise node that caused the event
    3)  The switch (member or board) number
EDESC
#
#
#
EVENT OV_Syslog_Stackwise_Stackport_Down .1.3.6.1.4.1.11.2.17.1.0.60001313 "Status Alarms" Major
FORMAT Stack $2: stack port $4 on switch $3 has changed to state DOWN (reported via syslog)
SDESC
This event is generated whenever a %STACKMGR-6-STACK_LINK_CHANGE down syslog message is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the stackwise node that caused the event
    3)  The switch (member or board) name
    4)  The Stackport ID
EDESC
#
#
#
EVENT OV_Syslog_Stackwise_Stackport_Up .1.3.6.1.4.1.11.2.17.1.0.60001314 "LOGONLY" Normal
FORMAT Stack $2: stack port $4 on switch $3 has changed to state UP (reported via syslog)
SDESC
This event is generated whenever a %STACKMGR-6-STACK_LINK_CHANGE down syslog message is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the stackwise node that caused the event
    3)  The switch (member or board) name
    4)  The Stackport ID
EDESC
#
#
#
EVENT OV_Syslog_Stackwise_Master_Ready .1.3.6.1.4.1.11.2.17.1.0.60001315 "Configuration Alarms" Warning
FORMAT Stack $2: Master switch $3 is ready (reported via syslog)
SDESC
This event is generated whenever a %STACKMGR-6-MASTER_READY message is logged to the
syslog file.

   The data (var-binds) passed with the event is
    1)  The ID of application sending the event
    2)  The hostname of the stackwise node that caused the event
    3)  The switch (member or board) number
EDESC
#
#
#
EVENT OV_PAForce_If_Group_Status_Polling .1.3.6.1.4.1.11.2.17.1.0.60001408 "LOGONLY" Normal
FORMAT netmon HSRP group status poll.  Group: $5, polled interfaces: $6
SDESC
This event is generated by HP OpenView when
a "interface group status poll" operation for some or all the interfaces in an 
HSRP group (force polling operation) has been initiated by
the Correlation Composer. 

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the management station from which the event originated
    3) HP OpenView object identifier of the management station
    4) The database name, if applicable.
    5) The name of the HSRP group
    6) A comma separate list of interface OIDs to be status polled 
      

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT OV_HSRP_No_Active .1.3.6.1.4.1.11.2.17.1.0.60001409 "Status Alarms" Critical
FORMAT The RRP router group $2 is completely inoperational.  No active interfaces for this group.
SDESC
This event is generated by NNM when it thinks that the Redundant Routing
   Protocol group has no Active interface.  This alarm can be generated for
   various protocols including HSRP and VRRP.

   The data (var-binds) passed with the event is:

    1)  The ID of application sending the event
    2)  The virtual IP address of the HSRP group that caused the event
        (in string form)
    3)  NNM extended topology objectID of the HSRP group
    4)  Route distinguisher of the virtual IP address associated with this
        HSRP Group
    5)  The active interface IP address
    6)  The active interface NNM extended topology object identifier
    7)  The previous active interface IP address
    8)  The previous active interface NNM extended topology object identifier
    9)  The standby interface IP address
   10)  The standby interface NNM extended topology object identifier
   11)  The previous standby interface IP address
   12)  The previous standby interface NNM extended topology object identifier
   13)  A list of IP Address of interfaces in the HSRP Group which are not in
        active or standby state.
   14)  The NNM extended topology object identifiers for the interfaces in var bind 11.
   15)  The State for the interfaces in var bind 11.
   ----------------------------------------------------------------------------
   16)  IP Address List of all the participating interfaces in HSRP group. 
   17)  Management Address List of all the participating interfaces in HSRP group. 
   18)  IfIndex List of all the participating interfaces in HSRP group. 
   19)  Reserved for future use.
   ----------------------------------------------------------------------------
   20)  Redundant Router Protocol (for example, VRRP)
   21)  Redundant Router Protocol Version (for example, Nortel Rapid City)
   22)  Protocol specific state name for generic state Initial if applicable
   23)  Protocol specific state name for generic state Learn if applicable
   24)  Protocol specific state name for generic state Listen if applicable
   25)  Protocol specific state name for generic state Speak if applicable
   26)  Protocol specific state name for generic state Standby if applicable
   27)  Protocol specific state name for generic state Active if applicable
   28)  Protocol specific state name for generic state (future) if applicable
   29)  Protocol specific state name for generic state (future) if applicable
   ----------------------------------------------------------------------------
   30)  Protocol specific information if applicable
   31)  Protocol specific information if applicable
EDESC
#
#
#
EVENT OV_HSRP_Multiple_Active .1.3.6.1.4.1.11.2.17.1.0.60001410 "Status Alarms" Critical
FORMAT The RRP router group $2 is in an abnormal condition.  There are multiple Active interfaces.
SDESC
This event is generated by NNM when it thinks that the Redundant Routing
   Protocol group has multiple Active interfaces.  This alarm can be generated
   for various protocols including HSRP and VRRP.

   The data (var-binds) passed with the event is:

    1)  The ID of application sending the event
    2)  The virtual IP address of the HSRP group that caused the event
        (in string form)
    3)  NNM extended topology objectID of the HSRP group
    4)  Route distinguisher of the virtual IP address associated with this
        HSRP Group
    5)  The active interface IP address
    6)  The active interface NNM extended topology object identifier
    7)  The previous active interface IP address
    8)  The previous active interface NNM extended topology object identifier
    9)  The standby interface IP address
   10)  The standby interface NNM extended topology object identifier
   11)  The previous standby interface IP address
   12)  The previous standby interface NNM extended topology object identifier
   13)  A list of IP Address of interfaces in the HSRP Group which are not in
        active or standby state.
   14)  The NNM extended topology object identifiers for the interfaces in var bind 11.
   15)  The State for the interfaces in var bind 11.
   ----------------------------------------------------------------------------
   16)  IP Address List of all the participating interfaces in HSRP group.
   17)  Management Address List of all the participating interfaces in HSRP group.
   18)  IfIndex List of all the participating interfaces in HSRP group.
   19)  Reserved for future use.
   ----------------------------------------------------------------------------
   20)  Redundant Router Protocol (for example, VRRP)
   21)  Redundant Router Protocol Version (for example, Nortel Rapid City)
   22)  Protocol specific state name for generic state Initial if applicable
   23)  Protocol specific state name for generic state Learn if applicable
   24)  Protocol specific state name for generic state Listen if applicable
   25)  Protocol specific state name for generic state Speak if applicable
   26)  Protocol specific state name for generic state Standby if applicable
   27)  Protocol specific state name for generic state Active if applicable
   28)  Protocol specific state name for generic state (future) if applicable
   29)  Protocol specific state name for generic state (future) if applicable
   ----------------------------------------------------------------------------
   30)  Protocol specific information if applicable
   31)  Protocol specific information if applicable
EDESC
#
#
#
EVENT OV_HSRP_No_Standby .1.3.6.1.4.1.11.2.17.1.0.60001411 "Status Alarms" Warning
FORMAT The RRP router group $2 has no Standby.  Active: $5 Others: $13 Others States: $15.
SDESC
This event is generated by NNM when it thinks that the Redundant Routing
   Protocol group has no Standby interface.  This alarm can be generated for
   various protocols including HSRP and VRRP.

   The data (var-binds) passed with the event is:

    1)  The ID of application sending the event
    2)  The virtual IP address of the HSRP group that caused the event
        (in string form)
    3)  NNM extended topology objectID of the HSRP group
    4)  Route distinguisher of the virtual IP address associated with this
        HSRP Group
    5)  The active interface IP address
    6)  The active interface NNM extended topology object identifier
    7)  The previous active interface IP address
    8)  The previous active interface NNM extended topology object identifier
    9)  The standby interface IP address
   10)  The standby interface NNM extended topology object identifier
   11)  The previous standby interface IP address
   12)  The previous standby interface NNM extended topology object identifier
   13)  A list of IP Address of interfaces in the HSRP Group which are not in
        active or standby state.
   14)  The NNM extended topology object identifiers for the interfaces in var bind 11.
   15)  The State for the interfaces in var bind 11.
   ----------------------------------------------------------------------------
   16)  IP Address List of all the participating interfaces in HSRP group. 
   17)  Management Address List of all the participating interfaces in HSRP group. 
   18)  IfIndex List of all the participating interfaces in HSRP group. 
   19)  Reserved for future use.
   ----------------------------------------------------------------------------
   20)  Redundant Router Protocol (for example, VRRP)
   21)  Redundant Router Protocol Version (for example, Nortel Rapid City)
   22)  Protocol specific state name for generic state Initial if applicable
   23)  Protocol specific state name for generic state Learn if applicable
   24)  Protocol specific state name for generic state Listen if applicable
   25)  Protocol specific state name for generic state Speak if applicable
   26)  Protocol specific state name for generic state Standby if applicable
   27)  Protocol specific state name for generic state Active if applicable
   28)  Protocol specific state name for generic state (future) if applicable
   29)  Protocol specific state name for generic state (future) if applicable
   ----------------------------------------------------------------------------
   30)  Protocol specific information if applicable
   31)  Protocol specific information if applicable
EDESC
#
#
#
EVENT OV_HSRP_Degraded .1.3.6.1.4.1.11.2.17.1.0.60001412 "Status Alarms" Warning
FORMAT The RRP router group $2 has degraded.  Active: $5 Standby:$9 Others: $13 Others States: $15.
SDESC
This event is generated by NNM when it thinks that the Redundant Routing
   Protocol group has an interface which is not function properly.  There is
   still an Active and Standby interface.  This alarm can be generated for
   various protocols including HSRP and VRRP.

   The data (var-binds) passed with the event is:

    1)  The ID of application sending the event
    2)  The virtual IP address of the HSRP group that caused the event
        (in string form)
    3)  NNM extended topology objectID of the HSRP group
    4)  Route distinguisher of the virtual IP address associated with this
        HSRP Group
    5)  The active interface IP address
    6)  The active interface NNM extended topology object identifier
    7)  The previous active interface IP address
    8)  The previous active interface NNM extended topology object identifier
    9)  The standby interface IP address
   10)  The standby interface NNM extended topology object identifier
   11)  The previous standby interface IP address
   12)  The previous standby interface NNM extended topology object identifier
   13)  A list of IP Address of interfaces in the HSRP Group which are not in
        active or standby state.
   14)  The NNM extended topology object identifiers for the interfaces in var bind 11.
   15)  The State for the interfaces in var bind 11.
   ----------------------------------------------------------------------------
   16)  IP Address List of all the participating interfaces in HSRP group. 
   17)  Management Address List of all the participating interfaces in HSRP group. 
   18)  IfIndex List of all the participating interfaces in HSRP group. 
   19)  Reserved for future use.
   ----------------------------------------------------------------------------
   20)  Redundant Router Protocol (for example, VRRP)
   21)  Redundant Router Protocol Version (for example, Nortel Rapid City)
   22)  Protocol specific state name for generic state Initial if applicable
   23)  Protocol specific state name for generic state Learn if applicable
   24)  Protocol specific state name for generic state Listen if applicable
   25)  Protocol specific state name for generic state Speak if applicable
   26)  Protocol specific state name for generic state Standby if applicable
   27)  Protocol specific state name for generic state Active if applicable
   28)  Protocol specific state name for generic state (future) if applicable
   29)  Protocol specific state name for generic state (future) if applicable
   ----------------------------------------------------------------------------
   30)  Protocol specific information if applicable
   31)  Protocol specific information if applicable
EDESC
#
#
#
EVENT OV_HSRP_FailOver .1.3.6.1.4.1.11.2.17.1.0.60001413 "Status Alarms" Critical
FORMAT The RRP router group $2 has changed its Active interface.  Active: $5 Previous Active: $7 Standby:$9 Previous Standby: $11.
SDESC
This event is generated by NNM when it thinks that the Redundant Routing
   Protocol group has changed it Active interface.  This alarm can be generated
   for various protocols including HSRP and VRRP.

   The data (var-binds) passed with the event is:

    1)  The ID of application sending the event
    2)  The virtual IP address of the HSRP group that caused the event
        (in string form)
    3)  NNM extended topology objectID of the HSRP group
    4)  Route distinguisher of the virtual IP address associated with this
        HSRP Group
    5)  The active interface IP address
    6)  The active interface NNM extended topology object identifier
    7)  The previous active interface IP address
    8)  The previous active interface NNM extended topology object identifier
    9)  The standby interface IP address
   10)  The standby interface NNM extended topology object identifier
   11)  The previous standby interface IP address
   12)  The previous standby interface NNM extended topology object identifier
   13)  A list of IP Address of interfaces in the HSRP Group which are not in
        active or standby state.
   14)  The NNM extended topology object identifiers for the interfaces in var bind 11.
   15)  The State for the interfaces in var bind 11.
   ----------------------------------------------------------------------------
   16)  IP Address List of all the participating interfaces in HSRP group. 
   17)  Management Address List of all the participating interfaces in HSRP group. 
   18)  IfIndex List of all the participating interfaces in HSRP group. 
   19)  Reserved for future use.
   ----------------------------------------------------------------------------
   20)  Redundant Router Protocol (for example, VRRP)
   21)  Redundant Router Protocol Version (for example, Nortel Rapid City)
   22)  Protocol specific state name for generic state Initial if applicable
   23)  Protocol specific state name for generic state Learn if applicable
   24)  Protocol specific state name for generic state Listen if applicable
   25)  Protocol specific state name for generic state Speak if applicable
   26)  Protocol specific state name for generic state Standby if applicable
   27)  Protocol specific state name for generic state Active if applicable
   28)  Protocol specific state name for generic state (future) if applicable
   29)  Protocol specific state name for generic state (future) if applicable
   ----------------------------------------------------------------------------
   30)  Protocol specific information if applicable
   31)  Protocol specific information if applicable
EDESC
#
#
#
EVENT OV_HSRP_Standby_Changed .1.3.6.1.4.1.11.2.17.1.0.60001414 "Status Alarms" Warning
FORMAT The RRP router group $2 has changed its Standby interface.  Active: $5 Standby:$9 Previous Standby: $11.
SDESC
This event is generated by NNM when it thinks that the Redundant Routing
   Protocol group has changed its Standby interface.  This alarm can be
   generated for various protocols including HSRP and VRRP.

   The data (var-binds) passed with the event is:

    1)  The ID of application sending the event
    2)  The virtual IP address of the HSRP group that caused the event
        (in string form)
    3)  NNM extended topology objectID of the HSRP group
    4)  Route distinguisher of the virtual IP address associated with this
        HSRP Group
    5)  The active interface IP address
    6)  The active interface NNM extended topology object identifier
    7)  The previous active interface IP address
    8)  The previous active interface NNM extended topology object identifier
    9)  The standby interface IP address
   10)  The standby interface NNM extended topology object identifier
   11)  The previous standby interface IP address
   12)  The previous standby interface NNM extended topology object identifier
   13)  A list of IP Address of interfaces in the HSRP Group which are not in
        active or standby state.
   14)  The NNM extended topology object identifiers for the interfaces in var bind 11.
   15)  The State for the interfaces in var bind 11.
   ----------------------------------------------------------------------------
   16)  IP Address List of all the participating interfaces in HSRP group. 
   17)  Management Address List of all the participating interfaces in HSRP group. 
   18)  IfIndex List of all the participating interfaces in HSRP group. 
   19)  Reserved for future use.
   ----------------------------------------------------------------------------
   20)  Redundant Router Protocol (for example, VRRP)
   21)  Redundant Router Protocol Version (for example, Nortel Rapid City)
   22)  Protocol specific state name for generic state Initial if applicable
   23)  Protocol specific state name for generic state Learn if applicable
   24)  Protocol specific state name for generic state Listen if applicable
   25)  Protocol specific state name for generic state Speak if applicable
   26)  Protocol specific state name for generic state Standby if applicable
   27)  Protocol specific state name for generic state Active if applicable
   28)  Protocol specific state name for generic state (future) if applicable
   29)  Protocol specific state name for generic state (future) if applicable
   ----------------------------------------------------------------------------
   30)  Protocol specific information if applicable
   31)  Protocol specific information if applicable
EDESC
#
#
#
EVENT OV_HSRP_Normal .1.3.6.1.4.1.11.2.17.1.0.60001415 "LOGONLY" Normal
FORMAT The RRP router group $2 is normal.  Active: $5 Standby:$9.
SDESC
This event is generated by NNM when at least one interface is in the Active
   state, one interface is in the Standby state and there are zero or more
   interfaces in the Listen state as reported by the protocol specific MIB.
   This alarm can be generated for various protocols including HSRP and VRRP.

   The data (var-binds) passed with the event is:

    1)  The ID of application sending the event
    2)  The virtual IP address of the HSRP group that caused the event
        (in string form)
    3)  NNM extended topology objectID of the HSRP group
    4)  Route distinguisher of the virtual IP address associated with this
        HSRP Group
    5)  The active interface IP address
    6)  The active interface NNM extended topology object identifier
    7)  The previous active interface IP address
    8)  The previous active interface NNM extended topology object identifier
    9)  The standby interface IP address
   10)  The standby interface NNM extended topology object identifier
   11)  The previous standby interface IP address
   12)  The previous standby interface NNM extended topology object identifier
   13)  A list of IP Address of interfaces in the HSRP Group which are not in
        active or standby state.
   14)  The NNM extended topology object identifiers for the interfaces in var bind 11.
   15)  The State for the interfaces in var bind 11.
   ----------------------------------------------------------------------------
   16)  IP Address List of all the participating interfaces in HSRP group. 
   17)  Management Address List of all the participating interfaces in HSRP group. 
   18)  IfIndex List of all the participating interfaces in HSRP group. 
   19)  Reserved for future use.
   ----------------------------------------------------------------------------
   20)  Redundant Router Protocol (for example, VRRP)
   21)  Redundant Router Protocol Version (for example, Nortel Rapid City)
   22)  Protocol specific state name for generic state Initial if applicable
   23)  Protocol specific state name for generic state Learn if applicable
   24)  Protocol specific state name for generic state Listen if applicable
   25)  Protocol specific state name for generic state Speak if applicable
   26)  Protocol specific state name for generic state Standby if applicable
   27)  Protocol specific state name for generic state Active if applicable
   28)  Protocol specific state name for generic state (future) if applicable
   29)  Protocol specific state name for generic state (future) if applicable
   ----------------------------------------------------------------------------
   30)  Protocol specific information if applicable
   31)  Protocol specific information if applicable
EDESC
#
#
#
EVENT OV_HSRP_Multiple_Standby .1.3.6.1.4.1.11.2.17.1.0.60001416 "Status Alarms" Critical
FORMAT The RRP router group $2 is in an abnormal condition. There are multiple Standby interfaces.
SDESC
This event is generated by NNM when it thinks that the Redundant Routing
   Protocol group has multiple Standby interfaces.  This alarm can be generated
   for various protocols including HSRP and VRRP.

   The data (var-binds) passed with the event is:

    1)  The ID of application sending the event
    2)  The virtual IP address of the HSRP group that caused the event
        (in string form)
    3)  NNM extended topology objectID of the HSRP group
    4)  Route distinguisher of the virtual IP address associated with this
        HSRP Group
    5)  The active interface IP address
    6)  The active interface NNM extended topology object identifier
    7)  The previous active interface IP address
    8)  The previous active interface NNM extended topology object identifier
    9)  The standby interface IP address
   10)  The standby interface NNM extended topology object identifier
   11)  The previous standby interface IP address
   12)  The previous standby interface NNM extended topology object identifier
   13)  A list of IP Address of interfaces in the HSRP Group which are not in
        active or standby state.
   14)  The NNM extended topology object identifiers for the interfaces in var bind 11.
   15)  The State for the interfaces in var bind 11.
   ----------------------------------------------------------------------------
   16)  IP Address List of all the participating interfaces in HSRP group. 
   17)  Management Address List of all the participating interfaces in HSRP group. 
   18)  IfIndex List of all the participating interfaces in HSRP group. 
   19)  Reserved for future use.
   ----------------------------------------------------------------------------
   20)  Redundant Router Protocol (for example, VRRP)
   21)  Redundant Router Protocol Version (for example, Nortel Rapid City)
   22)  Protocol specific state name for generic state Initial if applicable
   23)  Protocol specific state name for generic state Learn if applicable
   24)  Protocol specific state name for generic state Listen if applicable
   25)  Protocol specific state name for generic state Speak if applicable
   26)  Protocol specific state name for generic state Standby if applicable
   27)  Protocol specific state name for generic state Active if applicable
   28)  Protocol specific state name for generic state (future) if applicable
   29)  Protocol specific state name for generic state (future) if applicable
   ----------------------------------------------------------------------------
   30)  Protocol specific information if applicable
   31)  Protocol specific information if applicable
EDESC
#
#
#
EVENT pdpcontextfailed .1.3.6.1.4.1.11.2.17.1.1027 "Juniper" Critical
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value compared against
       (for string variables, this will be the last value)
    8) The sampled value
    9) The highest sampled (peak) value
       (for string variables, this will be the last value)
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
       (for string variables, this will be the last value)
   12) The time the lowest value was sampled
   13) The threshold information string
       This string gives information about why the threshold
       was exceeded.  It varies based on the type of
       threshold that was defined.

       If both Standard Deviation and Fixed numeric
       thresholds are exceeded, the standard deviation
       information will be included in this string and the
       fixed threshold will be given in $7.  The form of
       this argument will be:
          BUCKETNAME #pts: NUMPTS StdDev: STDDEV * STDDEVTHRESH
	  mean: MEAN and FIXEDOP

       If only Standard Deviation numeric thresholds are
       exceeded, all but the mean is included here, and the
       mean is given as $7.  The form of the argument will
       be:
          BUCKETNAME #pts: NUMPTS StdDev: STDDEV * STDDEVTHRESH
	  mean: MEAN

       If only Fixed numeric thresholds are exceeded, this
       string will be:
	  FIXED_OP

       BUCKETNAME is the name of the bucket (from
	    $OV_CONF/statTimeRanges.conf)
       NUMPTS is the number of points that contributed to
	  this calculation
       STDDEV is the standard deviation
       STDDEVTHRESH is the threshold value that was given
       MEAN is the mean value
       FIXED_OP: one of ">", ">=", "<", "<=", "!=", or "=="

       If the MIB variable is a string, this value will
       always be "!=".
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT pdpcontextfailed_R .1.3.6.1.4.1.11.2.17.1.1028 "Juniper" Normal
FORMAT $5.$6 threshold rearmed ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
SDESC
This event is generated by HP OpenView data collector when a
sampled value drops below a preconfigured level, after
generating an event for exceeding a value.  (See also
specific event #58720263 for value exceeded events).  The
user may also configure rearm events with specific trap
numbers in the even range of 2 to 10000.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the rearm event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The instance
    7) The rearm value compared against
       (for string variables, this will be the last value)
    8) The sample value
    9) The highest sampled (peak) value
       (for string variables, this will be the last value)
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
       (for string variables, this will be the last value)
   12) The time the lowest value was sampled
   13) The rearm information string
       This string gives information about why the rearm
       was exceeded.  It varies based on the type of
       rearm that was defined.

       If both Standard Deviation and Fixed numeric rearms
       are exceeded, the standard deviation information will
       be included in this string and the fixed rearm will
       be given in $7.  The form of this argument will be:
          BUCKETNAME #pts: NUMPTS StdDev: STDDEV * STDDEVREARM
	  mean: MEAN and FIXEDOP

       If only Standard Deviation numeric rearms are
       exceeded, all but the mean is included here, and the
       mean is given as $7.  The form of the argument will
       be:
          BUCKETNAME #pts: NUMPTS StdDev: STDDEV * STDDEVREARM
	  mean: MEAN

       If only Fixed numeric rearms are exceeded, this
       string will be:
	  FIXED_OP

       BUCKETNAME is the name of the bucket (from
	    $OV_CONF/statTimeRanges.conf)
       NUMPTS is the number of points that contributed to
	  this calculation
       STDDEV is the standard deviation
       STDDEVREARM is the rearm value that was given
       MEAN is the mean value
       FIXED_OP: one of ">", ">=", "<", "<=", "!=", or "=="

       If the MIB variable is a string, this value will
       always be "!=".
   14) The rearm count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT WindConnect-CPU .1.3.6.1.4.1.11.2.17.1.9001 "Threshold Alarms" Major
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
DISPLAY $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value compared against
       (for string variables, this will be the last value)
    8) The sampled value
    9) The highest sampled (peak) value
       (for string variables, this will be the last value)
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
       (for string variables, this will be the last value)
   12) The time the lowest value was sampled
   13) The threshold information string
       This string gives information about why the threshold
       was exceeded.  It varies based on the type of
       threshold that was defined.

       If both Standard Deviation and Fixed numeric
       thresholds are exceeded, the standard deviation
       information will be included in this string and the
       fixed threshold will be given in $7.  The form of
       this argument will be:
          BUCKETNAME #pts: NUMPTS StdDev: STDDEV * STDDEVTHRESH
	  mean: MEAN and FIXEDOP

       If only Standard Deviation numeric thresholds are
       exceeded, all but the mean is included here, and the
       mean is given as $7.  The form of the argument will
       be:
          BUCKETNAME #pts: NUMPTS StdDev: STDDEV * STDDEVTHRESH
	  mean: MEAN

       If only Fixed numeric thresholds are exceeded, this
       string will be:
	  FIXED_OP

       BUCKETNAME is the name of the bucket (from
	    $OV_CONF/statTimeRanges.conf)
       NUMPTS is the number of points that contributed to
	  this calculation
       STDDEV is the standard deviation
       STDDEVTHRESH is the threshold value that was given
       MEAN is the mean value
       FIXED_OP: one of ">", ">=", "<", "<=", "!=", or "=="

       If the MIB variable is a string, this value will
       always be "!=".
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT WindConnect-MEM .1.3.6.1.4.1.11.2.17.1.9003 "Threshold Alarms" Major
FORMAT $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
DISPLAY $5.$6 threshold exceeded ($13 $7 * $14): $8.  Sampled high of $9 at $10 low of $11 at $12
SDESC
This event is generated by HP OpenView data collector when a
sampled value exceeds a preconfigured level.  (See also
specific event #58720264 for rearm events).  The user may
also configure value exceeded events with specific trap
numbers in the odd range of 1 to 9999.

The data passed with the event is
    1) The ID of application sending the event
    2) The name of the host that caused the threshold event
    3) The HP OpenView object identifier, if available
    4) The MIB variable in dotted numeric format
    5) The name of the collection
    6) The MIB instance
    7) The threshold value compared against
       (for string variables, this will be the last value)
    8) The sampled value
    9) The highest sampled (peak) value
       (for string variables, this will be the last value)
   10) The time the highest value was sampled
   11) The lowest sampled (trough) value
       (for string variables, this will be the last value)
   12) The time the lowest value was sampled
   13) The threshold information string
       This string gives information about why the threshold
       was exceeded.  It varies based on the type of
       threshold that was defined.

       If both Standard Deviation and Fixed numeric
       thresholds are exceeded, the standard deviation
       information will be included in this string and the
       fixed threshold will be given in $7.  The form of
       this argument will be:
          BUCKETNAME #pts: NUMPTS StdDev: STDDEV * STDDEVTHRESH
	  mean: MEAN and FIXEDOP

       If only Standard Deviation numeric thresholds are
       exceeded, all but the mean is included here, and the
       mean is given as $7.  The form of the argument will
       be:
          BUCKETNAME #pts: NUMPTS StdDev: STDDEV * STDDEVTHRESH
	  mean: MEAN

       If only Fixed numeric thresholds are exceeded, this
       string will be:
	  FIXED_OP

       BUCKETNAME is the name of the bucket (from
	    $OV_CONF/statTimeRanges.conf)
       NUMPTS is the number of points that contributed to
	  this calculation
       STDDEV is the standard deviation
       STDDEVTHRESH is the threshold value that was given
       MEAN is the mean value
       FIXED_OP: one of ">", ">=", "<", "<=", "!=", or "=="

       If the MIB variable is a string, this value will
       always be "!=".
   14) The threshold count

On UNIX, see the trapd.conf(4) manpage for complete details.
On Windows NT, see the trapd.conf reference page in the help
file.
EDESC
#
#
#
EVENT ipxTrapCircuitDown .1.3.6.1.4.1.23.2.5.5.0.1 "Status Alarms" Minor
FORMAT ipxTrapCircuitDown trap received from enterprise $E with $# arguments: ipxCircSysInstance=$1; ipxCircIndex=$2
SDESC
"This trap signifies that the specified circuit has gone down."
EDESC
#
#
#
EVENT ipxTrapCircuitUp .1.3.6.1.4.1.23.2.5.5.0.2 "Status Alarms" Minor
FORMAT ipxTrapCircuitUp trap received from enterprise $E with $# arguments: ipxCircSysInstance=$1; ipxCircIndex=$2
SDESC
"This trap signifies that the specified circuit has come up."
EDESC
#
#
#
EVENT RMON_Hi_Thresh .1.3.6.1.4.1.141.1.1.3.0.1 "Threshold Alarms" Warning
FORMAT RMON: Rising (high) threshold exceeded
SDESC
RMON has detected a rising (high) threshold crossover.
EDESC
#
#
#
EVENT RMON_Low_Thresh .1.3.6.1.4.1.141.1.1.3.0.2 "Status Alarms" Warning
FORMAT RMON: Falling (low) threshold crossed
SDESC
RMON has detected a falling (low) threshold crossover.
EDESC
#
#
#
EVENT kalEps3StackProStackMatrixChange .1.3.6.1.4.1.197.3.1.1.0.2 "Status Alarms" Warning
FORMAT kalEps3StackProStackMatrixChange trap received from enterprise $E with $# arguments: sysName=$1; sysLocation=$2; kalEps3ProStackMatrixStatus=$3
SDESC
"This trap is generated when the stack switches over from primary to
 secondary ProStack Matrix or from secondary back to primary ProStack Matrix."
EDESC
#
#
#
EVENT kalEps3StackTempChange .1.3.6.1.4.1.197.3.2.0.1 "Status Alarms" Warning
FORMAT kalEps3StackTempChange trap received from enterprise $E with $# arguments: sysName=$1; sysLocation=$2; kalEps3StackSwitchTemperature=$3
SDESC
"This trap is generated when the temperature in a switch exceeds normal or
 returns to normal."
EDESC
#
#
#
EVENT kalEps3PortStrNFwdEntry .1.3.6.1.4.1.197.3.4.0.1 "Status Alarms" Warning
FORMAT kalEps3PortStrNFwdEntry trap received from enterprise $E with $# arguments: sysName=$1; sysLocation=$2; kalEps3PortActiveMode=$3
SDESC
"This trap is generated when a port automatically enters store and forward
 mode when the error rate exceeds the threshold."
EDESC
#
#
#
EVENT kalEps3DmnNewRoot .1.3.6.1.4.1.197.3.5.0.1 "Status Alarms" Normal
FORMAT kalEps3DmnNewRoot trap received from enterprise $E with $# arguments: kalEps3DmnInfoDmnNumber=$1
SDESC
"This trap is a domain specific version of the newRoot trap as described in
 RFC1493. The newRoot trap indicates that the sending agent has become the
 new root of the Spanning Tree; the trap is sent by a bridge soon after its
 election as the new root, e.g., upon expiration of the Topology Change Timer
 immediately subsequent to its election. Implementation of this trap is
 optional."
EDESC
#
#
#
EVENT kalEps3DmnTopologyChange .1.3.6.1.4.1.197.3.5.0.2 "Status Alarms" Normal
FORMAT kalEps3DmnTopologyChange trap received from enterprise $E with $# arguments: kalEps3DmnInfoDmnNumber=$1
SDESC
"This trap is a domain specific version of the topologyChange trap as
 described in RFC1493. A topologyChange trap is sent by a bridge when any of
 its configured ports transitions from the Learning state to the Forwarding
 state, or from the Forwarding state to the Blocking state. The trap is not
 sent if a newRoot trap is sent for the same transition. Implementation of
 this trap is optional."
EDESC
#
#
#
EVENT kalEps3EtherChannelFailed .1.3.6.1.4.1.197.3.6.0.2 "Status Alarms" Normal
FORMAT kalEps3EtherChannelFailed trap received from enterprise $E with $# arguments: sysName=$1
SDESC
"This trap is sent when one of the links in an EtherChannel fail. The variable 
kalEps3ECPorts contains the ports which are operational in the EtherChannel."
EDESC
#
#
#
EVENT atmfVpcChange .1.3.6.1.4.1.353.0.1 "Status Alarms" Normal
FORMAT atmfVpcChange received from enterprise $E with $# arguments: atmfVpcPortIndex=$1; atmfVpcVpi=$2; atmfVpcOperStatus=$3
SDESC
"An atmfVpcChange trap indicates that a VPC is added or deleted 
at this UNI.  The variables included in the trap identify the 
VPI value of the new or deleted configured VPC at this UNI."
EDESC
#
#
#
EVENT atmfVccChange .1.3.6.1.4.1.353.0.2 "Status Alarms" Normal
FORMAT atmfVccChange received from enterprise $E with $# arguments: atmfVccPortIndex=$1; atmfVccVci=$2; atmfVccVpi=$3; atmfVccOperStatus=$4
SDESC
"An atmfVccChange trap indicates that a VCC is added or 
deleted at this UNI.  The variables included in the trap 
identify the VCI and VPI values of the new or deleted configured 
VCC at this UNI."
EDESC
#
#
#
EVENT dmiEventIndication .1.3.6.1.4.1.412.1.2.0.1 "Status Alarms" Normal
FORMAT DMI EVENT: "$1"  Type: $2  Component: $4  System: $8  Subsystem: $9  Details: $>+9
SDESC
Long Descr.:
"A DMI Event associated with a group within a DMI
component has occurred.

Normally, DMI Events are translated into event
specific SNMP notifications instead of this
generic notification.

However, this generic notification is defined for
cases when mapping the DMI event to a specific
SNMP trap is not possible (e.g., the DMI Class to
SNMP OID mapping is not defined)."
Variables:
  1: dmiEventClassString
     Syntax="DmiString  (Octet String) "
     Descr="The Event Group class string used, along with the
           event type, to uniquely identify the DMI Event
           when translated into the general
           dmiEventIndication trap format."
  2: dmiEventType
     Syntax="Integer"
     Descr="Event-specific information that identifies the
           type of event within the DMI Event Generation
           group.

	   Normally, this information is conveyed in the
	   resulting SNMP Notification OID derived from the
	   DMI Event to SNMP Trap mapping procedure.  This
	   object is not included in event specific traps.

	   However, this object is defined for use within
	   the generic dmiEventIndication trap, when mapping
	   the DMI event to a specific SNMP trap is not
	   possible (e.g., the DMI Class to SNMP OID mapping
	   is not defined)."
  3: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
           the DMI Service Layer."
  4: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
           Service Layer at registration time.  By
           convention, the Service Layer itself will have an
           Id of one."
  5: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  6: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
           component generating this event, provided the
           event is state-based.  The value -1 indicates the
           event is not state-based."
  7: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
           this event."
  8: dmiEventSystem
     Syntax="Integer"
     Descr="Event-specific information that identifies the
	   functional system of the component that caused
	   the event.

	   Normally, SNMP Traps mapped from a DMI Event
	   contain an event-specific definition of this
	   attribute.  This object is not included in event
	   specific traps.

	   However, this object is defined for use within
	   the generic dmiEventIndication trap, when mapping
	   the DMI event to a specific SNMP trap is not
	   possible (e.g., the DMI Class to SNMP OID mapping
	   is not defined)."
  9: dmiEventSubSystem
     Syntax="Integer"
     Descr="Event-specific information that identifies the
	   functional sub-system of the component that
	   caused the event.

	   Normally, SNMP Traps mapped from a DMI Event
	   contain an event-specific definition of this
	   attribute.  This object is not included in event
	   specific traps.

	   However, this object is defined for use within
	   the generic dmiEventIndication trap, when mapping
	   the DMI event to a specific SNMP trap is not
	   possible (e.g., the DMI Class to SNMP OID mapping
	   is not defined)."
EDESC
#
#
#
EVENT dmiComponentAddedIndication .1.3.6.1.4.1.412.1.2.0.2 "Configuration Alarms" Normal
FORMAT DMI Component Added: "$2"  with Id # $1
SDESC
Long Descr.:
"A new component has been installed into the DMI
Service Layer."
Variables:
  1: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
           Service Layer at registration time.  By
           convention, the Service Layer itself will have an
           Id of one."
  2: dmiCompName
     Syntax="DmiString  (Octet String) (SIZE(0..255))"
     Descr="The value of the 'name' statement from the
           component definition block."
EDESC
#
#
#
EVENT dmiComponentDeletedIndication .1.3.6.1.4.1.412.1.2.0.3 "Configuration Alarms" Normal
FORMAT DMI Component # $1 Deleted
SDESC
Long Descr.:
"An installed component has been uninstalled from
the DMI Service Layer."
Variables:
  1: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
           Service Layer at registration time.  By
           convention, the Service Layer itself will have an
           Id of one."
EDESC
#
#
#
EVENT dmiLanguageAddedIndication .1.3.6.1.4.1.412.1.2.0.4 "Configuration Alarms" Normal
FORMAT DMI Language Added to Component # $1: "$2"
SDESC
Long Descr.:
"A new language binding has been added to a
component in the DMI Service Layer."
Variables:
  1: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
           Service Layer at registration time.  By
           convention, the Service Layer itself will have an
           Id of one."
  2: dmiLanguage
     Syntax="DmiString  (Octet String) (SIZE(16|14))"
     Descr="The language string, defined by the DMI 2.0
           Specification, that identifies a native language
           character set supported by the component.

           The format of the string is:
           'language-code|territory-code|encoding'
	   where language-code is one of the two-letter
	   codes defined in ISO 639, territory-code is one
	   of the two leteter codes defined in ISO 3166, and
	   encoding is either 'iso8859-1' or 'unicode'."
EDESC
#
#
#
EVENT dmiLanguageDeletedIndication .1.3.6.1.4.1.412.1.2.0.5 "Configuration Alarms" Normal
FORMAT DMI Language Deleted from Component # $1: "$2"
SDESC
Long Descr.:
"An existing language binding has been removed
from a component in the DMI Service Layer."
Variables:
  1: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
           Service Layer at registration time.  By
           convention, the Service Layer itself will have an
           Id of one."
  2: dmiLanguage
     Syntax="DmiString  (Octet String) (SIZE(16|14))"
     Descr="The language string, defined by the DMI 2.0
           Specification, that identifies a native language
           character set supported by the component.

           The format of the string is:
           'language-code|territory-code|encoding'
	   where language-code is one of the two-letter
	   codes defined in ISO 639, territory-code is one
	   of the two leteter codes defined in ISO 3166, and
	   encoding is either 'iso8859-1' or 'unicode'."
EDESC
#
#
#
EVENT dmiGroupAddedIndication .1.3.6.1.4.1.412.1.2.0.6 "Configuration Alarms" Normal
FORMAT DMI Group Added to Component # $1: "$3" with Id # $2
SDESC
Long Descr.:
"A new group has been added to a component in the
DMI Service Layer."
Variables:
  1: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
           Service Layer at registration time.  By
           convention, the Service Layer itself will have an
           Id of one."
  2: dmiGroupId
     Syntax="Unsigned32"
     Descr="An identifier assigned by the DMI Service Layer
           that uniquely identifies this group instance
           within a particular component."
  3: dmiGroupClassString
     Syntax="DmiString  (Octet String) (SIZE(0..255))"
     Descr="The class string of the group (or table) instance
           as registered with the DMI Service Layer for the
           given component."
EDESC
#
#
#
EVENT dmiGroupDeletedIndication .1.3.6.1.4.1.412.1.2.0.7 "Configuration Alarms" Normal
FORMAT DMI Group # $2 Deleted from Component # $1
SDESC
Long Descr.:
"An existing group has been removed from a
component in the DMI Service Layer."
Variables:
  1: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
           Service Layer at registration time.  By
           convention, the Service Layer itself will have an
           Id of one."
  2: dmiGroupId
     Syntax="Unsigned32"
     Descr="An identifier assigned by the DMI Service Layer
           that uniquely identifies this group instance
           within a particular component."
EDESC
#
#
#
EVENT dmtfProcessorFailure .1.3.6.1.4.1.412.2.4.5.0.1 "Error Alarms" Normal
FORMAT System Processor has failed.   $>+7
SDESC
Long Descr.:
"A processor in the system has failed"
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfProcessorEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfProcessorEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfProcessorSystemUp .1.3.6.1.4.1.412.2.4.5.0.2 "IGNORE" Normal
FORMAT System Processor up and running.   $>+7
SDESC
Long Descr.:
"A system processor is now up and running."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfProcessorEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfProcessorEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfProcessorInitializationFailure .1.3.6.1.4.1.412.2.4.5.0.3 "Error Alarms" Normal
FORMAT System Processor initialization failure.   $>+7
SDESC
Long Descr.:
"A system processor failed to initialize
properly during system startup."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfProcessorEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfProcessorEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfProcessorConfigurationError .1.3.6.1.4.1.412.2.4.5.0.4 "Configuration Alarms" Normal
FORMAT System processor is not properly configured.   $>+7
SDESC
Long Descr.:
"A system processor is not properly configured"
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfProcessorEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfProcessorEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfMotherboardProcessorFailure .1.3.6.1.4.1.412.2.4.6.0.1 "Status Alarms" Normal
FORMAT Motherboard Processor status: $3.   $>+7
SDESC
Long Descr.:
"A processor on the system motherboard has
failed or been fixed according to the event
severity indicated."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfMotherboardEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfMotherboardEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfMotherboardPhysicalDeviceStatusChange .1.3.6.1.4.1.412.2.4.6.0.2 "Status Alarms" Normal
FORMAT Motherboard physical device status: $3.   $>+7
SDESC
Long Descr.:
"The motherboard physical status has changed
according to the event severity indicated."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfMotherboardEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfMotherboardEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfMotherboardMemoryError .1.3.6.1.4.1.412.2.4.6.0.3 "Error Alarms" Normal
FORMAT Motherboard Memory Module has failed.   $>+7
SDESC
Long Descr.:
"A memory module on the system's motherboard
has failed."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfMotherboardEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfMotherboardEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfMotherboardSystemUp .1.3.6.1.4.1.412.2.4.6.0.4 "LOGONLY" Normal
FORMAT Motherboard up and running.   $>+7
SDESC
Long Descr.:
"The system's motherboard reports it has
started-up successfully."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfMotherboardEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfMotherboardEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfMotherboardInitializationFailure .1.3.6.1.4.1.412.2.4.6.0.5 "Error Alarms" Normal
FORMAT Motherboard initialization failure.   $>+7
SDESC
Long Descr.:
"The system's motherboard has failed to
initialize properly during system startup."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfMotherboardEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfMotherboardEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfMotherboardConfigurationError .1.3.6.1.4.1.412.2.4.6.0.6 "Configuration Alarms" Normal
FORMAT Motherboard is not properly configured.   $>+7
SDESC
Long Descr.:
"The system's motherboard is not properly configured"
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfMotherboardEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfMotherboardEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfLogicalMemoryError .1.3.6.1.4.1.412.2.4.8.0.1 "Error Alarms" Normal
FORMAT Logical Memory Fault.   $>+7
SDESC
Long Descr.:
"A an error has occured in the system's logical memory space."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfLogicalMemoryEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfLogicalMemoryEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfLogicalMemoryInitializationFailure .1.3.6.1.4.1.412.2.4.8.0.2 "Error Alarms" Normal
FORMAT Logical Memory initialization failure.   $>+7
SDESC
Long Descr.:
"An error occured while initializing the system's memory."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfLogicalMemoryEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfLogicalMemoryEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfSystemCacheMemoryError .1.3.6.1.4.1.412.2.4.9.0.1 "Error Alarms" Normal
FORMAT System Cache Memory Fault.   $>+7
SDESC
Long Descr.:
"A memory module in the system cache failed."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfSystemCacheEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfSystemCacheEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfSystemCacheInitializationFailure .1.3.6.1.4.1.412.2.4.9.0.2 "Error Alarms" Normal
FORMAT System Cache initialization failure.   $>+7
SDESC
Long Descr.:
"The System Cache failed to initialize properly
during system startup."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfSystemCacheEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfSystemCacheEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfPowerSupplyStatusChange .1.3.6.1.4.1.412.2.4.16.0.1 "Status Alarms" Normal
FORMAT Power Supply status: $3.   $>+7
SDESC
Long Descr.:
"The operational status of a power supply
on the system has changed according to the
event severity indicated."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfPowerSupplyEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfPowerSupplyEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfPowerSupplyPowerControlRequest .1.3.6.1.4.1.412.2.4.16.0.2 "IGNORE" Normal
FORMAT Power Control setting has changed.   $>+7
SDESC
Long Descr.:
"The power control setting for a power supply
on the system has changed."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfPowerSupplyEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfPowerSupplyEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfCoolingDeviceStatusChange .1.3.6.1.4.1.412.2.4.17.0.1 "Status Alarms" Normal
FORMAT Cooling Device status: $3.   $>+7
SDESC
Long Descr.:
"A cooling device (e.g., fan) on the system
has changed status according to the event
severity indicated.

Improper operation of a system cooling device
can lead to over-heating and eventual breakdown
of the system."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfCoolingDeviceEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfCoolingDeviceEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfCoolingDeviceTemperatureFault .1.3.6.1.4.1.412.2.4.17.0.2 "Error Alarms" Normal
FORMAT Temperature Fault (Cooling Device).   $>+7
SDESC
Long Descr.:
"A temperature fault has been detected by a cooling
device (e.g., fan) on the system. The system or a
system component is either over-heating or too cold.
Probable causes include an inoperable or obstructed
cooling device; or insufficient ventilation around
the system.

This condition can lead to eventual breakdown
of the system if left unattended."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfCoolingDeviceEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfCoolingDeviceEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfDisksStatusChange .1.3.6.1.4.1.412.2.4.22.0.1 "Status Alarms" Normal
FORMAT Physical Disk status: $3.   $>+7
SDESC
Long Descr.:
"The operational status of a physical disk
on the system has changed, as indicated by
the event severity."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfDisksEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfDisksEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfDisksInitializationError .1.3.6.1.4.1.412.2.4.22.0.2 "Error Alarms" Normal
FORMAT Physical Disk initialization failure.   $>+7
SDESC
Long Descr.:
"A physical disk drive on the system failed
to initialize properly on startup."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfDisksEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfDisksEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfDisksConfigurationError .1.3.6.1.4.1.412.2.4.22.0.3 "Configuration Alarms" Normal
FORMAT Physical Disk is not properly configured.   $>+7
SDESC
Long Descr.:
"A disk drive on the system is not properly configured"
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfDisksEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfDisksEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfDiskControllerInitializationFailure .1.3.6.1.4.1.412.2.4.25.0.1 "Error Alarms" Normal
FORMAT Disk Controller initialization failure.   $>+7
SDESC
Long Descr.:
"A disk controller on the system failed to initialize
properly during system startup."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfDiskControllerEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfDiskControllerEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfDiskControllerConfigurationError .1.3.6.1.4.1.412.2.4.25.0.2 "Configuration Alarms" Normal
FORMAT Disk controller is not properly configured.   $>+7
SDESC
Long Descr.:
"A disk controller on the system is not properly configured"
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfDiskControllerEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfDiskControllerEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfPhysicalMemoryArrayError .1.3.6.1.4.1.412.2.4.33.0.1 "Error Alarms" Normal
FORMAT Physical Memory Array has failed.   $>+7
SDESC
Long Descr.:
"A physical memory module in the system has failed."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfPhysicalMemoryArrayEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfPhysicalMemoryArrayEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfPhysicalMemoryArrayInitializationFailure .1.3.6.1.4.1.412.2.4.33.0.2 "Error Alarms" Normal
FORMAT Physical Memory Array initialization failure.   $>+7
SDESC
Long Descr.:
"A physical memory module in the system failed
to initialize properly during system startup."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfPhysicalMemoryArrayEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfPhysicalMemoryArrayEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfMassStoreLogicalDrivesPhysicalDeviceStatusChange .1.3.6.1.4.1.412.2.4.45.0.1 "Status Alarms" Normal
FORMAT Mass Store Physical Device status: $3.   $>+7
SDESC
Long Descr.:
"The status of a Logical Disk Drive
(e.g., file system volume) has changed."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfMassStoreLogicalDrivesEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfMassStoreLogicalDrivesEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfMassStoreLogicalDrivesHotSpareActivated .1.3.6.1.4.1.412.2.4.45.0.2 "Status Alarms" Normal
FORMAT Mass Store Logical Drive hotswap spare activated.   $>+7
SDESC
Long Descr.:
"The 'hot-swap spare' for an inoperable
logical disk drive has been activated."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfMassStoreLogicalDrivesEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfMassStoreLogicalDrivesEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfMassStoreLogicalDrivesLogicalDeviceStatusChange .1.3.6.1.4.1.412.2.4.45.0.3 "Status Alarms" Normal
FORMAT Mass Store Logical Drive status: $3.   $>+7
SDESC
Long Descr.:
"logicalDeviceStatusChange"
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfMassStoreLogicalDrivesEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfMassStoreLogicalDrivesEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfMassStoreLogicalDrivesInitializationFailure .1.3.6.1.4.1.412.2.4.45.0.4 "Error Alarms" Normal
FORMAT Mass Store Logical Drive initialization failure.   $>+7
SDESC
Long Descr.:
"A logical disk drive on the system failed to
initialize properly during system startup."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfMassStoreLogicalDrivesEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfMassStoreLogicalDrivesEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfMassStoreLogicalDrivesConfigurationError .1.3.6.1.4.1.412.2.4.45.0.5 "Configuration Alarms" Normal
FORMAT Mass Store Logical Drive is not properly configured.   $>+7
SDESC
Long Descr.:
"A logical disk drive on the system is not properly configured"
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfMassStoreLogicalDrivesEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfMassStoreLogicalDrivesEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfSystemResetSystemUp .1.3.6.1.4.1.412.2.4.48.0.1 "Status Alarms" Normal
FORMAT System has rebooted after automatic reset.   $>+7
SDESC
Long Descr.:
"The system is up and running after having
automatically re-booted due to some (abnormal)
reset condition."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfSystemResetEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfSystemResetEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfSystemHardwareSecuritySettingsChange .1.3.6.1.4.1.412.2.4.49.0.1 "Configuration Alarms" Normal
FORMAT System hardware security settings have changed.   $>+7
SDESC
Long Descr.:
"The security settings for the system hardware have changed."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfSystemHardwareSecurityEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfSystemHardwareSecurityEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfSystemHardwareSecurityContainerSecurityBreach .1.3.6.1.4.1.412.2.4.49.0.2 "Error Alarms" Normal
FORMAT System enclosure or chassis has been opened.   $>+7
SDESC
Long Descr.:
"A secruity breach of the system hardware has occured.
A secured component of the physical system has been
accessed without proper authorization."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfSystemHardwareSecurityEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfSystemHardwareSecurityEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfUPSBatteryStatusChange .1.3.6.1.4.1.412.2.4.52.0.1 "Status Alarms" Normal
FORMAT UPS Battery status: $3.   $>+7
SDESC
Long Descr.:
"The UPS Battery has changed status according
to the event severity indicated."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfUPSBatteryEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfUPSBatteryEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfUPSBatteryUtilityPowerLostSystemOnBattery .1.3.6.1.4.1.412.2.4.52.0.2 "Status Alarms" Normal
FORMAT Lost primary power, running on UPS battery.   $>+7
SDESC
Long Descr.:
"The system has lost primary power and is
now running on UPS Battery."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfUPSBatteryEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfUPSBatteryEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfUPSBatteryUtilityPowerUpSystemOffBattery .1.3.6.1.4.1.412.2.4.52.0.3 "Status Alarms" Normal
FORMAT Regained primary power, no longer using UPS battery.   $>+7
SDESC
Long Descr.:
"Primary power to the system has been restored.
The UPS battery is no longer in use."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfUPSBatteryEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfUPSBatteryEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfVoltageProbePowerSupplyStatusChange .1.3.6.1.4.1.412.2.4.53.0.1 "Status Alarms" Normal
FORMAT Power Supply Voltage status: $3.   $>+7
SDESC
Long Descr.:
"A voltage probe on the system has detected an
abnormal change in voltage level from one of
the system's power supplies to the monitored
component."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfVoltageProbeEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfVoltageProbeEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfTemperatureProbeCoolingDeviceStatusChange .1.3.6.1.4.1.412.2.4.54.0.1 "Status Alarms" Normal
FORMAT System Temperature status: $3.  $>+7
SDESC
Long Descr.:
"A temperature probe on the system has detected
an abnormal change in temperature of the system
or a system component."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfTemperatureProbeEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfTemperatureProbeEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfElectricalCurrentProbePowerSupplyStatusChange .1.3.6.1.4.1.412.2.4.55.0.1 "Status Alarms" Normal
FORMAT Power Supply Electrical Current status: $3.   $>+7
SDESC
Long Descr.:
"An electrical current probe on the system has
detected an abnormal change in electrical current
from a power supply to the monitored component of
the system."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfElectricalCurrentProbeEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfElectricalCurrentProbeEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfElectricalCurrentProbeCoolingDeviceStatusChange .1.3.6.1.4.1.412.2.4.55.0.2 "Status Alarms" Normal
FORMAT Cooling Device Electrical Current status: $3.   $>+7
SDESC
Long Descr.:
"A cooling device (e.g., Fan) on the system has changed
status due to loss of (or regained) electrical power."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfElectricalCurrentProbeEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfElectricalCurrentProbeEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfPhysicalContainerSecuritySettingsChange .1.3.6.1.4.1.412.2.4.63.0.1 "Configuration Alarms" Normal
FORMAT System hardware security settings have changed (Physical Container).   $>+7
SDESC
Long Descr.:
"The security settings for the system chassis or
physical container in the system have been modified."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfPhysicalContainerGlobalEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfPhysicalContainerGlobalEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfPhysicalContainerPowerSupplyStatusChange .1.3.6.1.4.1.412.2.4.63.0.2 "Status Alarms" Normal
FORMAT Power Supply status: $3 (Physical Container).   $>+7
SDESC
Long Descr.:
"The power supply for an associated system
chassis or physical container has changed status."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfPhysicalContainerGlobalEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfPhysicalContainerGlobalEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfPhysicalContainerCoolingDeviceStatusChange .1.3.6.1.4.1.412.2.4.63.0.3 "Status Alarms" Normal
FORMAT Cooling Device status: $3 (Physical Container).   $>+7
SDESC
Long Descr.:
"The cooling device for an associated system
chassis or physical container has changed status."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfPhysicalContainerGlobalEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfPhysicalContainerGlobalEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfPhysicalContainerPhysicalDeviceStatusChange .1.3.6.1.4.1.412.2.4.63.0.4 "Status Alarms" Normal
FORMAT Physical Device status: $3 (Physical Container).   $>+7
SDESC
Long Descr.:
"physicalDeviceStatusChange"
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfPhysicalContainerGlobalEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfPhysicalContainerGlobalEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfPhysicalContainerLogicalDeviceStatusChange .1.3.6.1.4.1.412.2.4.63.0.5 "Status Alarms" Normal
FORMAT Logical Device status: $3 (Physical Container).   $>+7
SDESC
Long Descr.:
"logicalDeviceStatusChange"
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfPhysicalContainerGlobalEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfPhysicalContainerGlobalEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfPhysicalContainerSecurityBreach .1.3.6.1.4.1.412.2.4.63.0.6 "Error Alarms" Normal
FORMAT System enclosure or chassis has been opened.   $>+7
SDESC
Long Descr.:
"The system chassis has been opened has
been opened without poper authorization."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfPhysicalContainerGlobalEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfPhysicalContainerGlobalEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfPhysicalContainerConfigurationError .1.3.6.1.4.1.412.2.4.63.0.7 "LOGONLY" Normal
FORMAT System chassis is not properly configured.   $>+7
SDESC
Long Descr.:
"A chassis or other physical container on the
system is not properly configured."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfPhysicalContainerGlobalEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfPhysicalContainerGlobalEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfStructureDependencyPowerSupplyStatusChange .1.3.6.1.4.1.412.2.4.68.0.1 "LOGONLY" Normal
FORMAT Power Supply status: $3 (Structure Dependency).   $>+7
SDESC
Long Descr.:
"A power supply in the system has changed status."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfStructureDependencyEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfStructureDependencyEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfStructureDependencyCoolingDeviceStatusChange .1.3.6.1.4.1.412.2.4.68.0.2 "LOGONLY" Normal
FORMAT Cooling Device status: $3 (Structure Dependency).   $>+7
SDESC
Long Descr.:
"A cooling device (e.g., fan) in the system
has changed status."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfStructureDependencyEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfStructureDependencyEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfStructureDependencyPhysicalDeviceStatusChange .1.3.6.1.4.1.412.2.4.68.0.3 "LOGONLY" Normal
FORMAT Physical device status: $3 (Structure Dependency).   $>+7
SDESC
Long Descr.:
"A physical device in the system has
changed status."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfStructureDependencyEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfStructureDependencyEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfStructureDependencyLogicalDeviceStatusChange .1.3.6.1.4.1.412.2.4.68.0.4 "LOGONLY" Normal
FORMAT Locical device status: $3 (Structure Dependency).   $>+7
SDESC
Long Descr.:
"A logical device in the system has
changed status."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfStructureDependencyEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfStructureDependencyEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfStructureDependencySystemUp .1.3.6.1.4.1.412.2.4.68.0.5 "LOGONLY" Normal
FORMAT An element of the system is up and running (Structure Dependency).   $>+7
SDESC
Long Descr.:
"An element of the system is up and running"
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfStructureDependencyEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfStructureDependencyEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfStructureDependencyBatteryStatusChange .1.3.6.1.4.1.412.2.4.68.0.6 "LOGONLY" Normal
FORMAT Battery status: $3 (Structure Dependency).   $>+7
SDESC
Long Descr.:
"A battery powering the system has changed status."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfStructureDependencyEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfStructureDependencyEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfStructureDependencyContainerSecurityBreach .1.3.6.1.4.1.412.2.4.68.0.7 "LOGONLY" Normal
FORMAT System enclosure or chassis has been opened (Structure Dependency).   $>+7
SDESC
Long Descr.:
"The system chassis has been opened has
been opened without poper authorization."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfStructureDependencyEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfStructureDependencyEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfStructureDependencyInitializationFailure .1.3.6.1.4.1.412.2.4.68.0.8 "LOGONLY" Normal
FORMAT An element of the system failed to initialize (Structure Dependency).   $>+7
SDESC
Long Descr.:
"An element of the system failed to initialize
properly during system startup."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfStructureDependencyEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfStructureDependencyEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfStructureDependencyConfigurationError .1.3.6.1.4.1.412.2.4.68.0.9 "LOGONLY" Normal
FORMAT An element of the system is not properly configured (Structure Dependency).   $>+7
SDESC
Long Descr.:
"An element of the system is not properly configured"
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfStructureDependencyEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfStructureDependencyEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfPortableBatteryLowCombinedBatterysCharge .1.3.6.1.4.1.412.2.8.1.0.1 "LOGONLY" Normal
FORMAT Portable combined battery charge is running low.   $>+7
SDESC
Long Descr.:
"The combined charge of all batteries in the
portable computer is running low."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfPortableBatteryEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfPortableBatteryEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfPortableBatteryCriticalCombinedBatterysCharge .1.3.6.1.4.1.412.2.8.1.0.2 "LOGONLY" Normal
FORMAT Portable combined battery charge is critically low.   $>+7
SDESC
Long Descr.:
"The combined charge of all batteries in the
portable computer is critcally low."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfPortableBatteryEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfPortableBatteryEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT dmtfPortableBatteryMaintenanceRequired .1.3.6.1.4.1.412.2.8.1.0.3 "Error Alarms" Normal
FORMAT Portable Battery is inoperable and requires maintenance.   $>+7
SDESC
Long Descr.:
"A battery in the portable computer is
defective and requires maintenance."
Variables:
  1: dmiEventDateTime
     Syntax="DmiDate  (Octet String) (SIZE(25))"
     Descr="The timestamp attached to an event indication by
the DMI Service Layer."
  2: dmiCompId
     Syntax="Unsigned32"
     Descr="The unique Id assigned to the component by the
Service Layer at registration time.  By
convention, the Service Layer itself will have an
Id of one."
  3: dmiEventSeverity
     Syntax="Integer"
     Descr="The severity of this event."
  4: dmiEventStateKey
     Syntax="Integer"
     Descr="The index into the Event State group for the
component generating this event, provided the
event is state-based.  The value -1 indicates the
event is not state-based."
  5: dmiEventAssociatedGroup
     Syntax="DmiString  (Octet String) "
     Descr="The class string of the DMI group associated with
this event."
  6: dmtfPortableBatteryEvSys
     Syntax="Integer"
     Descr="The major functional aspect of the product causing the fault."
  7: dmtfPortableBatteryEvSub
     Syntax="Integer"
     Descr="The minor functional aspect of the product causing the fault."
EDESC
#
#
#
EVENT Logon_Intruder_2 .1.3.6.1.4.1.437.1.1.1.1.0.0 "Status Alarms" Major
FORMAT Possible logon intrusion.
SDESC
EDESC
#
#
#
EVENT Diagnostic_Failure_2 .1.3.6.1.4.1.437.1.1.1.1.0.1 "Error Alarms" Critical
FORMAT Diagnostic failure
SDESC
EDESC
#
#
#
EVENT Logon_Intruder_1 .1.3.6.1.4.1.437.1.1.3.0.0 "Status Alarms" Major
FORMAT Possible logon intrusion. Trap received from enterprise $E with $# arguments: sysName=$1
SDESC
"A user is repeatedly trying to logon using an invalid password. The number of
 attempts exceeds the preset limit given in netMgmtConsolePasswordThresh.
 Depending on how the object netMgmtConsoleSilentTime is configured, the
 switch may shut down the Management Console following the generation of this
 trap."
EDESC
#
#
#
EVENT Diagnostic_Failure_1 .1.3.6.1.4.1.437.1.1.3.0.1 "Error Alarms" Critical
FORMAT Diagnostic failure. Trap received from enterprise $E with $# arguments: sysName=$1
SDESC
"The switch issues this trap when its Power On Self Test (POST) code does not
 pass all tests. Some failures are catastrophic and may prevent the generation
 of this trap, as well as the system's operations."
EDESC
#
#
#
EVENT Address_Violation .1.3.6.1.4.1.437.1.1.3.0.3 "Error Alarms" Major
FORMAT addressViolation trap received from enterprise $E with $# arguments: ifIndex=$1
SDESC
"The addressViolation trap is issued when an address violation is detected on a 
secured port. The generation of the addressViolation trap can be enabled or
suppressed using the object sysConfigAddressViolationAlert."
EDESC
#
#
#
EVENT Broadcast_Storm .1.3.6.1.4.1.437.1.1.3.0.4 "Status Alarms" Major
FORMAT Broadcast threshold exceeded.  Trap received from enterprise $E with $# arguments: ifIndex=$1
SDESC
"The broadcastStorm trap is issued when broadcast storm control is enabled and
 the number of broadcast packets received in a second from a port is higher
 than the broadcast threshold. The generation of this trap can be enabled or
 suppressed using the object sysConfigBroadcastStormAlert."
EDESC
#
#
#
EVENT RPS_Failure .1.3.6.1.4.1.437.1.1.3.0.5 "Status Alarms" Critical
FORMAT Redundant power supply failed.  Trap received from enterprise $E with $# arguments: sysName=$1
SDESC
"A redundant power source is connected to the switch but a failure exists in
 the power system."
EDESC
#
#
#
EVENT fanPSSpeedFailed .1.3.6.1.4.1.494.4.0.1 "Status Alarms" Critical
FORMAT fanPSSpeedFailed trap received from enterprise $E with $# arguments: ringswitchBasePSFanSpeed=$1
SDESC
"This trap is sent when the Power Supply fan has failed."
EDESC
#
#
#
EVENT fanExtSpeedFailed .1.3.6.1.4.1.494.4.0.2 "Status Alarms" Critical
FORMAT fanExtSpeedFailed trap received from enterprise $E with $# arguments: ringswitchBaseExtFanSpeed=$1
SDESC
"This trap is sent when the external fan has failed."
EDESC
#
#
#
EVENT portFailed .1.3.6.1.4.1.494.4.0.3 "Status Alarms" Minor
FORMAT portFailed trap received from enterprise $E with $# arguments: ringswitchPortAdapterStatus=$1
SDESC
"This trap is sent when a port has auto-closed or failed to open."
EDESC
#
#
#
EVENT brTestFailed .1.3.6.1.4.1.494.4.0.4 "Status Alarms" Minor
FORMAT brTestFailed trap received from enterprise $E with $# arguments: ringswitchPortTestError=$1
SDESC
"This trap is sent when the bridge test on a port fails."
EDESC
#
#
#
EVENT portInactive .1.3.6.1.4.1.529.0.0 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The host port associated with the indicated ifIndex
has changed to the inactive state."
Variables:
  1: ifIndex
     Syntax="InterfaceIndex  (Integer) (1..2147483647)"
     Descr="A unique value, greater than zero, for each interface.  It
is recommended that values are assigned contiguously
starting from 1.  The value for each interface sub-layer
must remain constant at least from one re-initialization of
the entity's network management system to the next re-
initialization."
EDESC
#
#
#
EVENT portDualDelay .1.3.6.1.4.1.529.0.1 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The host port associated with the indicated ifIndex
is delaying the dialing of a second call to avoid
overloading devices that can not handle two calls in
close succession."
Variables:
  1: ifIndex
     Syntax="InterfaceIndex  (Integer) (1..2147483647)"
     Descr="A unique value, greater than zero, for each interface.  It
is recommended that values are assigned contiguously
starting from 1.  The value for each interface sub-layer
must remain constant at least from one re-initialization of
the entity's network management system to the next re-
initialization."
EDESC
#
#
#
EVENT portWaitSerial .1.3.6.1.4.1.529.0.2 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The host port associated with the indicated ifIndex
has detected DTR when in V.25bis mode and is waiting
for an HDLC controller to come on line.  CTS is off."
Variables:
  1: ifIndex
     Syntax="InterfaceIndex  (Integer) (1..2147483647)"
     Descr="A unique value, greater than zero, for each interface.  It
is recommended that values are assigned contiguously
starting from 1.  The value for each interface sub-layer
must remain constant at least from one re-initialization of
the entity's network management system to the next re-
initialization."
EDESC
#
#
#
EVENT portHaveSerial .1.3.6.1.4.1.529.0.3 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The host port associated with the indicated ifIndex
is ready to accept V.25bis commands.  CTS is on."
Variables:
  1: ifIndex
     Syntax="InterfaceIndex  (Integer) (1..2147483647)"
     Descr="A unique value, greater than zero, for each interface.  It
is recommended that values are assigned contiguously
starting from 1.  The value for each interface sub-layer
must remain constant at least from one re-initialization of
the entity's network management system to the next re-
initialization."
EDESC
#
#
#
EVENT portRinging .1.3.6.1.4.1.529.0.4 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The host port associated with the indicated ifIndex
is has been notified of an incoming call."
Variables:
  1: ifIndex
     Syntax="InterfaceIndex  (Integer) (1..2147483647)"
     Descr="A unique value, greater than zero, for each interface.  It
is recommended that values are assigned contiguously
starting from 1.  The value for each interface sub-layer
must remain constant at least from one re-initialization of
the entity's network management system to the next re-
initialization."
EDESC
#
#
#
EVENT portCollectDigits .1.3.6.1.4.1.529.0.5 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The host port associated with the indicated ifIndex
is collecting digits from the RS-366 dialing
interface."
Variables:
  1: ifIndex
     Syntax="InterfaceIndex  (Integer) (1..2147483647)"
     Descr="A unique value, greater than zero, for each interface.  It
is recommended that values are assigned contiguously
starting from 1.  The value for each interface sub-layer
must remain constant at least from one re-initialization of
the entity's network management system to the next re-
initialization."
EDESC
#
#
#
EVENT portWaiting .1.3.6.1.4.1.529.0.6 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The host port associated with the indicated ifIndex
is waiting for connect notification from the network
after dialing or answer notification has been issued."
Variables:
  1: ifIndex
     Syntax="InterfaceIndex  (Integer) (1..2147483647)"
     Descr="A unique value, greater than zero, for each interface.  It
is recommended that values are assigned contiguously
starting from 1.  The value for each interface sub-layer
must remain constant at least from one re-initialization of
the entity's network management system to the next re-
initialization."
EDESC
#
#
#
EVENT portConnected .1.3.6.1.4.1.529.0.7 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The host port associated with the indicated ifIndex
has connected to the far end, but end-to-end data
flow has not yet been enabled."
Variables:
  1: ifIndex
     Syntax="InterfaceIndex  (Integer) (1..2147483647)"
     Descr="A unique value, greater than zero, for each interface.  It
is recommended that values are assigned contiguously
starting from 1.  The value for each interface sub-layer
must remain constant at least from one re-initialization of
the entity's network management system to the next re-
initialization."
EDESC
#
#
#
EVENT portCarrier .1.3.6.1.4.1.529.0.8 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The host port associated with the indicated ifIndex
has connected to the far end and has end-to-end data
flow."
Variables:
  1: ifIndex
     Syntax="InterfaceIndex  (Integer) (1..2147483647)"
     Descr="A unique value, greater than zero, for each interface.  It
is recommended that values are assigned contiguously
starting from 1.  The value for each interface sub-layer
must remain constant at least from one re-initialization of
the entity's network management system to the next re-
initialization."
EDESC
#
#
#
EVENT portLoopback .1.3.6.1.4.1.529.0.9 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The host port associated with the indicated ifIndex
has been placed in local loopback mode."
Variables:
  1: ifIndex
     Syntax="InterfaceIndex  (Integer) (1..2147483647)"
     Descr="A unique value, greater than zero, for each interface.  It
is recommended that values are assigned contiguously
starting from 1.  The value for each interface sub-layer
must remain constant at least from one re-initialization of
the entity's network management system to the next re-
initialization."
EDESC
#
#
#
EVENT portAcrPending .1.3.6.1.4.1.529.0.10 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The host port associated with the indicated ifIndex
has set ACR on the RS-366 dialing interface and is
waiting for the host device to detect the transition."
Variables:
  1: ifIndex
     Syntax="InterfaceIndex  (Integer) (1..2147483647)"
     Descr="A unique value, greater than zero, for each interface.  It
is recommended that values are assigned contiguously
starting from 1.  The value for each interface sub-layer
must remain constant at least from one re-initialization of
the entity's network management system to the next re-
initialization."
EDESC
#
#
#
EVENT portDteNotReady .1.3.6.1.4.1.529.0.11 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The host port associated with the indicated ifIndex
is waiting for the DTE to signal a ready condition
when performing X.21 dialing."
Variables:
  1: ifIndex
     Syntax="InterfaceIndex  (Integer) (1..2147483647)"
     Descr="A unique value, greater than zero, for each interface.  It
is recommended that values are assigned contiguously
starting from 1.  The value for each interface sub-layer
must remain constant at least from one re-initialization of
the entity's network management system to the next re-
initialization."
EDESC
#
#
#
EVENT consoleStateChange .1.3.6.1.4.1.529.0.12 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The console associated with the passed console
index has changed state.  The console entry
can be read to see what its current state is."
Variables:
  1: consoleIndex
     Syntax="Integer"
     Descr="A unique value for each console.  It's value ranges
between 1 and the value consoleNumber.	This is the
index into the console table to identify a
particular console."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
EDESC
#
#
#
EVENT portUseExceeded .1.3.6.1.4.1.529.0.13 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The port associated with the indicated ifIndex has
exceeded the number of DS0 minutes allocated to it."
Variables:
  1: ifIndex
     Syntax="InterfaceIndex  (Integer) (1..2147483647)"
     Descr="A unique value, greater than zero, for each interface.  It
is recommended that values are assigned contiguously
starting from 1.  The value for each interface sub-layer
must remain constant at least from one re-initialization of
the entity's network management system to the next re-
initialization."
EDESC
#
#
#
EVENT systemUseExceeded .1.3.6.1.4.1.529.0.14 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The system DS0 usage has been exceeded."
EDESC
#
#
#
EVENT maxTelnetAttempts .1.3.6.1.4.1.529.0.15 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The maximum number of login attempts for a  telnet
session has been exceeded."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
EDESC
#
#
#
EVENT eventTableOverwrite .1.3.6.1.4.1.529.0.16 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A new event has overwritten an unread event.
This trap is sent only for systems which
support Ascend's accounting MIB.
Once sent, additional overwrites will not
cause another trap to be sent until at least
1 table's worth of new events have occured."
EDESC
#
#
#
EVENT radiusServerChange .1.3.6.1.4.1.529.0.18 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The current Radius server has been changed."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
EDESC
#
#
#
EVENT multicastHeartBeatMonitor .1.3.6.1.4.1.529.0.19 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This trap is sent when heartBeat fails to receive
configured number of heartBeat packets from
heartBeat servers"
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  3: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  4: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  5: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
EDESC
#
#
#
EVENT lanModemMovedToSuspectList .1.3.6.1.4.1.529.0.20 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This trap is sent to all the managers in the
alarm group when a lan modem (digital modem) is moved
to the suspect list.
Refer to the lanModemGroup.suspectLanModemTable
description."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  3: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  4: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  5: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
EDESC
#
#
#
EVENT dirdoListFailure .1.3.6.1.4.1.529.0.21 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This trap is sent to all the managers in the
alarm group when a T_ONLINE call comes in and 
no answer/subaddresses have been received."
Variables:
  1: sysName
     Syntax="Display String (SIZE(0..255))"
     Descr="An administratively-assigned name for this
managed node.  By convention, this is the node's
fully-qualified domain name."
EDESC
#
#
#
EVENT sysSlotStateChange .1.3.6.1.4.1.529.0.22 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This trap is sent to all the managers in the
slot group when a slot card's SLOT-STATE profile
is created due to slot insertion, or the current-state
transitions into oper-state-down, oper-state-up,
oper-state-dump, or oper-state-none states.

Refer to the slotTable.slotIndex and
slotTable.slotStatus descriptions."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
EDESC
#
#
#
EVENT powerSupplyStateChange .1.3.6.1.4.1.529.0.23 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This trap is sent to all the managers in the
alarm group when a power supply module is
added or removed."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
EDESC
#
#
#
EVENT powerSupplyOperationalStateChange .1.3.6.1.4.1.529.0.24 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This trap is sent to all the managers in the
alarm group when a power supply module incurs
failure(s)."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
EDESC
#
#
#
EVENT multiShelfStateChange .1.3.6.1.4.1.529.0.25 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This trap is sent to all the managers in the
slot group when a master shelf detects up/down
state changes of the peer shelf in a multi-shelf
configuration."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
EDESC
#
#
#
EVENT sysLastRestartReasonTrap .1.3.6.1.4.1.529.0.26 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This trap is sent to all managers having the
alarm condition enabled if the sysLastRestartReason
is not unknown (value of 0)."
Variables:
  1: sysLastRestartReason
     Syntax="Integer"
     Descr="The error code for the previous box restart. The error codes
are identical to ones obtained via fatal-history from the
debug monitor screen."
  2: fatalLogIndex
     Syntax="Integer"
     Descr="Dynamic index that reflects the index used in the 
Fatal LOG table, starting with the most oldest event."
  3: sysAbsoluteCurrentTime
     Syntax="Integer"
     Descr="The current system time in seconds since
January 1, 1990. Changing this value may 
result in a change of sysAbsoluteStartupTime
and not of sysSecsSinceStartup. The following
relationship holds:
sysAbsoluteCurrentTime - sysAbsoluteStartupTime = sysSecsSinceStartup."
EDESC
#
#
#
EVENT atmpMaxTunnelExceeded .1.3.6.1.4.1.529.0.27 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This is generated when the number of tunnels to a Home
Network exceeds the maximum tunnels.  atmpHAIpAddress is
the Home Agent and atmpHNProfileName is the name of the
connection profile."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
EDESC
#
#
#
EVENT atmpAgentErrorSentTrap .1.3.6.1.4.1.529.0.28 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This trap indicates errors at the Agent level or
with Tunnel creation."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
EDESC
#
#
#
EVENT atmpAgentErrorRecvTrap .1.3.6.1.4.1.529.0.29 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This trap indicates errors received from a peer
agent."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
EDESC
#
#
#
EVENT sysConfigChangeTrap .1.3.6.1.4.1.529.0.30 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This trap indicates a configuration change has occurred."
Variables:
  1: sysConfigChange
     Syntax="Display String"
     Descr="The name and security index (if available)
of the user who changed the configuration."
EDESC
#
#
#
EVENT sdtnPrimaryListEmptyTrap .1.3.6.1.4.1.529.0.31 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This trap indicates that the Transaction Server 
Primary list has become empty."
EDESC
#
#
#
EVENT sdtnSecondaryListEmptyTrap .1.3.6.1.4.1.529.0.32 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This trap indicates that the Transaction Server 
Secondary list has become empty."
EDESC
#
#
#
EVENT systemClockDrifted .1.3.6.1.4.1.529.0.33 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This trap indicates system clock has drifted but
could not be corrected.
This trap sent to managers when the alarm
and clock drifted params are set to YES in a
trap profile. If the clock drifting problem
persists, the trap will only be sent every
24 hours."
EDESC
#
#
#
EVENT suspectAccessResource .1.3.6.1.4.1.529.0.34 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The access resource suspected trap is sent to  
all the managers in the alarm group when a 
terminating resource such as modem become suspect. 
The suspected resource(s) are not assigned to
terminate calls until the resource in the available
pool exhausted."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  3: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  4: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  5: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
EDESC
#
#
#
EVENT watchdogWarningTrap .1.3.6.1.4.1.529.0.35 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This trap indicates that a watchdog warning has
occurred."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  3: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  4: sysAbsoluteCurrentTime
     Syntax="Integer"
     Descr="The current system time in seconds since
January 1, 1990. Changing this value may 
result in a change of sysAbsoluteStartupTime
and not of sysSecsSinceStartup. The following
relationship holds:
sysAbsoluteCurrentTime - sysAbsoluteStartupTime = sysSecsSinceStartup."
EDESC
#
#
#
EVENT slotCardResetTrap .1.3.6.1.4.1.529.0.36 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This trap is sent to all managers having the
alarm condition enabled"
Variables:
  1: fatalLogIndex
     Syntax="Integer"
     Descr="Dynamic index that reflects the index used in the 
Fatal LOG table, starting with the most oldest event."
  2: fatalLogReason
     Syntax="Integer"
     Descr="The reason for reset as reported by the system. For a more
detailed description consult the user manual."
  3: sysAbsoluteCurrentTime
     Syntax="Integer"
     Descr="The current system time in seconds since
January 1, 1990. Changing this value may 
result in a change of sysAbsoluteStartupTime
and not of sysSecsSinceStartup. The following
relationship holds:
sysAbsoluteCurrentTime - sysAbsoluteStartupTime = sysSecsSinceStartup."
  4: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
EDESC
#
#
#
EVENT controllerSwitchoverTrap .1.3.6.1.4.1.529.0.37 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"System controller changed. The primary system
controller changed from cntrReduSwitchIndex
to cntrReduCurrentIndex."
Variables:
  1: sysAbsoluteCurrentTime
     Syntax="Integer"
     Descr="The current system time in seconds since
January 1, 1990. Changing this value may 
result in a change of sysAbsoluteStartupTime
and not of sysSecsSinceStartup. The following
relationship holds:
sysAbsoluteCurrentTime - sysAbsoluteStartupTime = sysSecsSinceStartup."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  3: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  4: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
EDESC
#
#
#
EVENT callLogServChange .1.3.6.1.4.1.529.0.38 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This trap is sent to indicate that the call 
logging server has changed."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  3: sysAbsoluteCurrentTime
     Syntax="Integer"
     Descr="The current system time in seconds since
January 1, 1990. Changing this value may 
result in a change of sysAbsoluteStartupTime
and not of sysSecsSinceStartup. The following
relationship holds:
sysAbsoluteCurrentTime - sysAbsoluteStartupTime = sysSecsSinceStartup."
EDESC
#
#
#
EVENT voipGkChange .1.3.6.1.4.1.529.0.39 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This trap is sent when there is a change in the 
gatekeeper which is registered with the gateway
in a VOIP configuration."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  3: sysAbsoluteCurrentTime
     Syntax="Integer"
     Descr="The current system time in seconds since
January 1, 1990. Changing this value may 
result in a change of sysAbsoluteStartupTime
and not of sysSecsSinceStartup. The following
relationship holds:
sysAbsoluteCurrentTime - sysAbsoluteStartupTime = sysSecsSinceStartup."
EDESC
#
#
#
EVENT wanLineStateChange .1.3.6.1.4.1.529.0.40 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This trap is sent to indicate a change in the state
of a T1/E1 line : trunk, quiesced or disabled"
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  3: sysAbsoluteCurrentTime
     Syntax="Integer"
     Descr="The current system time in seconds since
January 1, 1990. Changing this value may 
result in a change of sysAbsoluteStartupTime
and not of sysSecsSinceStartup. The following
relationship holds:
sysAbsoluteCurrentTime - sysAbsoluteStartupTime = sysSecsSinceStartup."
EDESC
#
#
#
EVENT callLogDroppedPkt .1.3.6.1.4.1.529.0.41 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This trap indicates that a call logging packet was
dropped. A count value of 1 indicates the start
of dropping of call logging packets. A count value
of 0 indicates that all is well again."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
EDESC
#
#
#
EVENT megacoLinkStatusTrap .1.3.6.1.4.1.529.0.42 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This trap indicates that operational status
of a media gateway control link has changed."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
EDESC
#
#
#
EVENT sparingSlotStatusChange .1.3.6.1.4.1.529.0.43 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This trap indicates that the slot sparing state
has changed at sparingSlotLastStatusChange to
sparingSlotStatus.
The slot affected is sparingSlotPrimaryIndex."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  3: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  4: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  5: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
EDESC
#
#
#
EVENT sparingIfStatusChange .1.3.6.1.4.1.529.0.44 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This trap indicates that the interface sparing state
has changed at sparingIfLastStatusChange to
sparingIfStatus.
The slot affected is sparingIfPrimaryIndex."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  3: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  4: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  5: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
EDESC
#
#
#
EVENT cntrReduAvailTrap .1.3.6.1.4.1.529.0.45 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The redundancy availability for the controller in slot
cntrReduAvailSlotIndex changed from cntrReduAvailPrevState
to cntrReduAvailCurrState at cntrReduAvailLastTime."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  3: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  4: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
EDESC
#
#
#
EVENT snTrapVrrpIfStateChange .1.3.6.1.4.1.1991.0.34 "Status Alarms" Warning
FORMAT $1
SDESC
Short Descr.: "Foundry Trap: VRRP Interface Change"
Long Descr.:
"The SNMP trap that is generated when a VRRP routing device
changed state from master to backup or vice-versa."
Variables:
  1: snAgGblTrapMessage
     Syntax="Display String"
     Descr="A generic trap message string."
EDESC
#
#
#
EVENT eventForwardedCrit .1.3.6.1.4.1.2427.0.1 "Application Alert Alarms" Critical
FORMAT $8
SDESC
Long Descr.:  "Critical SNMP trap generated by ManageX
applications and services.  Source of ManageX message is $2"
EDESC
#
#
#
EVENT eventForwardedWarn .1.3.6.1.4.1.2427.0.2 "Application Alert Alarms" Minor
FORMAT $8
SDESC
Long Descr.:  "Warning SNMP trap generated by ManageX
applications and services.  Source of ManageX message is $2"
EDESC
#
#
#
EVENT eventForwardedInfo .1.3.6.1.4.1.2427.0.3 "Application Alert Alarms" Normal
FORMAT $8
SDESC
Long Descr.:  "Information SNMP trap generated by ManageX
applications and services.  Source of ManageX message is $2"
EDESC
#
#
#
EVENT commAlarm .1.3.6.1.4.1.2496.1.1.4.1 "SC2200" Critical
FORMAT Communication error : Component Desc=$12   Component Name=  $11   Severity= $7   AlarmSet= $5   CatDesc= $4  CatName=$3
EXEC SC2200_Control.pl "$x $X : $A : Component Desc=$12  : Component Name=  $11  : Severity= $7  : AlarmSet= $5  : CatDesc= $4 : CatName=$3"
SDESC
Long Descr.:
"Notification of a communication error. This shows which component had failed, the fault type and
severity level and the time it occurred from the MIB-II restart time. Because many of the failures need
to be described in detail for troubleshooting, an alarm log is written with supplemental information. The
trap and log are correlated based on the alarm time."
Variables:
  1: tpAlarmId
     Syntax="Integer (1..4294967295)"
     Descr="The alarm indentification"
  2: tpAlarmCatId
     Syntax="Integer (1..90000)"
     Descr="The alarm category identification number"
  3: tpAlarmCatName
     Syntax="Display String (SIZE(0..15))"
     Descr="Alarm category name"
  4: tpAlarmCatDesc
     Syntax="Display String (SIZE(0..128))"
     Descr="Alarm category description"
  5: tpAlarmSet
     Syntax="Integer"
     Descr="Alarm set or not."
  6: tpAlarmNotify
     Syntax="Integer"
     Descr="Alarm has been notified or not."
  7: tpAlarmSeverity
     Syntax="Integer"
     Descr="Alarm severity."
  8: tpAlarmReported
     Syntax="Integer"
     Descr="Alarm reported."
  9: tpComponentId
     Syntax="Integer (1..4294967295)"
     Descr="The component identification number. This number consists of two parts, the component type and
component instance. The most significant 2-bytes signifies the component type, and the lower 2 bytes
is the sequential instance of the type."
 10: tpComponentType
     Syntax="Integer (1..4294967295)"
     Descr="The component type identification number.i"
 11: tpCompMMLName
     Syntax="Display String (SIZE(1..20))"
     Descr="This is a short notation of the component name. It is also the MML (man-machine language) name that
can be used in the MML session."
 12: tpCompDesc
     Syntax="Display String (SIZE(0..128))"
     Descr="Component description."
 13: tpCompParentId
     Syntax="Integer (1..4294967295)"
     Descr="The component parent identification."
 14: tpAlarmTime
     Syntax="Counter"
     Descr="Time when alarm occured."
EDESC
#
#
#
EVENT qualityOfService .1.3.6.1.4.1.2496.1.1.4.2 "SC2200" Warning
FORMAT Component Desc=$12   Component Name=  $11   Severity= $7   AlarmSet= $5   CatDesc= $4  CatName=$3
SDESC
Long Descr.:
"Notification when there is a failure in the quality of service. This shows which component had failed, its
operational status, fault type and severity level and the time it occurred from the MIB-II restart time.
Because many of the failures need to be described in detail for troubleshooting, an alarm log is written
with supplemental information. The trap and log are correlated based on the alarm time."
Variables:
  1: tpAlarmId
     Syntax="Integer (1..4294967295)"
     Descr="The alarm indentification"
  2: tpAlarmCatId
     Syntax="Integer (1..90000)"
     Descr="The alarm category identification number"
  3: tpAlarmCatName
     Syntax="Display String (SIZE(0..15))"
     Descr="Alarm category name"
  4: tpAlarmCatDesc
     Syntax="Display String (SIZE(0..128))"
     Descr="Alarm category description"
  5: tpAlarmSet
     Syntax="Integer"
     Descr="Alarm set or not."
  6: tpAlarmNotify
     Syntax="Integer"
     Descr="Alarm has been notified or not."
  7: tpAlarmSeverity
     Syntax="Integer"
     Descr="Alarm severity."
  8: tpAlarmReported
     Syntax="Integer"
     Descr="Alarm reported."
  9: tpComponentId
     Syntax="Integer (1..4294967295)"
     Descr="The component identification number. This number consists of two parts, the component type and
component instance. The most significant 2-bytes signifies the component type, and the lower 2 bytes
is the sequential instance of the type."
 10: tpComponentType
     Syntax="Integer (1..4294967295)"
     Descr="The component type identification number.i"
 11: tpCompMMLName
     Syntax="Display String (SIZE(1..20))"
     Descr="This is a short notation of the component name. It is also the MML (man-machine language) name that
can be used in the MML session."
 12: tpCompDesc
     Syntax="Display String (SIZE(0..128))"
     Descr="Component description."
 13: tpCompParentId
     Syntax="Integer (1..4294967295)"
     Descr="The component parent identification."
 14: tpAlarmTime
     Syntax="Counter"
     Descr="Time when alarm occured."
EDESC
#
#
#
EVENT processingError .1.3.6.1.4.1.2496.1.1.4.3 "SC2200" Warning
FORMAT Notification of a process fault Category: Component Desc=$12   Component Name=  $11   Severity= $7   AlarmSet= $5   CatDesc= $4  CatName=$3
SDESC
Long Descr.:
"Notification of a process fault. This shows which component had failed, its operational status, fault type
and severity level and the time it occurred from the MIB-II restart time. Because many of the failures
need to be described in detail for troubleshooting, an alarm log is written with supplemental information.
The trap and log are correlated based on the alarm time."
Variables:
  1: tpAlarmId
     Syntax="Integer (1..4294967295)"
     Descr="The alarm indentification"
  2: tpAlarmCatId
     Syntax="Integer (1..90000)"
     Descr="The alarm category identification number"
  3: tpAlarmCatName
     Syntax="Display String (SIZE(0..15))"
     Descr="Alarm category name"
  4: tpAlarmCatDesc
     Syntax="Display String (SIZE(0..128))"
     Descr="Alarm category description"
  5: tpAlarmSet
     Syntax="Integer"
     Descr="Alarm set or not."
  6: tpAlarmNotify
     Syntax="Integer"
     Descr="Alarm has been notified or not."
  7: tpAlarmSeverity
     Syntax="Integer"
     Descr="Alarm severity."
  8: tpAlarmReported
     Syntax="Integer"
     Descr="Alarm reported."
  9: tpComponentId
     Syntax="Integer (1..4294967295)"
     Descr="The component identification number. This number consists of two parts, the component type and
component instance. The most significant 2-bytes signifies the component type, and the lower 2 bytes
is the sequential instance of the type."
 10: tpComponentType
     Syntax="Integer (1..4294967295)"
     Descr="The component type identification number.i"
 11: tpCompMMLName
     Syntax="Display String (SIZE(1..20))"
     Descr="This is a short notation of the component name. It is also the MML (man-machine language) name that
can be used in the MML session."
 12: tpCompDesc
     Syntax="Display String (SIZE(0..128))"
     Descr="Component description."
 13: tpCompParentId
     Syntax="Integer (1..4294967295)"
     Descr="The component parent identification."
 14: tpAlarmTime
     Syntax="Counter"
     Descr="Time when alarm occured."
EDESC
#
#
#
EVENT equipmentError .1.3.6.1.4.1.2496.1.1.4.4 "SC2200" Warning
FORMAT Notification of an equipment error Category: Component Desc=$12   Component Name=  $11   Severity= $7   AlarmSet= $5   CatDesc= $4  CatName=$3
EXEC /export/home/admin/Tools/SC2200/SC2200_Control.pl "$x $X : $A : Component Desc= $12  : Component Name= $11  : Severity= $7  : AlarmSet= $5  : CatDesc= $4 : CatName=$3"
SDESC
Long Descr.:
"Notification of an equipment error in the TransPath system. This shows which component had failed, its
operational status, fault type and severity level and the time it occurred from the MIB-II restart time.
Because many of the failures need to be described in detail for troubleshooting, an alarm log is written
with supplemental information. The trap and log are correlated based on the alarm time."
Variables:
  1: tpAlarmId
     Syntax="Integer (1..4294967295)"
     Descr="The alarm indentification"
  2: tpAlarmCatId
     Syntax="Integer (1..90000)"
     Descr="The alarm category identification number"
  3: tpAlarmCatName
     Syntax="Display String (SIZE(0..15))"
     Descr="Alarm category name"
  4: tpAlarmCatDesc
     Syntax="Display String (SIZE(0..128))"
     Descr="Alarm category description"
  5: tpAlarmSet
     Syntax="Integer"
     Descr="Alarm set or not."
  6: tpAlarmNotify
     Syntax="Integer"
     Descr="Alarm has been notified or not."
  7: tpAlarmSeverity
     Syntax="Integer"
     Descr="Alarm severity."
  8: tpAlarmReported
     Syntax="Integer"
     Descr="Alarm reported."
  9: tpComponentId
     Syntax="Integer (1..4294967295)"
     Descr="The component identification number. This number consists of two parts, the component type and
component instance. The most significant 2-bytes signifies the component type, and the lower 2 bytes
is the sequential instance of the type."
 10: tpComponentType
     Syntax="Integer (1..4294967295)"
     Descr="The component type identification number.i"
 11: tpCompMMLName
     Syntax="Display String (SIZE(1..20))"
     Descr="This is a short notation of the component name. It is also the MML (man-machine language) name that
can be used in the MML session."
 12: tpCompDesc
     Syntax="Display String (SIZE(0..128))"
     Descr="Component description."
 13: tpCompParentId
     Syntax="Integer (1..4294967295)"
     Descr="The component parent identification."
 14: tpAlarmTime
     Syntax="Counter"
     Descr="Time when alarm occured."
EDESC
#
#
#
EVENT environmentError .1.3.6.1.4.1.2496.1.1.4.5 "SC2200" Warning
FORMAT Environment problem: Component Desc=$12   Component Name=  $11   Severity= $7   AlarmSet= $5   CatDesc= $4  CatName=$3
SDESC
Long Descr.:
"Notification of an TransPath system.s environment problem. This shows which component had failed,
its operational status, fault type and severity level and the time it occurred from the MIB-II restart time.
Because many of the failures need to be described in detail for troubleshooting, an alarm log is written
with supplemental information. The trap and log are correlated based on the alarm time."
Variables:
  1: tpAlarmId
     Syntax="Integer (1..4294967295)"
     Descr="The alarm indentification"
  2: tpAlarmCatId
     Syntax="Integer (1..90000)"
     Descr="The alarm category identification number"
  3: tpAlarmCatName
     Syntax="Display String (SIZE(0..15))"
     Descr="Alarm category name"
  4: tpAlarmCatDesc
     Syntax="Display String (SIZE(0..128))"
     Descr="Alarm category description"
  5: tpAlarmSet
     Syntax="Integer"
     Descr="Alarm set or not."
  6: tpAlarmNotify
     Syntax="Integer"
     Descr="Alarm has been notified or not."
  7: tpAlarmSeverity
     Syntax="Integer"
     Descr="Alarm severity."
  8: tpAlarmReported
     Syntax="Integer"
     Descr="Alarm reported."
  9: tpComponentId
     Syntax="Integer (1..4294967295)"
     Descr="The component identification number. This number consists of two parts, the component type and
component instance. The most significant 2-bytes signifies the component type, and the lower 2 bytes
is the sequential instance of the type."
 10: tpComponentType
     Syntax="Integer (1..4294967295)"
     Descr="The component type identification number.i"
 11: tpCompMMLName
     Syntax="Display String (SIZE(1..20))"
     Descr="This is a short notation of the component name. It is also the MML (man-machine language) name that
can be used in the MML session."
 12: tpCompDesc
     Syntax="Display String (SIZE(0..128))"
     Descr="Component description."
 13: tpCompParentId
     Syntax="Integer (1..4294967295)"
     Descr="The component parent identification."
 14: tpAlarmTime
     Syntax="Counter"
     Descr="Time when alarm occured."
EDESC
#
#
#
EVENT bgpEstablishedV1 .1.3.6.1.4.1.2636.0.1 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The BGP Established event is generated when
the BGP FSM enters the ESTABLISHED state."
Variables:
  1: bgpPeerLastError
     Syntax="Partial Object Name"
  2: bgpPeerState
     Syntax="Partial Object Name"
EDESC
#
#
#
EVENT bgpBackwardTransitionV1 .1.3.6.1.4.1.2636.0.2 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The BGPBackwardTransition Event is generated
when the BGP FSM moves from a higher numbered
state to a lower numbered state."
Variables:
  1: bgpPeerLastError
     Syntax="Partial Object Name"
  2: bgpPeerState
     Syntax="Partial Object Name"
EDESC
#
#
#
EVENT jnxPowerSupplyFailureV1 .1.3.6.1.4.1.2636.0.3 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A jnxPowerSupplyFailure trap signifies that
the specified power supply in the chassis has
been in the failure (bad DC output) condition."
Variables:
  1: jnxContentsContainerIndex
     Syntax="Partial Object Name"
  2: jnxContentsL1Index
     Syntax="Partial Object Name"
  3: jnxContentsL2Index
     Syntax="Partial Object Name"
  4: jnxContentsL3Index
     Syntax="Partial Object Name"
  5: jnxContentsDescr
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this
subject."
EDESC
#
#
#
EVENT jnxFanFailureV1 .1.3.6.1.4.1.2636.0.4 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A jnxOverTemperature trap signifies that the
specified hardware component in the chassis has
experienced over temperature condition."
Variables:
  1: jnxContentsContainerIndex
     Syntax="Partial Object Name"
  2: jnxContentsL1Index
     Syntax="Partial Object Name"
  3: jnxContentsL2Index
     Syntax="Partial Object Name"
  4: jnxContentsL3Index
     Syntax="Partial Object Name"
  5: jnxContentsDescr
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this
subject."
EDESC
#
#
#
EVENT jnxOverTemperatureV1 .1.3.6.1.4.1.2636.0.5 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A jnxOverTemperature trap signifies that the 
specified hardware component in the chassis has 
experienced over temperature condition."
Variables:
  1: jnxContentsContainerIndex
     Syntax="Partial Object Name"
  2: jnxContentsL1Index
     Syntax="Partial Object Name"
  3: jnxContentsL2Index
     Syntax="Partial Object Name"
  4: jnxContentsL3Index
     Syntax="Partial Object Name"
  5: jnxContentsDescr
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this
subject."
EDESC
#
#
#
EVENT mplsLspUpV1 .1.3.6.1.4.1.2636.0.6 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An mplsLspUp trap signifies that the
specified LSP is up. The current active
path for the LSP is mplsPathName."
Variables:
  1: mplsLspName
     Syntax="Partial Object Name"
  2: mplsPathName
     Syntax="Partial Object Name"
EDESC
#
#
#
EVENT mplsLspDownV1 .1.3.6.1.4.1.2636.0.7 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An mplsLspDown trap signifies that the
specified LSP is down, because the current
active path mplsPathName went down."
Variables:
  1: mplsLspName
     Syntax="Partial Object Name"
  2: mplsPathName
     Syntax="Partial Object Name"
EDESC
#
#
#
EVENT mplsLspChangeV1 .1.3.6.1.4.1.2636.0.8 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An mplsLspChange trap signifies that the
the specified LSP has switched traffic to
the new active path 'toLspPath'. The LSP maintains
up state before and after the switch over"
Variables:
  1: mplsLspName
     Syntax="Partial Object Name"
  2: mplsPathName
     Syntax="Partial Object Name"
EDESC
#
#
#
EVENT ospfVirtIfStateChangeV1 .1.3.6.1.4.1.2636.0.9 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An ospfIfStateChange trap signifies that there
has  been a change in the state of an OSPF vir-
tual interface.
This trap should be generated when  the  inter-
face  state  regresses  (e.g., goes from Point-
to-Point to Down) or progresses to  a  terminal
state (i.e., Point-to-Point)."
Variables:
  1: ospfRouterId
     Syntax="Partial Object Name"
  2: ospfVirtIfAreaId
     Syntax="Partial Object Name"
  3: ospfVirtIfNeighbor
     Syntax="Partial Object Name"
  4: ospfVirtIfState
     Syntax="Partial Object Name"
EDESC
#
#
#
EVENT ospfNbrStateChangeV1 .1.3.6.1.4.1.2636.0.10 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An  ospfNbrStateChange  trap  signifies   that
there  has been a change in the state of a non-
virtual OSPF neighbor.   This  trap  should  be
generated  when  the  neighbor  state regresses
(e.g., goes from Attempt or Full  to  1-Way  or
Down)  or progresses to a terminal state (e.g.,
2-Way or Full).  When an  neighbor  transitions
from  or  to Full on non-broadcast multi-access
and broadcast networks, the trap should be gen-
erated  by the designated router.  A designated
router transitioning to Down will be  noted  by
ospfIfStateChange."
Variables:
  1: ospfRouterId
     Syntax="Partial Object Name"
  2: ospfNbrIpAddr
     Syntax="Partial Object Name"
  3: ospfNbrAddressLessIndex
     Syntax="Partial Object Name"
  4: ospfNbrRtrId
     Syntax="Partial Object Name"
  5: ospfNbrState
     Syntax="Partial Object Name"
EDESC
#
#
#
EVENT ospfVirtNbrStateChangeV1 .1.3.6.1.4.1.2636.0.11 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An ospfIfStateChange trap signifies that there
has  been a change in the state of an OSPF vir-
tual neighbor.  This trap should  be  generated
when  the  neighbor state regresses (e.g., goes
from Attempt or  Full  to  1-Way  or  Down)  or
progresses to a terminal state (e.g., Full)."
Variables:
  1: ospfRouterId
     Syntax="Partial Object Name"
  2: ospfVirtNbrArea
     Syntax="Partial Object Name"
  3: ospfVirtNbrRtrId
     Syntax="Partial Object Name"
  4: ospfVirtNbrState
     Syntax="Partial Object Name"
EDESC
#
#
#
EVENT ospfIfConfigErrorV1 .1.3.6.1.4.1.2636.0.12 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An ospfIfConfigError  trap  signifies  that  a
packet  has  been received on a non-virtual in-
terface  from  a  router  whose   configuration
parameters  conflict  with this router's confi-
guration parameters.  Note that the  event  op-
tionMismatch  should  cause  a  trap only if it
prevents an adjacency from forming."
Variables:
  1: ospfRouterId
     Syntax="Partial Object Name"
  2: ospfIfIpAddress
     Syntax="Partial Object Name"
  3: ospfAddressLessIf
     Syntax="Partial Object Name"
  4: ospfPacketSrc
     Syntax="Partial Object Name"
  5: ospfConfigErrorType
     Syntax="Partial Object Name"
  6: ospfPacketType
     Syntax="Partial Object Name"
EDESC
#
#
#
EVENT ospfVirtIfConfigErrorV1 .1.3.6.1.4.1.2636.0.13 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An ospfConfigError trap signifies that a pack-
et  has  been  received  on a virtual interface
from a router  whose  configuration  parameters
conflict   with   this  router's  configuration
parameters.  Note that the event optionMismatch
should  cause a trap only if it prevents an ad-
jacency from forming."
Variables:
  1: ospfRouterId
     Syntax="Partial Object Name"
  2: ospfVirtIfAreaId
     Syntax="Partial Object Name"
  3: ospfVirtIfNeighbor
     Syntax="Partial Object Name"
  4: ospfConfigErrorType
     Syntax="Partial Object Name"
  5: ospfPacketType
     Syntax="Partial Object Name"
EDESC
#
#
#
EVENT ospfIfAuthFailureV1 .1.3.6.1.4.1.2636.0.14 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An ospfIfAuthFailure  trap  signifies  that  a
packet  has  been received on a non-virtual in-
terface from a router whose authentication  key
or  authentication  type  conflicts  with  this
router's authentication key  or  authentication
type."
Variables:
  1: ospfRouterId
     Syntax="Partial Object Name"
  2: ospfIfIpAddress
     Syntax="Partial Object Name"
  3: ospfAddressLessIf
     Syntax="Partial Object Name"
  4: ospfPacketSrc
     Syntax="Partial Object Name"
  5: ospfConfigErrorType
     Syntax="Partial Object Name"
  6: ospfPacketType
     Syntax="Partial Object Name"
EDESC
#
#
#
EVENT ospfVirtIfAuthFailureV1 .1.3.6.1.4.1.2636.0.15 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An ospfVirtIfAuthFailure trap signifies that a
packet has been received on a virtual interface
from a router whose authentication key  or  au-
thentication  type conflicts with this router's
authentication key or authentication type."
Variables:
  1: ospfRouterId
     Syntax="Partial Object Name"
  2: ospfVirtIfAreaId
     Syntax="Partial Object Name"
  3: ospfVirtIfNeighbor
     Syntax="Partial Object Name"
  4: ospfConfigErrorType
     Syntax="Partial Object Name"
  5: ospfPacketType
     Syntax="Partial Object Name"
EDESC
#
#
#
EVENT ospfIfRxBadPacketV1 .1.3.6.1.4.1.2636.0.16 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An ospfIfRxBadPacket trap  signifies  that  an
OSPF  packet has been received on a non-virtual
interface that cannot be parsed."
Variables:
  1: ospfRouterId
     Syntax="Partial Object Name"
  2: ospfIfIpAddress
     Syntax="Partial Object Name"
  3: ospfAddressLessIf
     Syntax="Partial Object Name"
  4: ospfPacketSrc
     Syntax="Partial Object Name"
  5: ospfPacketType
     Syntax="Partial Object Name"
EDESC
#
#
#
EVENT ospfVirtIfRxBadPacketV1 .1.3.6.1.4.1.2636.0.17 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An ospfRxBadPacket trap signifies that an OSPF
packet has been received on a virtual interface
that cannot be parsed."
Variables:
  1: ospfRouterId
     Syntax="Partial Object Name"
  2: ospfVirtIfAreaId
     Syntax="Partial Object Name"
  3: ospfVirtIfNeighbor
     Syntax="Partial Object Name"
  4: ospfPacketType
     Syntax="Partial Object Name"
EDESC
#
#
#
EVENT ospfTxRetransmitV1 .1.3.6.1.4.1.2636.0.18 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An ospfTxRetransmit  trap  signifies  than  an
OSPF  packet  has  been retransmitted on a non-
virtual interface.  All packets that may be re-
transmitted  are associated with an LSDB entry.
The LS type, LS ID, and Router ID are  used  to
identify the LSDB entry."
Variables:
  1: ospfRouterId
     Syntax="Partial Object Name"
  2: ospfIfIpAddress
     Syntax="Partial Object Name"
  3: ospfAddressLessIf
     Syntax="Partial Object Name"
  4: ospfNbrRtrId
     Syntax="Partial Object Name"
  5: ospfPacketType
     Syntax="Partial Object Name"
  6: ospfLsdbType
     Syntax="Partial Object Name"
  7: ospfLsdbLsid
     Syntax="Partial Object Name"
  8: ospfLsdbRouterId
     Syntax="Partial Object Name"
EDESC
#
#
#
EVENT ospfVirtIfTxRetransmitV1 .1.3.6.1.4.1.2636.0.19 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An ospfTxRetransmit  trap  signifies  than  an
OSPF packet has been retransmitted on a virtual
interface.  All packets that may be retransmit-
ted  are  associated with an LSDB entry. The LS
type, LS ID, and Router ID are used to identify
the LSDB entry."
Variables:
  1: ospfRouterId
     Syntax="Partial Object Name"
  2: ospfVirtIfAreaId
     Syntax="Partial Object Name"
  3: ospfVirtIfNeighbor
     Syntax="Partial Object Name"
  4: ospfPacketType
     Syntax="Partial Object Name"
  5: ospfLsdbType
     Syntax="Partial Object Name"
  6: ospfLsdbLsid
     Syntax="Partial Object Name"
  7: ospfLsdbRouterId
     Syntax="Partial Object Name"
EDESC
#
#
#
EVENT ospfOriginateLsaV1 .1.3.6.1.4.1.2636.0.20 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An ospfOriginateLsa trap signifies that a  new
LSA  has  been originated by this router.  This
trap should not be invoked for simple refreshes
of  LSAs  (which happesn every 30 minutes), but
instead will only be invoked  when  an  LSA  is
(re)originated due to a topology change.  Addi-
tionally, this trap does not include LSAs  that
are  being  flushed  because  they have reached
MaxAge."
Variables:
  1: ospfRouterId
     Syntax="Partial Object Name"
  2: ospfLsdbAreaId
     Syntax="Partial Object Name"
  3: ospfLsdbType
     Syntax="Partial Object Name"
  4: ospfLsdbLsid
     Syntax="Partial Object Name"
  5: ospfLsdbRouterId
     Syntax="Partial Object Name"
EDESC
#
#
#
EVENT ospfMaxAgeLsaV1 .1.3.6.1.4.1.2636.0.21 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An ospfMaxAgeLsa trap signifies  that  one  of
the LSA in the router's link-state database has
aged to MaxAge."
Variables:
  1: ospfRouterId
     Syntax="Partial Object Name"
  2: ospfLsdbAreaId
     Syntax="Partial Object Name"
  3: ospfLsdbType
     Syntax="Partial Object Name"
  4: ospfLsdbLsid
     Syntax="Partial Object Name"
  5: ospfLsdbRouterId
     Syntax="Partial Object Name"
EDESC
#
#
#
EVENT ospfLsdbOverflowV1 .1.3.6.1.4.1.2636.0.22 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An ospfLsdbOverflow trap  signifies  that  the
number of LSAs in the router's link-state data-
base has exceeded ospfExtLsdbLimit."
Variables:
  1: ospfRouterId
     Syntax="Partial Object Name"
  2: ospfExtLsdbLimit
     Syntax="Partial Object Name"
EDESC
#
#
#
EVENT ospfLsdbApproachingOverflowV1 .1.3.6.1.4.1.2636.0.23 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An ospfLsdbApproachingOverflow trap  signifies
that  the  number of LSAs in the router's link-
state database has exceeded ninety  percent  of
ospfExtLsdbLimit."
Variables:
  1: ospfRouterId
     Syntax="Partial Object Name"
  2: ospfExtLsdbLimit
     Syntax="Partial Object Name"
EDESC
#
#
#
EVENT ospfIfStateChangeV1 .1.3.6.1.4.1.2636.0.24 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An ospfIfStateChange trap signifies that there
has been a change in the state of a non-virtual
OSPF interface. This trap should  be  generated
when  the interface state regresses (e.g., goes
from Dr to Down) or progresses  to  a  terminal
state  (i.e.,  Point-to-Point, DR Other, Dr, or
Backup)."
Variables:
  1: ospfRouterId
     Syntax="Partial Object Name"
  2: ospfIfIpAddress
     Syntax="Partial Object Name"
  3: ospfAddressLessIf
     Syntax="Partial Object Name"
  4: ospfIfState
     Syntax="Partial Object Name"
EDESC
#
#
#
EVENT jnxAirFilterChange .1.3.6.1.4.1.2636.0.25 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A jnxAirFilterChange trap signifies that the
agent has detected that the air filter in the
chassis needs to be changed."
Variables:
  1: jnxAirFilterCheck
     Syntax="Partial Object Name"
  2: jnxAirFilterService
     Syntax="Partial Object Name"
  3: jnxAirFilterAge
     Syntax="Partial Object Name"
EDESC
#
#
#
EVENT mplsLspUp .1.3.6.1.4.1.2636.3.2.4.1 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An mplsLspUp trap signifies that the SNMPv2
entity, acting in an agent role, has detected
that the specified LSP is up. The current active
path for the LSP is mplsPathName."
Variables:
  1: mplsLspName
     Syntax="Display String (SIZE(0..32))"
     Descr="Name of the Label Switched Path."
  2: mplsPathName
     Syntax="Display String (SIZE(0..16))"
     Descr="The name of the active path for this LSP, if
any.  If there is none, the name should be
empty; in that case, the rest of the fields
in mplsLspEntry are meaningless."
EDESC
#
#
#
EVENT mplsLspDown .1.3.6.1.4.1.2636.3.2.4.2 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An mplsLspDown trap signifies that the SNMPv2
entity, acting in an agent role, has detected
that the specified LSP is down, because the current
active path mplsPathName went down."
Variables:
  1: mplsLspName
     Syntax="Display String (SIZE(0..32))"
     Descr="Name of the Label Switched Path."
  2: mplsPathName
     Syntax="Display String (SIZE(0..16))"
     Descr="The name of the active path for this LSP, if
any.  If there is none, the name should be
empty; in that case, the rest of the fields
in mplsLspEntry are meaningless."
EDESC
#
#
#
EVENT mplsLspChange .1.3.6.1.4.1.2636.3.2.4.3 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An mplsLspChange trap signifies that the
SNMPv2 entity, acting in an agent role, has
detected that the specified LSP has switched traffic
from old active path 'fromLspPath' to the new active
path 'toLspPath'."
Variables:
  1: mplsLspName
     Syntax="Display String (SIZE(0..32))"
     Descr="Name of the Label Switched Path."
  2: mplsPathName
     Syntax="Display String (SIZE(0..16))"
     Descr="The name of the active path for this LSP, if
any.  If there is none, the name should be
empty; in that case, the rest of the fields
in mplsLspEntry are meaningless."
  3: mplsPathName
     Syntax="Display String (SIZE(0..16))"
     Descr="The name of the active path for this LSP, if
any.  If there is none, the name should be
empty; in that case, the rest of the fields
in mplsLspEntry are meaningless."
EDESC
#
#
#
EVENT mplsLspPathDown .1.3.6.1.4.1.2636.3.2.4.4 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An mplsLspPathDown trap signifies that the 
specified path mplsPathName for the specified
LSP mplsLspName went down"
Variables:
  1: mplsLspName
     Syntax="Display String (SIZE(32))"
     Descr="Name of the Label Switched Path."
  2: mplsPathName
     Syntax="Display String (SIZE(0..16))"
     Descr="The name of the active path for this LSP, if
any.  If there is none, the name should be
empty; in that case, the rest of the fields
in mplsLspEntry are meaningless."
EDESC
#
#
#
EVENT mplsLspPathUp .1.3.6.1.4.1.2636.3.2.4.5 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An mplsLspPathUp trap signifies that the 
specified path mplsPathName for the specified
LSP mplsLspName came up"
Variables:
  1: mplsLspName
     Syntax="Display String (SIZE(32))"
     Descr="Name of the Label Switched Path."
  2: mplsPathName
     Syntax="Display String (SIZE(0..16))"
     Descr="The name of the active path for this LSP, if
any.  If there is none, the name should be
empty; in that case, the rest of the fields
in mplsLspEntry are meaningless."
EDESC
#
#
#
EVENT apsEventSwitchover .1.3.6.1.4.1.2636.3.24.2.0.1 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An apsEventSwitchover notification is sent when the
value of an instance of apsChanStatusSwitchovers increments."
Variables:
  1: apsChanStatusSwitchovers
     Syntax="Counter"
     Descr="When queried with index value apsChanConfigNumber other than 0,
this object will return the number of times this channel has


switched to the protection line.

When queried with index value apsChanConfigNumber set to 0,
which is the protection line, this object will return the
number of times that any working channel has been switched
back to the working line from this protection line.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
apsChanStatusDiscontinuityTime."
  2: apsChanStatusCurrent
     Syntax="Bits"
     Descr="Indicates the current state of the port.

lockedOut

This bit, when applied to a working channel, indicates that
the channel is prevented from switching to the protection line.
When applied to the null channel, this bit indicates that no
working channel may switch to the protection line.

sd

A signal degrade condition is in effect.

sf

A signal failure condition is in effect.

switched

The switched bit is applied to a working channel if that
channel is currently switched to the protection line.


wtr

A Wait-to-Restore state is in effect."
EDESC
#
#
#
EVENT apsEventModeMismatch .1.3.6.1.4.1.2636.3.24.2.0.2 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An apsEventModeMismatch notification is sent when the
value of an instance of apsStatusModeMismatches increments."
Variables:
  1: apsStatusModeMismatches
     Syntax="Counter"
     Descr="A count of Mode Mismatch conditions.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
apsStatusDiscontinuityTime."
  2: apsStatusCurrent
     Syntax="Bits"
     Descr="The current status of the APS group.

modeMismatch

Modes other than 1+1 unidirectional monitor protection line
K2 bit 5, which indicates the architecture and K2 bits
6-8, which indicate if the mode is unidirectional or
bidirectional. A conflict between the current local mode
and the received K2 mode information constitutes a
mode mismatch.

channelMismatch

This bit indicates a  mismatch between the transmitted K1 channel
and the received K2 channel has been detected.

psbf

This bit indicates a Protection Switch Byte Failure (PSBF) is
in effect. This condition occurs when either an inconsistent
APS byte or an invalid code is detected. An inconsistent APS
byte occurs when no three consecutive K1 bytes of the last 12
successive frames are identical, starting with the last frame
containing a previously consistent byte. An invalid code occurs
when the incoming K1 byte contains an unused code or a code


irrelevant for the specific switching operation (e.g., Reverse
Request while no switching request is outstanding) in three
consecutive frames. An invalid code also occurs when the incoming
K1 byte contains an invalid channel number in three consecutive
frames.

feplf

Modes other than 1+1 unidirectional monitor the K1 byte
for Far-End Protection-Line failures. A Far-End
Protection-Line defect is declared based on receiving
SF on the protection line.

extraTraffic

This bit indicates whether extra traffic is currently being
accepted on the protection line. "
EDESC
#
#
#
EVENT apsEventChannelMismatch .1.3.6.1.4.1.2636.3.24.2.0.3 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An apsEventChannelMismatch notification is sent when the
value of an instance of apsStatusChannelMismatches increments."
Variables:
  1: apsStatusChannelMismatches
     Syntax="Counter"
     Descr="A count of Channel Mismatch conditions.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
apsStatusDiscontinuityTime."
  2: apsStatusCurrent
     Syntax="Bits"
     Descr="The current status of the APS group.

modeMismatch

Modes other than 1+1 unidirectional monitor protection line
K2 bit 5, which indicates the architecture and K2 bits
6-8, which indicate if the mode is unidirectional or
bidirectional. A conflict between the current local mode
and the received K2 mode information constitutes a
mode mismatch.

channelMismatch

This bit indicates a  mismatch between the transmitted K1 channel
and the received K2 channel has been detected.

psbf

This bit indicates a Protection Switch Byte Failure (PSBF) is
in effect. This condition occurs when either an inconsistent
APS byte or an invalid code is detected. An inconsistent APS
byte occurs when no three consecutive K1 bytes of the last 12
successive frames are identical, starting with the last frame
containing a previously consistent byte. An invalid code occurs
when the incoming K1 byte contains an unused code or a code


irrelevant for the specific switching operation (e.g., Reverse
Request while no switching request is outstanding) in three
consecutive frames. An invalid code also occurs when the incoming
K1 byte contains an invalid channel number in three consecutive
frames.

feplf

Modes other than 1+1 unidirectional monitor the K1 byte
for Far-End Protection-Line failures. A Far-End
Protection-Line defect is declared based on receiving
SF on the protection line.

extraTraffic

This bit indicates whether extra traffic is currently being
accepted on the protection line. "
EDESC
#
#
#
EVENT apsEventPSBF .1.3.6.1.4.1.2636.3.24.2.0.4 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An apsEventPSBF notification is sent when the
value of an instance of apsStatusPSBFs increments."
Variables:
  1: apsStatusPSBFs
     Syntax="Counter"
     Descr="A count of Protection Switch Byte Failure conditions.
This condition occurs when either an inconsistent APS
byte or an invalid code is detected. An inconsistent APS
byte occurs when no three consecutive K1 bytes of the last
12 successive frames are identical, starting with the last
frame containing a previously consistent byte. An invalid
code occurs when the incoming K1 byte contains an unused
code or a code irrelevant for the specific switching operation
(e.g., Reverse Request while no switching request is outstanding)
in three consecutive frames. An invalid code also occurs
when the incoming K1 byte contains an invalid channel number
in three consecutive frames.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
apsStatusDiscontinuityTime."
  2: apsStatusCurrent
     Syntax="Bits"
     Descr="The current status of the APS group.

modeMismatch

Modes other than 1+1 unidirectional monitor protection line
K2 bit 5, which indicates the architecture and K2 bits
6-8, which indicate if the mode is unidirectional or
bidirectional. A conflict between the current local mode
and the received K2 mode information constitutes a
mode mismatch.

channelMismatch

This bit indicates a  mismatch between the transmitted K1 channel
and the received K2 channel has been detected.

psbf

This bit indicates a Protection Switch Byte Failure (PSBF) is
in effect. This condition occurs when either an inconsistent
APS byte or an invalid code is detected. An inconsistent APS
byte occurs when no three consecutive K1 bytes of the last 12
successive frames are identical, starting with the last frame
containing a previously consistent byte. An invalid code occurs
when the incoming K1 byte contains an unused code or a code


irrelevant for the specific switching operation (e.g., Reverse
Request while no switching request is outstanding) in three
consecutive frames. An invalid code also occurs when the incoming
K1 byte contains an invalid channel number in three consecutive
frames.

feplf

Modes other than 1+1 unidirectional monitor the K1 byte
for Far-End Protection-Line failures. A Far-End
Protection-Line defect is declared based on receiving
SF on the protection line.

extraTraffic

This bit indicates whether extra traffic is currently being
accepted on the protection line. "
EDESC
#
#
#
EVENT apsEventFEPLF .1.3.6.1.4.1.2636.3.24.2.0.5 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An apsEventFEPLFs notification is sent when the
value of an instance of apsStatusFEPLFs increments."
Variables:
  1: apsStatusFEPLFs
     Syntax="Counter"
     Descr="A count of Far-End Protection-Line Failure conditions.
This condition is declared based on receiving SF on
the protection line in the K1 byte.

Discontinuities in the value of this counter can occur at
re-initialization of the management system, and at other
times as indicated by the value of
apsStatusDiscontinuityTime."
  2: apsStatusCurrent
     Syntax="Bits"
     Descr="The current status of the APS group.

modeMismatch

Modes other than 1+1 unidirectional monitor protection line
K2 bit 5, which indicates the architecture and K2 bits
6-8, which indicate if the mode is unidirectional or
bidirectional. A conflict between the current local mode
and the received K2 mode information constitutes a
mode mismatch.

channelMismatch

This bit indicates a  mismatch between the transmitted K1 channel
and the received K2 channel has been detected.

psbf

This bit indicates a Protection Switch Byte Failure (PSBF) is
in effect. This condition occurs when either an inconsistent
APS byte or an invalid code is detected. An inconsistent APS
byte occurs when no three consecutive K1 bytes of the last 12
successive frames are identical, starting with the last frame
containing a previously consistent byte. An invalid code occurs
when the incoming K1 byte contains an unused code or a code


irrelevant for the specific switching operation (e.g., Reverse
Request while no switching request is outstanding) in three
consecutive frames. An invalid code also occurs when the incoming
K1 byte contains an invalid channel number in three consecutive
frames.

feplf

Modes other than 1+1 unidirectional monitor the K1 byte
for Far-End Protection-Line failures. A Far-End
Protection-Line defect is declared based on receiving
SF on the protection line.

extraTraffic

This bit indicates whether extra traffic is currently being
accepted on the protection line. "
EDESC
#
#
#
EVENT jnxVpnIfUp .1.3.6.1.4.1.2636.3.26.0.1 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An jnxVpnIfUp notification is generated when the interface
with index jnxVpnIfIndex belonging to the VPN named jnxVpnIfVpnName 
of type jnxVpnIfVpnType transitions to the 'up' state."
Variables:
  1: jnxVpnIfVpnType
     Syntax="JnxVpnType  (Integer) "
     Descr="Type of the VPN to which this interface belongs."
  2: jnxVpnIfVpnName
     Syntax="JnxVpnName  (Octet String) (SIZE(1..32))"
     Descr="Name of the VPN to which this interface belongs."
  3: jnxVpnIfIndex
     Syntax="Unsigned32"
     Descr="The index of this interface in the VPN.  Each interface
in the VPN is given a unique index.  The RowStatus says
whether a given interface (i.e., a row in this table)
is valid or not. Note: this index MUST NOT be zero."
EDESC
#
#
#
EVENT jnxVpnIfDown .1.3.6.1.4.1.2636.3.26.0.2 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An jnxVpnIfUp notification is generated when the interface
with index jnxVpnIfIndex belonging to the VPN named jnxVpnIfVpnName 
of type jnxVpnIfVpnType transitions out of the 'down' state."
Variables:
  1: jnxVpnIfVpnType
     Syntax="JnxVpnType  (Integer) "
     Descr="Type of the VPN to which this interface belongs."
  2: jnxVpnIfVpnName
     Syntax="JnxVpnName  (Octet String) (SIZE(1..32))"
     Descr="Name of the VPN to which this interface belongs."
  3: jnxVpnIfIndex
     Syntax="Unsigned32"
     Descr="The index of this interface in the VPN.  Each interface
in the VPN is given a unique index.  The RowStatus says
whether a given interface (i.e., a row in this table)
is valid or not. Note: this index MUST NOT be zero."
EDESC
#
#
#
EVENT jnxVpnPwUp .1.3.6.1.4.1.2636.3.26.0.3 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An jnxVpnPwUp notification is generated when the Pseudo-Wire
with index jnxVpnPwIndex belonging to the VPN named jnxVpnPwVpnName 
of type jnxVpnPwVpnType transitions to the 'up' state."
Variables:
  1: jnxVpnPwVpnType
     Syntax="JnxVpnType  (Integer) "
     Descr="The type of the VPN to which this Pseudo-Wire belongs."
  2: jnxVpnPwVpnName
     Syntax="JnxVpnName  (Octet String) (SIZE(1..32))"
     Descr="The name of the VPN to which this Pseudo-Wire belongs."
  3: jnxVpnPwIndex
     Syntax="Unsigned32"
     Descr="The index of this Pseudo-Wire in the VPN.  Each Pseudo
Wire in the VPN is given a unique index.  The RowStatus
says whether a given Pseudo Wire (i.e., a row in this
table) is valid or not. Note: this index MUST NOT be zero."
EDESC
#
#
#
EVENT jnxVpnPwDown .1.3.6.1.4.1.2636.3.26.0.4 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"An jnxVpnPwUp notification is generated when the Pseudo-Wire
with index jnxVpnPwIndex belonging to the VPN named jnxVpnPwVpnName 
of type jnxVpnPwVpnType transitions out of the 'down' state."
Variables:
  1: jnxVpnPwVpnType
     Syntax="JnxVpnType  (Integer) "
     Descr="The type of the VPN to which this Pseudo-Wire belongs."
  2: jnxVpnPwVpnName
     Syntax="JnxVpnName  (Octet String) (SIZE(1..32))"
     Descr="The name of the VPN to which this Pseudo-Wire belongs."
  3: jnxVpnPwIndex
     Syntax="Unsigned32"
     Descr="The index of this Pseudo-Wire in the VPN.  Each Pseudo
Wire in the VPN is given a unique index.  The RowStatus
says whether a given Pseudo Wire (i.e., a row in this
table) is valid or not. Note: this index MUST NOT be zero."
EDESC
#
#
#
EVENT PowerSupplyFailure_J20GGSN .1.3.6.1.4.1.2636.4.1.1 "J20-GGSN" Critical
FORMAT Power Supply Failure  Slot : $2
EXEC snmp_monitor_J20.sh ".1.3.6.1.4.1.2636.3.1.8.1.6.$2.$3.$4.$5" $A 2005
DISPLAY $A -- Power Supply Failure  Slot : $2
NODES MIOT-G01.ippubbl.wind MIOT-U01.ippubbl.wind RMCC-G01.ippubbl.wind RMID-U01.ippubbl.wind
SDESC
Long Descr.:
"A jnxPowerSupplyFailure trap signifies that
the SNMPv2 entity, acting in an agent role, has
detected that the specified power supply in the
chassis has been in the failure (bad DC output)
condition."
Variables:
  1: jnxContentsContainerIndex
     Syntax="Integer"
     Descr="The associated jnxContainersIndex in the
jnxContainersTable."
  2: jnxContentsL1Index
     Syntax="Integer"
     Descr="The level one index of the container
housing this subject.  Zero if unavailable
or nonapplicable."
  3: jnxContentsL2Index
     Syntax="Integer"
     Descr="The level two index of the container
housing this subject.  Zero if unavailable
or nonapplicable."
  4: jnxContentsL3Index
     Syntax="Integer"
     Descr="The level three index of the container
housing this subject.  Zero if unavailable
or nonapplicable."
  5: jnxContentsDescr
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this
subject."
EDESC
#
#
#
EVENT jnxPowerSupplyFailure .1.3.6.1.4.1.2636.4.1.1 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A jnxPowerSupplyFailure trap signifies that
the SNMPv2 entity, acting in an agent role, has
detected that the specified power supply in the
chassis has been in the failure (bad DC output) 
condition."
Variables:
  1: jnxContentsContainerIndex
     Syntax="Integer"
     Descr="The associated jnxContainersIndex in the 
jnxContainersTable."
  2: jnxContentsL1Index
     Syntax="Integer"
     Descr="The level one index of the container
housing this subject.  Zero if unavailable
or nonapplicable."
  3: jnxContentsL2Index
     Syntax="Integer"
     Descr="The level two index of the container
housing this subject.  Zero if unavailable
or nonapplicable."
  4: jnxContentsL3Index
     Syntax="Integer"
     Descr="The level three index of the container
housing this subject.  Zero if unavailable
or nonapplicable."
  5: jnxContentsDescr
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this
subject."
EDESC
#
#
#
EVENT FanFailure_J20GGSN .1.3.6.1.4.1.2636.4.1.2 "Juniper" Critical
FORMAT Fan Failure       Slot : $2
EXEC snmp_monitor_J20.sh ".1.3.6.1.4.1.2636.3.1.8.1.6.$2.$3.$4.$5" $A 2007
DISPLAY $A -- Fan Failure       Slot : $2
NODES MIOT-G01.ippubbl.wind MIOT-U01.ippubbl.wind RMCC-G01.ippubbl.wind RMID-U01.ippubbl.wind
SDESC
Long Descr.:
"A jnxFanFailure trap signifies that the SNMPv2
entity, acting in an agent role, has detected
that the specified cooling fan or impeller in
the chassis has been in the failure (not spinning)
condition."
Variables:
  1: jnxContentsContainerIndex
     Syntax="Integer"
     Descr="The associated jnxContainersIndex in the
jnxContainersTable."
  2: jnxContentsL1Index
     Syntax="Integer"
     Descr="The level one index of the container
housing this subject.  Zero if unavailable
or nonapplicable."
  3: jnxContentsL2Index
     Syntax="Integer"
     Descr="The level two index of the container
housing this subject.  Zero if unavailable
or nonapplicable."
  4: jnxContentsL3Index
     Syntax="Integer"
     Descr="The level three index of the container
housing this subject.  Zero if unavailable
or nonapplicable."
  5: jnxContentsDescr
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this
subject."
EDESC
#
#
#
EVENT jnxFanFailure .1.3.6.1.4.1.2636.4.1.2 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A jnxFanFailure trap signifies that the SNMPv2
entity, acting in an agent role, has detected
that the specified cooling fan or impeller in 
the chassis has been in the failure (not spinning) 
condition."
Variables:
  1: jnxContentsContainerIndex
     Syntax="Integer"
     Descr="The associated jnxContainersIndex in the 
jnxContainersTable."
  2: jnxContentsL1Index
     Syntax="Integer"
     Descr="The level one index of the container
housing this subject.  Zero if unavailable
or nonapplicable."
  3: jnxContentsL2Index
     Syntax="Integer"
     Descr="The level two index of the container
housing this subject.  Zero if unavailable
or nonapplicable."
  4: jnxContentsL3Index
     Syntax="Integer"
     Descr="The level three index of the container
housing this subject.  Zero if unavailable
or nonapplicable."
  5: jnxContentsDescr
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this
subject."
EDESC
#
#
#
EVENT jnxOverTemperature .1.3.6.1.4.1.2636.4.1.3 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A jnxOverTemperature trap signifies that the 
SNMPv2 entity, acting in an agent role, has 
detected that the specified hardware component
in the chassis has experienced over temperature
condition."
Variables:
  1: jnxContentsContainerIndex
     Syntax="Integer"
     Descr="The associated jnxContainersIndex in the 
jnxContainersTable."
  2: jnxContentsL1Index
     Syntax="Integer"
     Descr="The level one index of the container
housing this subject.  Zero if unavailable
or nonapplicable."
  3: jnxContentsL2Index
     Syntax="Integer"
     Descr="The level two index of the container
housing this subject.  Zero if unavailable
or nonapplicable."
  4: jnxContentsL3Index
     Syntax="Integer"
     Descr="The level three index of the container
housing this subject.  Zero if unavailable
or nonapplicable."
  5: jnxContentsDescr
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this
subject."
EDESC
#
#
#
EVENT OverTemperature_J20GGSN .1.3.6.1.4.1.2636.4.1.3 "Juniper" Critical
FORMAT Over Temperature ($*)
EXEC snmp_monitor_J20.sh ".1.3.6.1.4.1.2636.3.1.8.1.6.$2.$3.$4.$5" $A 2009
DISPLAY $A --- Over Temperature ($*)
NODES MIOT-G01.ippubbl.wind MIOT-U01.ippubbl.wind RMCC-G01.ippubbl.wind RMID-U01.ippubbl.wind
SDESC
Long Descr.:
"A jnxOverTemperature trap signifies that the
SNMPv2 entity, acting in an agent role, has
detected that the specified hardware component
in the chassis has experienced over temperature
condition."
Variables:
  1: jnxContentsContainerIndex
     Syntax="Integer"
     Descr="The associated jnxContainersIndex in the
jnxContainersTable."
  2: jnxContentsL1Index
     Syntax="Integer"
     Descr="The level one index of the container
housing this subject.  Zero if unavailable
or nonapplicable."
  3: jnxContentsL2Index
     Syntax="Integer"
     Descr="The level two index of the container
housing this subject.  Zero if unavailable
or nonapplicable."
  4: jnxContentsL3Index
     Syntax="Integer"
     Descr="The level three index of the container
housing this subject.  Zero if unavailable
or nonapplicable."
  5: jnxContentsDescr
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this
subject."
EDESC
#
#
#
EVENT jnxRedundancySwitchover .1.3.6.1.4.1.2636.4.1.4 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A jnxRedundancySwitchover trap signifies that 
the SNMPv2 entity, acting in an agent role, has 
detected that the specified hardware component
in the chassis has experienced a redundancy 
switchover event defined as a change in state
of jnxRedundancyState from master to backup or
vice versa."
Variables:
  1: jnxRedundancyContentsIndex
     Syntax="Integer (1..'7fffffff'h)"
     Descr="The associated jnxContentsContainerIndex in the 
jnxContentsTable."
  2: jnxRedundancyL1Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level one index associated with this
subject.  Zero if unavailable or inapplicable."
  3: jnxRedundancyL2Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level two index associated with this 
subject.  Zero if unavailable or inapplicable."
  4: jnxRedundancyL3Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level three index associated with this
subject.  Zero if unavailable or inapplicable."
  5: jnxRedundancyDescr
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this subject."
  6: jnxRedundancyConfig
     Syntax="Integer"
     Descr="The election priority of redundancy configuration
for this subject."
  7: jnxRedundancyState
     Syntax="Integer"
     Descr="The current running state for this subject."
  8: jnxRedundancySwitchoverCount
     Syntax="Counter"
     Descr="The total number of switchover as perceived by
this subject since routing engine is up and running.
The switchover is defined as a change in state of
jnxRedundancyState from master to backup or vice
versa.	Its value is reset when the routing engine
is reset or rebooted."
  9: jnxRedundancySwitchoverTime
     Syntax="TimeStamp  (Timeticks) "
     Descr="The value of sysUpTime when the jnxRedundancyState
of this subject was last switched over from master
to backup or vice versa.  Zero if unknown or never
switched over since the routing engine is up and
running."
 10: jnxRedundancySwitchoverReason
     Syntax="Integer"
     Descr="The reason of the last switchover for this subject."
EDESC
#
#
#
EVENT jnxFruRemoval .1.3.6.1.4.1.2636.4.1.5 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A jnxFruRemoval trap signifies that the SNMPv2 
entity, acting in an agent role, has detected 
that the specified FRU (Field Replaceable Unit)
has been removed from the chassis."
Variables:
  1: jnxFruContentsIndex
     Syntax="Integer (1..'7fffffff'h)"
     Descr="The associated jnxContentsContainerIndex in the 
jnxContentsTable."
  2: jnxFruL1Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level one index associated with this
subject.  Zero if unavailable or inapplicable."
  3: jnxFruL2Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level two index associated with this 
subject.  Zero if unavailable or inapplicable."
  4: jnxFruL3Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level three index associated with this
subject.  Zero if unavailable or inapplicable."
  5: jnxFruName
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this subject."
  6: jnxFruType
     Syntax="Integer"
     Descr="The FRU type for this subject."
  7: jnxFruSlot
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The slot number of this subject.  This is equivalent
to jnxFruL1Index in meaning.  Zero if unavailable or 
inapplicable."
EDESC
#
#
#
EVENT jnxFruInsertion .1.3.6.1.4.1.2636.4.1.6 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A jnxFruInsertion trap signifies that the SNMPv2 
entity,	acting in an agent role, has detected that
the specified FRU (Field Replaceable Unit) has been 
inserted into the chassis."
Variables:
  1: jnxFruContentsIndex
     Syntax="Integer (1..'7fffffff'h)"
     Descr="The associated jnxContentsContainerIndex in the 
jnxContentsTable."
  2: jnxFruL1Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level one index associated with this
subject.  Zero if unavailable or inapplicable."
  3: jnxFruL2Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level two index associated with this 
subject.  Zero if unavailable or inapplicable."
  4: jnxFruL3Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level three index associated with this
subject.  Zero if unavailable or inapplicable."
  5: jnxFruName
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this subject."
  6: jnxFruType
     Syntax="Integer"
     Descr="The FRU type for this subject."
  7: jnxFruSlot
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The slot number of this subject.  This is equivalent
to jnxFruL1Index in meaning.  Zero if unavailable or 
inapplicable."
EDESC
#
#
#
EVENT jnxInterfaceOffLine .1.3.6.1.4.1.2636.4.1.7 "J20-GGSN" Critical
FORMAT Interface OffLine $5
NODES MIOT-G01.ippubbl.wind MIOT-U01.ippubbl.wind RMCC-G01.ippubbl.wind RMID-U01.ippubbl.wind
SDESC
Long Descr.:
"A jnxOverTemperature trap signifies that the
SNMPv2 entity, acting in an agent role, has
detected that the specified hardware component
in the chassis has experienced over temperature
condition."
Variables:
  1: jnxContentsContainerIndex
     Syntax="Integer"
     Descr="The associated jnxContainersIndex in the
jnxContainersTable."
  2: jnxContentsL1Index
     Syntax="Integer"
     Descr="The level one index of the container
housing this subject.  Zero if unavailable
or nonapplicable."
  3: jnxContentsL2Index
     Syntax="Integer"
     Descr="The level two index of the container
housing this subject.  Zero if unavailable
or nonapplicable."
  4: jnxContentsL3Index
     Syntax="Integer"
     Descr="The level three index of the container
housing this subject.  Zero if unavailable
or nonapplicable."
  5: jnxContentsDescr
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this
subject."
EDESC
#
#
#
EVENT jnxFruPowerOff .1.3.6.1.4.1.2636.4.1.7 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A jnxFruPowerOff trap signifies that the SNMPv2 
entity, acting in an agent role, has detected 
that the specified FRU (Field Replaceable Unit)
has been powered off in the chassis."
Variables:
  1: jnxFruContentsIndex
     Syntax="Integer (1..'7fffffff'h)"
     Descr="The associated jnxContentsContainerIndex in the 
jnxContentsTable."
  2: jnxFruL1Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level one index associated with this
subject.  Zero if unavailable or inapplicable."
  3: jnxFruL2Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level two index associated with this 
subject.  Zero if unavailable or inapplicable."
  4: jnxFruL3Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level three index associated with this
subject.  Zero if unavailable or inapplicable."
  5: jnxFruName
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this subject."
  6: jnxFruType
     Syntax="Integer"
     Descr="The FRU type for this subject."
  7: jnxFruSlot
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The slot number of this subject.  This is equivalent
to jnxFruL1Index in meaning.  Zero if unavailable or 
inapplicable."
  8: jnxFruOfflineReason
     Syntax="Integer"
     Descr="The offline reason of this subject."
  9: jnxFruLastPowerOff
     Syntax="TimeStamp  (Timeticks) "
     Descr="The value of sysUpTime when this subject was last 
powered off.  Zero if unavailable or inapplicable."
 10: jnxFruLastPowerOn
     Syntax="TimeStamp  (Timeticks) "
     Descr="The value of sysUpTime when this subject was last 
powered on.  Zero if unavailable or inapplicable."
EDESC
#
#
#
EVENT jnxInterfaceOnLine .1.3.6.1.4.1.2636.4.1.8 "J20-GGSN" Normal
FORMAT Interface status OnLine $5
NODES MIOT-G01.ippubbl.wind MIOT-U01.ippubbl.wind RMCC-G01.ippubbl.wind RMID-U01.ippubbl.wind
SDESC
Long Descr.:
"A jnxOverTemperature trap signifies that the
SNMPv2 entity, acting in an agent role, has
detected that the specified hardware component
in the chassis has experienced over temperature
condition."
Variables:
  1: jnxContentsContainerIndex
     Syntax="Integer"
     Descr="The associated jnxContainersIndex in the
jnxContainersTable."
  2: jnxContentsL1Index
     Syntax="Integer"
     Descr="The level one index of the container
housing this subject.  Zero if unavailable
or nonapplicable."
  3: jnxContentsL2Index
     Syntax="Integer"
     Descr="The level two index of the container
housing this subject.  Zero if unavailable
or nonapplicable."
  4: jnxContentsL3Index
     Syntax="Integer"
     Descr="The level three index of the container
housing this subject.  Zero if unavailable
or nonapplicable."
  5: jnxContentsDescr
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this
subject."
EDESC
#
#
#
EVENT jnxFruPowerOn .1.3.6.1.4.1.2636.4.1.8 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A jnxFruPowerOn trap signifies that the SNMPv2 
entity,	acting in an agent role, has detected that
the specified FRU (Field Replaceable Unit) has been 
powered on in the chassis."
Variables:
  1: jnxFruContentsIndex
     Syntax="Integer (1..'7fffffff'h)"
     Descr="The associated jnxContentsContainerIndex in the 
jnxContentsTable."
  2: jnxFruL1Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level one index associated with this
subject.  Zero if unavailable or inapplicable."
  3: jnxFruL2Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level two index associated with this 
subject.  Zero if unavailable or inapplicable."
  4: jnxFruL3Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level three index associated with this
subject.  Zero if unavailable or inapplicable."
  5: jnxFruName
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this subject."
  6: jnxFruType
     Syntax="Integer"
     Descr="The FRU type for this subject."
  7: jnxFruSlot
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The slot number of this subject.  This is equivalent
to jnxFruL1Index in meaning.  Zero if unavailable or 
inapplicable."
  8: jnxFruOfflineReason
     Syntax="Integer"
     Descr="The offline reason of this subject."
  9: jnxFruLastPowerOff
     Syntax="TimeStamp  (Timeticks) "
     Descr="The value of sysUpTime when this subject was last 
powered off.  Zero if unavailable or inapplicable."
 10: jnxFruLastPowerOn
     Syntax="TimeStamp  (Timeticks) "
     Descr="The value of sysUpTime when this subject was last 
powered on.  Zero if unavailable or inapplicable."
EDESC
#
#
#
EVENT J20-Fru-Failed .1.3.6.1.4.1.2636.4.1.9 "J20-GGSN" Critical
FORMAT Fru Failed     $5 $6 $7
EXEC snmp_monitor_J20.sh ".1.3.6.1.4.1.2636.3.1.8.1.6.$2.$3.$4.$5" $A 2013
DISPLAY $A FRU FAILED  $5 $6 $7
NODES MIOT-G01.ippubbl.wind MIOT-U01.ippubbl.wind RMCC-G01.ippubbl.wind RMID-U01.ippubbl.wind
SDESC
Long Descr.:
"This indicates the specified FRU (Field Replaceable Unit)
has failed in the chassis. Most probably this is due toi
some hard error such as fru is not powering up or not
able to load ukernel. In these cases, fru is replaced."
Variables:
  1: jnxFruContentsIndex
     Syntax="Integer (1..'7fffffff'h)"
     Descr="The associated jnxContentsContainerIndex in the 
jnxContentsTable."
  2: jnxFruL1Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level one index associated with this
subject.  Zero if unavailable or inapplicable."
  3: jnxFruL2Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level two index associated with this 
subject.  Zero if unavailable or inapplicable."
  4: jnxFruL3Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level three index associated with this
subject.  Zero if unavailable or inapplicable."
  5: jnxFruName
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this subject."
  6: jnxFruType
     Syntax="Integer"
     Descr="The FRU type for this subject."
  7: jnxFruSlot
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The slot number of this subject.  This is equivalent
to jnxFruL1Index in meaning.  Zero if unavailable or 
inapplicable."
EDESC
#
#
#
EVENT jnxFruFailed .1.3.6.1.4.1.2636.4.1.9 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This indicates the specified FRU (Field Replaceable Unit)
has failed in the chassis. Most probably this is due toi
some hard error such as fru is not powering up or not
able to load ukernel. In these cases, fru is replaced."
Variables:
  1: jnxFruContentsIndex
     Syntax="Integer (1..'7fffffff'h)"
     Descr="The associated jnxContentsContainerIndex in the 
jnxContentsTable."
  2: jnxFruL1Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level one index associated with this
subject.  Zero if unavailable or inapplicable."
  3: jnxFruL2Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level two index associated with this 
subject.  Zero if unavailable or inapplicable."
  4: jnxFruL3Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level three index associated with this
subject.  Zero if unavailable or inapplicable."
  5: jnxFruName
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this subject."
  6: jnxFruType
     Syntax="Integer"
     Descr="The FRU type for this subject."
  7: jnxFruSlot
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The slot number of this subject.  This is equivalent
to jnxFruL1Index in meaning.  Zero if unavailable or 
inapplicable."
EDESC
#
#
#
EVENT jnxFruOffline .1.3.6.1.4.1.2636.4.1.10 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A jnxFruOffline trap signifies that the SNMP
entity, acting in an agent role, has detected
that the specified FRU (Field Replaceable Unit)
has gone offline in the chassis."
Variables:
  1: jnxFruContentsIndex
     Syntax="Integer (1..'7fffffff'h)"
     Descr="The associated jnxContentsContainerIndex in the 
jnxContentsTable."
  2: jnxFruL1Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level one index associated with this
subject.  Zero if unavailable or inapplicable."
  3: jnxFruL2Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level two index associated with this 
subject.  Zero if unavailable or inapplicable."
  4: jnxFruL3Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level three index associated with this
subject.  Zero if unavailable or inapplicable."
  5: jnxFruName
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this subject."
  6: jnxFruType
     Syntax="Integer"
     Descr="The FRU type for this subject."
  7: jnxFruSlot
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The slot number of this subject.  This is equivalent
to jnxFruL1Index in meaning.  Zero if unavailable or 
inapplicable."
  8: jnxFruOfflineReason
     Syntax="Integer"
     Descr="The offline reason of this subject."
  9: jnxFruLastPowerOff
     Syntax="TimeStamp  (Timeticks) "
     Descr="The value of sysUpTime when this subject was last 
powered off.  Zero if unavailable or inapplicable."
 10: jnxFruLastPowerOn
     Syntax="TimeStamp  (Timeticks) "
     Descr="The value of sysUpTime when this subject was last 
powered on.  Zero if unavailable or inapplicable."
EDESC
#
#
#
EVENT jnxFruOnline .1.3.6.1.4.1.2636.4.1.11 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A jnxFruOnline trap signifies that the SNMP
entity, acting in an agent role, has detected that
the specified FRU (Field Replaceable Unit) has
gone online in the chassis."
Variables:
  1: jnxFruContentsIndex
     Syntax="Integer (1..'7fffffff'h)"
     Descr="The associated jnxContentsContainerIndex in the 
jnxContentsTable."
  2: jnxFruL1Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level one index associated with this
subject.  Zero if unavailable or inapplicable."
  3: jnxFruL2Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level two index associated with this 
subject.  Zero if unavailable or inapplicable."
  4: jnxFruL3Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level three index associated with this
subject.  Zero if unavailable or inapplicable."
  5: jnxFruName
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this subject."
  6: jnxFruType
     Syntax="Integer"
     Descr="The FRU type for this subject."
  7: jnxFruSlot
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The slot number of this subject.  This is equivalent
to jnxFruL1Index in meaning.  Zero if unavailable or 
inapplicable."
EDESC
#
#
#
EVENT jnxFruCheck .1.3.6.1.4.1.2636.4.1.12 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"A jnxFruCheck trap signifies that the SNMP
entity, acting in an agent role, has detected that
the specified FRU (Field Replaceable Unit) has
encountered some operational errors and gone into
check state in the chassis."
Variables:
  1: jnxFruContentsIndex
     Syntax="Integer (1..'7fffffff'h)"
     Descr="The associated jnxContentsContainerIndex in the 
jnxContentsTable."
  2: jnxFruL1Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level one index associated with this
subject.  Zero if unavailable or inapplicable."
  3: jnxFruL2Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level two index associated with this 
subject.  Zero if unavailable or inapplicable."
  4: jnxFruL3Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level three index associated with this
subject.  Zero if unavailable or inapplicable."
  5: jnxFruName
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this subject."
  6: jnxFruType
     Syntax="Integer"
     Descr="The FRU type for this subject."
  7: jnxFruSlot
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The slot number of this subject.  This is equivalent
to jnxFruL1Index in meaning.  Zero if unavailable or 
inapplicable."
EDESC
#
#
#
EVENT jnxPowerSupplyOK .1.3.6.1.4.1.2636.4.2.1 "Juniper" Normal
FORMAT JNX Power Supply OK       Slot : $2
SDESC
Long Descr.:
"A jnxPowerSupplyOK trap signifies that the 
SNMPv2 entity, acting in an agent role, has
detected that the specified power supply in the
chassis has recovered from the failure (bad DC output) 
condition."
Variables:
  1: jnxContentsContainerIndex
     Syntax="Integer (1..'7fffffff'h)"
     Descr="The associated jnxContainersIndex in the 
jnxContainersTable."
  2: jnxContentsL1Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level one index of the container
housing this subject.  Zero if unavailable
or inapplicable."
  3: jnxContentsL2Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level two index of the container
housing this subject.  Zero if unavailable
or inapplicable."
  4: jnxContentsL3Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level three index of the container
housing this subject.  Zero if unavailable
or inapplicable."
  5: jnxContentsDescr
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this
subject."
  6: jnxOperatingState
     Syntax="Integer"
     Descr="The operating state of this subject."
EDESC
#
#
#
EVENT jnxPowerSupplyOK_J20GGSN .1.3.6.1.4.1.2636.4.2.1 "J20-GGSN" Normal
FORMAT JNX Power Supply OK       Slot : $2
NODES MIOT-G01.ippubbl.wind MIOT-U01.ippubbl.wind RMCC-G01.ippubbl.wind RMID-U01.ippubbl.wind
SDESC
Long Descr.:
"A jnxPowerSupplyOK trap signifies that the 
SNMPv2 entity, acting in an agent role, has
detected that the specified power supply in the
chassis has recovered from the failure (bad DC output) 
condition."
Variables:
  1: jnxContentsContainerIndex
     Syntax="Integer (1..'7fffffff'h)"
     Descr="The associated jnxContainersIndex in the 
jnxContainersTable."
  2: jnxContentsL1Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level one index of the container
housing this subject.  Zero if unavailable
or inapplicable."
  3: jnxContentsL2Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level two index of the container
housing this subject.  Zero if unavailable
or inapplicable."
  4: jnxContentsL3Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level three index of the container
housing this subject.  Zero if unavailable
or inapplicable."
  5: jnxContentsDescr
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this
subject."
  6: jnxOperatingState
     Syntax="Integer"
     Descr="The operating state of this subject."
EDESC
#
#
#
EVENT jnxFanOK .1.3.6.1.4.1.2636.4.2.2 "Juniper" Normal
FORMAT JNX FAN OK       Slot : $2
SDESC
Long Descr.:
"A jnxFanOK trap signifies that the SNMPv2
entity, acting in an agent role, has detected that
the specified cooling fan or impeller in the chassis
has recovered from the failure (not spinning) condition."
Variables:
  1: jnxContentsContainerIndex
     Syntax="Integer (1..'7fffffff'h)"
     Descr="The associated jnxContainersIndex in the 
jnxContainersTable."
  2: jnxContentsL1Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level one index of the container
housing this subject.  Zero if unavailable
or inapplicable."
  3: jnxContentsL2Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level two index of the container
housing this subject.  Zero if unavailable
or inapplicable."
  4: jnxContentsL3Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level three index of the container
housing this subject.  Zero if unavailable
or inapplicable."
  5: jnxContentsDescr
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this
subject."
  6: jnxOperatingState
     Syntax="Integer"
     Descr="The operating state of this subject."
EDESC
#
#
#
EVENT jnxTemperatureOK .1.3.6.1.4.1.2636.4.2.3 "Juniper" Normal
FORMAT JNX Temperature OK ($*)
SDESC
Long Descr.:
"A jnxTemperatureOK trap signifies that the 
SNMPv2 entity, acting in an agent role, has 
detected that the specified hardware component
in the chassis has recovered from over temperature
condition."
Variables:
  1: jnxContentsContainerIndex
     Syntax="Integer (1..'7fffffff'h)"
     Descr="The associated jnxContainersIndex in the 
jnxContainersTable."
  2: jnxContentsL1Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level one index of the container
housing this subject.  Zero if unavailable
or inapplicable."
  3: jnxContentsL2Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level two index of the container
housing this subject.  Zero if unavailable
or inapplicable."
  4: jnxContentsL3Index
     Syntax="Integer (0..'7fffffff'h)"
     Descr="The level three index of the container
housing this subject.  Zero if unavailable
or inapplicable."
  5: jnxContentsDescr
     Syntax="Display String (SIZE(0..255))"
     Descr="The name or detailed description of this
subject."
  6: jnxOperatingTemp
     Syntax="Gauge"
     Descr="The temperature in Celsius (degrees C) of this 
subject.  Zero if unavailable or inapplicable."
EDESC
#
#
#
EVENT jnxRmonAlarmGetFailure .1.3.6.1.4.1.2636.4.3.0.1 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The SNMP trap that is generated when the get request for an alarm
variable returns an error.  The specific error is identified by
jnxRmonAlarmGetFailReason."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  3: jnxRmonAlarmGetFailReason
     Syntax="Integer"
     Descr="The reason why an internal get request for the variable 
monitored by this entry last failed."
EDESC
#
#
#
EVENT jnxRmonGetOk .1.3.6.1.4.1.2636.4.3.0.2 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The SNMP trap that is generated when the get request for an alarm
variable is successful.  This is only sent after previous attempts
were unsuccessful."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
EDESC
#
#
#
EVENT jnxLdpLspUp .1.3.6.1.4.1.2636.4.4.0.1 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The SNMP trap that is generated when an LSP comes up."
Variables:
  1: jnxLdpLspFec
     Syntax="IP Address"
     Descr="The LSP FEC in IP address format."
  2: jnxLdpRtrid
     Syntax="IP Address"
     Descr="The router id of the sending router."
EDESC
#
#
#
EVENT jnxLdpLspDown .1.3.6.1.4.1.2636.4.4.0.2 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The SNMP trap that is generated when the LSP goes down."
Variables:
  1: jnxLdpLspFec
     Syntax="IP Address"
     Descr="The LSP FEC in IP address format."
  2: jnxLdpRtrid
     Syntax="IP Address"
     Descr="The router id of the sending router."
  3: jnxLdpLspDownReason
     Syntax="Integer"
     Descr="The reason why the LSP went down. Can be one of the following:
the topology changed, the neighbor withdrew the label, 
the neighbor went down, or the reason is unknown."
EDESC
#
#
#
EVENT jnxLdpSesUp .1.3.6.1.4.1.2636.4.4.0.3 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The SNMP trap that is generated when the value of 'mplsLdpSesState'
enters the 'operational(5) state."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
EDESC
#
#
#
EVENT jnxLdpSesDown .1.3.6.1.4.1.2636.4.4.0.4 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The SNMP trap that is generated when the value of 'mplsLdpSesState'
leaves the 'operational(5) state. The value of jnxLdpSesDownIf is 
only meaningful when jnxLdpSesDownReason is allAdjacenciesDown (3), 
otherwise it is 0."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: jnxLdpSesDownReason
     Syntax="Integer"
     Descr="The reason why the session transitioned to nonexistent state. 
Can be one of the following:
unknown reason, hold time expired, connection time expired, 
all adjacencies down,  received bad tlv, received bad pdu, 
connectionn error, connection reset, received notification from peer, 
received unexpected end-of-file, authentication key was changed, 
error during initialization, or graceful restart was aborted."
  3: jnxLdpSesDownIf
     Syntax="InterfaceIndexOrZero  (Integer) (0..2147483647)"
     Descr="This variable is used to convey the interface information relevant
to a session-down event. It can be 0 or the snmp index of the 
interface relevant to the session-down event."
EDESC
#
#
#
EVENT jnxCmCfgChange .1.3.6.1.4.1.2636.4.5.0.1 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"Notification of a configuration management event as
recorded in jnxCmCfgChgEventTable."
Variables:
  1: jnxCmCfgChgEventTime
     Syntax="Timeticks"
     Descr="The value of sysUpTime when the event occurred."
  2: jnxCmCfgChgEventDate
     Syntax="DateAndTime  (Octet String) (SIZE(8|11))"
     Descr="The system date and time when the event occurred."
  3: jnxCmCfgChgEventSource
     Syntax="Integer"
     Descr="The source of the configuration event."
  4: jnxCmCfgChgEventUser
     Syntax="Display String"
     Descr="The name of the logged in user.  The length is zero if
not available or not applicable."
EDESC
#
#
#
EVENT jnxCmRescueChange .1.3.6.1.4.1.2636.4.5.0.2 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"Notification of the latest rescue configuration 
change."
Variables:
  1: jnxCmRescueChgTime
     Syntax="Timeticks"
     Descr="The value of sysUpTime when the rescue configuration was
last changed.

If the management subsystem was reset after the last
configuration change, this object will return 0."
  2: jnxCmRescueChgDate
     Syntax="DateAndTime  (Octet String) (SIZE(8|11))"
     Descr="The date and time when the rescue configuration was last
changed."
  3: jnxCmRescueChgSource
     Syntax="JnxCmCfChgSource  (Integer) "
     Descr="The source of the rescue configuration event."
  4: jnxCmRescueChgUser
     Syntax="Display String"
     Descr="The name of the logged in user.  The length is zero if
not available or not applicable."
  5: jnxCmRescueChgState
     Syntax="JnxCmRescueCfgState  (Integer) "
     Descr="The current state of the rescue configuration."
EDESC
#
#
#
EVENT jnxSonetAlarmSet .1.3.6.1.4.1.2636.4.6.0.1 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"Notification of a recently set sonet/sdh alarm."
Variables:
  1: ifDescr
     Syntax="Display String (SIZE(0..255))"
     Descr="A textual string containing information about the
interface.  This string should include the name of the
manufacturer, the product name and the version of the
interface hardware/software."
  2: jnxSonetLastAlarmId
     Syntax="JnxSonetAlarmId  (Bits) "
     Descr="The object identifies the sonet/sdh alarm that most recently
was set or cleared."
  3: jnxSonetCurrentAlarms
     Syntax="JnxSonetAlarmId  (Bits) "
     Descr="This object identifies all the active sonet/sdh alarms on this
interface."
  4: jnxSonetLastAlarmDate
     Syntax="DateAndTime  (Octet String) (SIZE(8|11))"
     Descr="The system date and time when the management subsystem learned
of the last alarm event."
EDESC
#
#
#
EVENT jnxSonetAlarmCleared .1.3.6.1.4.1.2636.4.6.0.2 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"Notification of a recently cleared sonet/sdh alarm."
Variables:
  1: ifDescr
     Syntax="Display String (SIZE(0..255))"
     Descr="A textual string containing information about the
interface.  This string should include the name of the
manufacturer, the product name and the version of the
interface hardware/software."
  2: jnxSonetLastAlarmId
     Syntax="JnxSonetAlarmId  (Bits) "
     Descr="The object identifies the sonet/sdh alarm that most recently
was set or cleared."
  3: jnxSonetCurrentAlarms
     Syntax="JnxSonetAlarmId  (Bits) "
     Descr="This object identifies all the active sonet/sdh alarms on this
interface."
  4: jnxSonetLastAlarmDate
     Syntax="DateAndTime  (Octet String) (SIZE(8|11))"
     Descr="The system date and time when the management subsystem learned
of the last alarm event."
EDESC
#
#
#
EVENT jnxPMonOverloadSet .1.3.6.1.4.1.2636.4.7.0.1 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"Notification of a new overload condition on a Passive 
Monitoring interface."
Variables:
  1: ifDescr
     Syntax="Display String (SIZE(0..255))"
     Descr="A textual string containing information about the
interface.  This string should include the name of the
manufacturer, the product name and the version of the
interface hardware/software."
  2: jnxPMonLastOverload
     Syntax="JnxPMonOverloadId  (Bits) "
     Descr="Identifies the last overload condition to change on this
interface."
  3: jnxPMonCurrentOverload
     Syntax="JnxPMonOverloadId  (Bits) "
     Descr="Identifies current overload conditions that exist on this
interface."
  4: jnxPMonLastOverloadDate
     Syntax="DateAndTime  (Octet String) (SIZE(8|11))"
     Descr="The system date and time when the management subsystem last 
learned of a change to the overload condition on this
interface."
EDESC
#
#
#
EVENT jnxPMonOverloadCleared .1.3.6.1.4.1.2636.4.7.0.2 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"Notification of a cleared overload condition on a Passive 
Monitoring interface."
Variables:
  1: ifDescr
     Syntax="Display String (SIZE(0..255))"
     Descr="A textual string containing information about the
interface.  This string should include the name of the
manufacturer, the product name and the version of the
interface hardware/software."
  2: jnxPMonLastOverload
     Syntax="JnxPMonOverloadId  (Bits) "
     Descr="Identifies the last overload condition to change on this
interface."
  3: jnxPMonCurrentOverload
     Syntax="JnxPMonOverloadId  (Bits) "
     Descr="Identifies current overload conditions that exist on this
interface."
  4: jnxPMonLastOverloadDate
     Syntax="DateAndTime  (Octet String) (SIZE(8|11))"
     Descr="The system date and time when the management subsystem last 
learned of a change to the overload condition on this
interface."
EDESC
#
#
#
EVENT jnxCollUnavailableDest .1.3.6.1.4.1.2636.4.8.0.1 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"Notification of an unavailable destination failure encountered
while transferring a collector file."
Variables:
  1: ifDescr
	   Syntax="Display String (SIZE(0..255))"
     Descr="A textual string containing information about the
interface.  This string should include the name of the
manufacturer, the product name and the version of the
interface hardware/software."
  2: jnxCollNotifyDate
	   Syntax="DateAndTime  (Octet String) (SIZE(8|11))"
     Descr="Provides the current system date and time."
  3: jnxCollNotifyUrl
	   Syntax="Display String"
     Descr="The URL associated with a file transfer destination."
  4: jnxCollNotifyInetType
	   Syntax="InetAddressType"
     Descr="Used with jnxCollNotifyInetAddress to identify a specific
file transfer destination."
  5: jnxCollNotifyInetAddress
	   Syntax="InetAddress"
     Descr="Used with jnxCollNotifyInetType to identify a specific
file transfer destination."
EDESC
#
#
#
EVENT jnxCollUnavailableDestCleared .1.3.6.1.4.1.2636.4.8.0.2 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This indicates a previous unavailable destination failure 
has been resolved."
Variables:
  1: ifDescr
	   Syntax="Display String (SIZE(0..255))"
     Descr="A textual string containing information about the
interface.  This string should include the name of the
manufacturer, the product name and the version of the
interface hardware/software."
  2: jnxCollNotifyDate
	   Syntax="DateAndTime  (Octet String) (SIZE(8|11))"
     Descr="Provides the current system date and time."
  3: jnxCollNotifyUrl
	   Syntax="Display String"
     Descr="The URL associated with a file transfer destination."
  4: jnxCollNotifyInetType
	   Syntax="InetAddressType"
     Descr="Used with jnxCollNotifyInetAddress to identify a specific
file transfer destination."
  5: jnxCollNotifyInetAddress
	   Syntax="InetAddress"
     Descr="Used with jnxCollNotifyInetType to identify a specific
file transfer destination."
EDESC
#
#
#
EVENT jnxCollUnsuccessfulTransfer .1.3.6.1.4.1.2636.4.8.0.3 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This indicates an error was encountered while attempting
a file transfer."
Variables:
  1: ifDescr
	   Syntax="Display String (SIZE(0..255))"
     Descr="A textual string containing information about the
interface.  This string should include the name of the
manufacturer, the product name and the version of the
interface hardware/software."
  2: jnxCollNotifyDate
	   Syntax="DateAndTime  (Octet String) (SIZE(8|11))"
     Descr="Provides the current system date and time."
  3: jnxCollNotifyFile
	   Syntax="Display String"
     Descr="Identifies a specific file for notifications that refer to a file."
  4: jnxCollNotifyUrl
	   Syntax="Display String"
     Descr="The URL associated with a file transfer destination."
  5: jnxCollNotifyInetType
	   Syntax="InetAddressType"
     Descr="Used with jnxCollNotifyInetAddress to identify a specific
file transfer destination."
  6: jnxCollNotifyInetAddress
	   Syntax="InetAddress"
     Descr="Used with jnxCollNotifyInetType to identify a specific
file transfer destination."
  7: jnxCollNotifyError
	   Syntax="Display String"
     Descr="Description of error encountered when trying to transfer a file."
  8: jnxCollNotifyFtpResultCode
	   Syntax="Integer"
     Descr="Provides the FTP result code for file transfer notifications."
  9: jnxCollNotifyFtpErrorText
	   Syntax="Display String"
     Descr="Provides the FTP error text for file transfer notifications."
EDESC
#
#
#
EVENT jnxCollFlowOverload .1.3.6.1.4.1.2636.4.8.0.4 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This indicates a soft or hard flow overload condition has been
triggered."
Variables:
  1: ifDescr
	   Syntax="Display String (SIZE(0..255))"
     Descr="A textual string containing information about the
interface.  This string should include the name of the
manufacturer, the product name and the version of the
interface hardware/software."
  2: jnxCollPicIfStateChangeDate
	   Syntax="DateAndTime  (Octet String) (SIZE(8|11))"
     Descr="The system date and time when the management subsystem last
learned of a change to the value of jnxCollPicIfCurrentState
for this Collector PIC."
  3: jnxCollNotifyOverloadType
	   Syntax="Integer"
     Descr="Identifies a specific type of flow overload condition
on this Collector PIC."
  4: jnxCollNotifyNewRecordRate
	   Syntax="Gauge"
     Descr="Provides the current number of new records per second created
on this Collector PIC."
  5: jnxCollPicIfCreatedFiles
	   Syntax="Counter64"
     Descr="The total number of files created by this Collector PIC
since the last time the PIC was reset."
  6: jnxCollPicIfDestroyedFiles
	   Syntax="Counter64"
     Descr="The total number of files destroyed by this Collector PIC."
EDESC
#
#
#
EVENT jnxCollFlowOverloadCleared .1.3.6.1.4.1.2636.4.8.0.5 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This indicates a soft or hard flow overload condition has been
cleared."
Variables:
  1: ifDescr
	   Syntax="Display String (SIZE(0..255))"
     Descr="A textual string containing information about the
interface.  This string should include the name of the
manufacturer, the product name and the version of the
interface hardware/software."
  2: jnxCollPicIfStateChangeDate
	   Syntax="DateAndTime  (Octet String) (SIZE(8|11))"
     Descr="The system date and time when the management subsystem last
learned of a change to the value of jnxCollPicIfCurrentState
for this Collector PIC."
  3: jnxCollNotifyOverloadType
	   Syntax="Integer"
     Descr="Identifies a specific type of flow overload condition
on this Collector PIC."
  4: jnxCollNotifyNewRecordRate
	   Syntax="Gauge"
     Descr="Provides the current number of new records per second created
on this Collector PIC."
  5: jnxCollPicIfCreatedFiles
	   Syntax="Counter64"
     Descr="The total number of files created by this Collector PIC
since the last time the PIC was reset."
  6: jnxCollPicIfDestroyedFiles
	   Syntax="Counter64"
     Descr="The total number of files destroyed by this Collector PIC."
EDESC
#
#
#
EVENT jnxCollMemoryUnavailable .1.3.6.1.4.1.2636.4.8.0.6 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This indicates a memory unavailable condition has been
triggered."
Variables:
  1: ifDescr
	   Syntax="Display String (SIZE(0..255))"
     Descr="A textual string containing information about the
interface.  This string should include the name of the
manufacturer, the product name and the version of the
interface hardware/software."
  2: jnxCollPicIfStateChangeDate
	   Syntax="DateAndTime  (Octet String) (SIZE(8|11))"
     Descr="The system date and time when the management subsystem last
learned of a change to the value of jnxCollPicIfCurrentState
for this Collector PIC."
  3: jnxCollNotifyMemThresh
	   Syntax="Gauge"
     Descr="Provides the current memory threshold used for determining
memory unavailable conditions."
  4: jnxCollNotifyMemUtil
	   Syntax="Gauge"
     Descr="Provides the current memory utilization for pic overload 
notifications."
  5: jnxCollNotifyMemFree
	   Syntax="Gauge"
     Descr="Provides the current amount of free memory for pic overload 
notifications."
EDESC
#
#
#
EVENT jnxCollMemoryAvailable .1.3.6.1.4.1.2636.4.8.0.7 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This indicates a memory unavailable condition has been
cleared."
Variables:
  1: ifDescr
	   Syntax="Display String (SIZE(0..255))"
     Descr="A textual string containing information about the
interface.  This string should include the name of the
manufacturer, the product name and the version of the
interface hardware/software."
  2: jnxCollPicIfStateChangeDate
	   Syntax="DateAndTime  (Octet String) (SIZE(8|11))"
     Descr="The system date and time when the management subsystem last
learned of a change to the value of jnxCollPicIfCurrentState
for this Collector PIC."
  3: jnxCollNotifyMemThresh
	   Syntax="Gauge"
     Descr="Provides the current memory threshold used for determining
memory unavailable conditions."
  4: jnxCollNotifyMemUtil
	   Syntax="Gauge"
     Descr="Provides the current memory utilization for pic overload 
notifications."
  5: jnxCollNotifyMemFree
	   Syntax="Gauge"
     Descr="Provides the current amount of free memory for pic overload 
notifications."
EDESC
#
#
#
EVENT jnxCollFtpSwitchover .1.3.6.1.4.1.2636.4.8.0.8 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This indicates an FTP server switchover has occurred."
Variables:
  1: ifDescr
	   Syntax="Display String (SIZE(0..255))"
     Descr="A textual string containing information about the
interface.  This string should include the name of the
manufacturer, the product name and the version of the
interface hardware/software."
  2: jnxCollNotifyDate
	   Syntax="DateAndTime  (Octet String) (SIZE(8|11))"
     Descr="Provides the current system date and time."
  3: jnxCollNotifyFromFtpServerInetType
	   Syntax="InetAddressType"
     Descr="Used with jnxCollNotifyFromFtpServerInetAddress to identify
a specific FTP server address."
  4: jnxCollNotifyFromFtpServerInetAddress
	   Syntax="InetAddress"
     Descr="The FTP server address from which the switchover occurs."
  5: jnxCollNotifyFromFtpServerType
	   Syntax="Integer"
     Descr="The FTP server Type from which the switchover occurs."
  6: jnxCollNotifyToFtpServerInetType
	   Syntax="InetAddressType"
     Descr="Used with jnxCollNotifyToFtpServerInetAddress to identify
a specific FTP server address."
  7: jnxCollNotifyToFtpServerInetAddress
	   Syntax="InetAddress"
     Descr="The FTP server address to which the switchover occurs."
  8: jnxCollNotifyToFtpServerType
	   Syntax="Integer"
     Descr="The FTP server Type to which the switchover occurs."
  9: jnxCollNotifyInitiatedBy
	   Syntax="Integer"
     Descr="Identify what initiates the FTP switchover."
EDESC
#
#
#
EVENT jnxPingRttThresholdExceeded .1.3.6.1.4.1.2636.4.9.0.1 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This notification is generated when the round trip time 
(jnxPingCtlRttThreshold) exceeds the configured
threshold (jnxPingCtlRttThreshold) and the rttThreshold bit is
set in jnxPingCtlTrapGeneration."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  3: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  4: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  5: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  6: jnxPingResultsMinRttUs
     Syntax="Unsigned32"
     Descr="The minimum of the round trip delays measured for all the probes
during this test.  Measured in microseconds."
     Units="microseconds"
  7: jnxPingResultsMaxRttUs
     Syntax="Unsigned32"
     Descr="The maximum of the round trip delays measured for all the probes
during this test.  Measured in microseconds."
     Units="microseconds"
  8: jnxPingResultsAvgRttUs
     Syntax="Unsigned32"
     Descr="The average of the round trip delays measured for all the probes
during this test.  Measured in microseconds."
     Units="microseconds"
  9: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 10: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 11: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 12: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 13: jnxPingCtlRttThreshold
     Syntax="Unsigned32 (0..6000000)"
     Descr="Maximum round trip time allowed.  If this threshold is crossed
by any probe, a jnxPingRttThresholdExceeded trap will be sent."
     Units="microseconds"
 14: jnxPingResultsRttUs
     Syntax="Unsigned32"
     Descr="The round trip delays measured for the most recent successful probe
during this test.  Measured in microseconds."
     Units="microseconds"
EDESC
#
#
#
EVENT jnxPingRttStdDevThresholdExceeded .1.3.6.1.4.1.2636.4.9.0.2 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This notification is generated when the standard deviation of
the round trip time (jnxPingResultsStdDevRttUs) exceeds the 
configured threshold (jnxPingCtlRttStdDevThreshold) and the
rttStdDevThreshold bit is set in jnxPingCtlTrapGeneration."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  3: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  4: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  5: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  6: jnxPingResultsMinRttUs
     Syntax="Unsigned32"
     Descr="The minimum of the round trip delays measured for all the probes
during this test.  Measured in microseconds."
     Units="microseconds"
  7: jnxPingResultsMaxRttUs
     Syntax="Unsigned32"
     Descr="The maximum of the round trip delays measured for all the probes
during this test.  Measured in microseconds."
     Units="microseconds"
  8: jnxPingResultsAvgRttUs
     Syntax="Unsigned32"
     Descr="The average of the round trip delays measured for all the probes
during this test.  Measured in microseconds."
     Units="microseconds"
  9: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 10: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 11: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 12: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 13: jnxPingCtlRttStdDevThreshold
     Syntax="Unsigned32 (0..6000000)"
     Descr="The maximum round trip time standard deviation allowed over the
course of any test.  If the calculated standard deviation of the
round trip time at the end of any test exceeds this threshold,
a jnxPingRttStdDevThresholdExceeded trap will be sent."
     Units="microseconds"
 14: jnxPingResultsStdDevRttUs
     Syntax="Unsigned32"
     Descr="The standard deviation of the round trip delays measured 
during this test.  Measured in microseconds."
     Units="microseconds"
EDESC
#
#
#
EVENT jnxPingRttJitterThresholdExceeded .1.3.6.1.4.1.2636.4.9.0.3 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This notification is generated when the round trip time jitter
(jnxPingResultsMaxRttUs minus jnxPingResultsMinRttUs) exceeds the 
configured threshold (jnxPingCtlRttJitterThreshold) and the
rttJitterThreshold bit is set in jnxPingCtlTrapGeneration."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  3: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  4: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  5: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  6: jnxPingResultsMinRttUs
     Syntax="Unsigned32"
     Descr="The minimum of the round trip delays measured for all the probes
during this test.  Measured in microseconds."
     Units="microseconds"
  7: jnxPingResultsMaxRttUs
     Syntax="Unsigned32"
     Descr="The maximum of the round trip delays measured for all the probes
during this test.  Measured in microseconds."
     Units="microseconds"
  8: jnxPingResultsAvgRttUs
     Syntax="Unsigned32"
     Descr="The average of the round trip delays measured for all the probes
during this test.  Measured in microseconds."
     Units="microseconds"
  9: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 10: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 11: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 12: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 13: jnxPingCtlRttJitterThreshold
     Syntax="Unsigned32 (0..6000000)"
     Descr="The maximum allowed jitter in the round trip time over the course
of any test.  Jitter is defined as the difference between the
maximum and minimum round trip times measured over the course of
a single test (jnxPingResultsMaxRttUs minus jnxPingResultsMinRttUs).
If the measured jitter exceeds this threshold, a 
jnxPingRttJitterThresholdExceeded trap will be sent."
     Units="microseconds"
EDESC
#
#
#
EVENT jnxPingEgressThresholdExceeded .1.3.6.1.4.1.2636.4.9.0.4 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This notification is generated when the egress time 
(jnxPingResultsEgressUs) exceeds the configured
threshold (jnxPingCtlEgressTimeThreshold) and the 
egressThreshold bit is set in jnxPingCtlTrapGeneration."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  3: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  4: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  5: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  6: jnxPingResultsMinEgressUs
     Syntax="Unsigned32"
     Descr="The minimum of the egress trip delays measured over all
probes during this test.  Measured in microseconds.
This applies only if the probe type (pingCtlType)
provides one-way delay measurements.  For all other probe types, 
their values are irrelevant and will return 0."
     Units="microseconds"
  7: jnxPingResultsMaxEgressUs
     Syntax="Unsigned32"
     Descr="The maximum of the egress trip delays measured over all
probes during this test.  Measured in microseconds.
This applies only if the probe type (pingCtlType)
provides one-way delay measurements.  For all other probe types, 
their values are irrelevant and will return 0."
     Units="microseconds"
  8: jnxPingResultsAvgEgressUs
     Syntax="Unsigned32"
     Descr="The average of the egress trip delays measured over all
probes during this test.  Measured in microseconds.
This applies only if the probe type (pingCtlType)
provides one-way delay measurements.  For all other probe types, 
their values are irrelevant and will return 0."
     Units="microseconds"
  9: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 10: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 11: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 12: jnxPingCtlEgressTimeThreshold
     Syntax="Unsigned32 (0..60000000)"
     Descr="Maximum egress trip time allowed.  If this threshold is crossed by
any probe, a jnxPingEgressThresholdExceeded trap will be sent.
This applies only if the probe type (pingCtlType) provides one way
delay measurements.  Currently jnxPingIcmpTimeStamp is the only
supported probe type with this property."
     Units="microseconds"
 13: jnxPingResultsEgressUs
     Syntax="Unsigned32"
     Descr="The egress trip delays measured for the most recent successful probe
during this test.  Measured in microseconds.
This applies only if the probe type (pingCtlType)
provides one-way delay measurements.  For all other probe types, 
their values are irrelevant and will return 0."
     Units="microseconds"
EDESC
#
#
#
EVENT jnxPingEgressStdDevThresholdExceeded .1.3.6.1.4.1.2636.4.9.0.5 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This notification is generated when the standard deviation of
the egress time (jnxPingResultsStddevEgressUs) exceeds the 
configured threshold (jnxPingCtlEgressStdDevThreshold) and the
egressStdDevThreshold bit is set in jnxPingCtlTrapGeneration."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  3: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  4: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  5: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  6: jnxPingResultsMinEgressUs
     Syntax="Unsigned32"
     Descr="The minimum of the egress trip delays measured over all
probes during this test.  Measured in microseconds.
This applies only if the probe type (pingCtlType)
provides one-way delay measurements.  For all other probe types, 
their values are irrelevant and will return 0."
     Units="microseconds"
  7: jnxPingResultsMaxEgressUs
     Syntax="Unsigned32"
     Descr="The maximum of the egress trip delays measured over all
probes during this test.  Measured in microseconds.
This applies only if the probe type (pingCtlType)
provides one-way delay measurements.  For all other probe types, 
their values are irrelevant and will return 0."
     Units="microseconds"
  8: jnxPingResultsAvgEgressUs
     Syntax="Unsigned32"
     Descr="The average of the egress trip delays measured over all
probes during this test.  Measured in microseconds.
This applies only if the probe type (pingCtlType)
provides one-way delay measurements.  For all other probe types, 
their values are irrelevant and will return 0."
     Units="microseconds"
  9: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 10: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 11: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 12: jnxPingResultsStddevEgressUs
     Syntax="Unsigned32"
     Descr="The standard deviation of the egress trip delays measured over all
probes during this test.  Measured in microseconds.
This applies only if the probe type (pingCtlType)
provides one-way delay measurements.  For all other probe types, 
their values are irrelevant and will return 0."
     Units="microseconds"
 13: jnxPingCtlEgressStdDevThreshold
     Syntax="Unsigned32 (0..60000000)"
     Descr="The maximum egress trip time standard deviation allowed over the
course of any test.  If the calculated standard deviation of the
egress trip time at the end of any test exceeds this threshold,
a jnxPingEgressStdDevThresholdExceeded trap will be sent.
This applies only if the probe type (pingCtlType) provides one way
delay measurements.  Currently jnxPingIcmpTimeStamp is the only
supported probe type with this property."
     Units="microseconds"
 14: jnxPingResultsStddevEgressUs
     Syntax="Unsigned32"
     Descr="The standard deviation of the egress trip delays measured over all
probes during this test.  Measured in microseconds.
This applies only if the probe type (pingCtlType)
provides one-way delay measurements.  For all other probe types, 
their values are irrelevant and will return 0."
     Units="microseconds"
EDESC
#
#
#
EVENT jnxPingEgressJitterThresholdExceeded .1.3.6.1.4.1.2636.4.9.0.6 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This notification is generated when the egress time jitter
(jnxPingResultsMaxEgressUs minus jnxPingResultsMinEgressUs) 
exceeds the configured threshold (jnxPingCtlEgressJitterThreshold)
and the egressJitterThreshold bit is set in 
jnxPingCtlTrapGeneration."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  3: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  4: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  5: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  6: jnxPingResultsMinEgressUs
     Syntax="Unsigned32"
     Descr="The minimum of the egress trip delays measured over all
probes during this test.  Measured in microseconds.
This applies only if the probe type (pingCtlType)
provides one-way delay measurements.  For all other probe types, 
their values are irrelevant and will return 0."
     Units="microseconds"
  7: jnxPingResultsMaxEgressUs
     Syntax="Unsigned32"
     Descr="The maximum of the egress trip delays measured over all
probes during this test.  Measured in microseconds.
This applies only if the probe type (pingCtlType)
provides one-way delay measurements.  For all other probe types, 
their values are irrelevant and will return 0."
     Units="microseconds"
  8: jnxPingResultsAvgEgressUs
     Syntax="Unsigned32"
     Descr="The average of the egress trip delays measured over all
probes during this test.  Measured in microseconds.
This applies only if the probe type (pingCtlType)
provides one-way delay measurements.  For all other probe types, 
their values are irrelevant and will return 0."
     Units="microseconds"
  9: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 10: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 11: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 12: jnxPingCtlEgressJitterThreshold
     Syntax="Unsigned32 (0..60000000)"
     Descr="The maximum allowed jitter in the egress trip time over the course
of any test.  Jitter is defined as the difference between the
maximum and minimum egress trip times measured over the course of
a single test (jnxPingResultsMaxSrcDstt minus jnxPingResultsMinSrcDstt).
If the measured jitter exceeds this threshold, a
jnxPingEgressJitterThresholdExceeded trap will be sent.
This applies only if the probe type (pingCtlType) provides one way
delay measurements.  Currently jnxPingIcmpTimeStamp is the only
supported probe type with this property."
     Units="microseconds"
EDESC
#
#
#
EVENT jnxPingIngressThresholdExceeded .1.3.6.1.4.1.2636.4.9.0.7 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This notification is generated when the ingress time 
(jnxPingResultsIngressUs) exceeds the configured
threshold (jnxPingCtlIngressTimeThreshold) and the 
ingressThreshold bit is set in jnxPingCtlTrapGeneration."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  3: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  4: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  5: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  6: jnxPingResultsMinIngressUs
     Syntax="Unsigned32"
     Descr="The minimum of the ingress trip delays measured for over all
probes during this test.  Measured in microseconds.
This applies only if the probe type (pingCtlType)
provides one-way delay measurements.  For all other probe types, 
their values are irrelevant and will return 0."
     Units="microseconds"
  7: jnxPingResultsMaxIngressUs
     Syntax="Unsigned32"
     Descr="The maximum of the ingress trip delays measured over all
probes during this test.  Measured in microseconds.
This applies only if the probe type (pingCtlType)
provides one-way delay measurements.  For all other probe types, 
their values are irrelevant and will return 0."
     Units="microseconds"
  8: jnxPingResultsAvgIngressUs
     Syntax="Unsigned32"
     Descr="The average of the ingress trip delays measured over all
probes during this test.  Measured in microseconds.
This applies only if the probe type (pingCtlType)
provides one-way delay measurements.  For all other probe types, 
their values are irrelevant and will return 0."
     Units="microseconds"
  9: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 10: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 11: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 12: jnxPingCtlIngressTimeThreshold
     Syntax="Unsigned32 (0..60000000)"
     Descr="Maximum ingress trip time allowed.  If this threshold is crossed by
any probe, a jnxPingIngressThresholdExceeded trap will be sent.
This applies only if the probe type (pingCtlType) provides one way
delay measurements.  Currently jnxPingIcmpTimeStamp is the only
supported probe type with this property."
     Units="microseconds"
 13: jnxPingResultsIngressUs
     Syntax="Unsigned32"
     Descr="The ingress trip delays measured for the most recent successful probe
during this test.  Measured in microseconds.
This applies only if the probe type (pingCtlType)
provides one-way delay measurements.  For all other probe types, 
their values are irrelevant and will return 0."
     Units="microseconds"
EDESC
#
#
#
EVENT jnxPingIngressStddevThresholdExceeded .1.3.6.1.4.1.2636.4.9.0.8 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This notification is generated when the standard deviation of
the ingress time (jnxPingResultsStddevIngressUs) exceeds the 
configured threshold (jnxPingCtlIngressStddevThreshold) and the
ingressStdDevThreshold bit is set in jnxPingCtlTrapGeneration."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  3: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  4: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  5: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  6: jnxPingResultsMinIngressUs
     Syntax="Unsigned32"
     Descr="The minimum of the ingress trip delays measured for over all
probes during this test.  Measured in microseconds.
This applies only if the probe type (pingCtlType)
provides one-way delay measurements.  For all other probe types, 
their values are irrelevant and will return 0."
     Units="microseconds"
  7: jnxPingResultsMaxIngressUs
     Syntax="Unsigned32"
     Descr="The maximum of the ingress trip delays measured over all
probes during this test.  Measured in microseconds.
This applies only if the probe type (pingCtlType)
provides one-way delay measurements.  For all other probe types, 
their values are irrelevant and will return 0."
     Units="microseconds"
  8: jnxPingResultsAvgIngressUs
     Syntax="Unsigned32"
     Descr="The average of the ingress trip delays measured over all
probes during this test.  Measured in microseconds.
This applies only if the probe type (pingCtlType)
provides one-way delay measurements.  For all other probe types, 
their values are irrelevant and will return 0."
     Units="microseconds"
  9: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 10: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 11: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 12: jnxPingResultsStddevIngressUs
     Syntax="Unsigned32"
     Descr="The standard deviation of the ingress trip delays measured over all
probes during this test.  Measured in microseconds.
This applies only if the probe type (pingCtlType)
provides one-way delay measurements.  For all other probe types, 
their values are irrelevant and will return 0."
     Units="microseconds"
 13: jnxPingCtlIngressStddevThreshold
     Syntax="Unsigned32 (0..60000000)"
     Descr="The maximum ingress trip time standard deviation allowed over the
course of any test.  If the calculated standard deviation of the
ingress trip time at the end of any test exceeds this threshold,
a jnxPingIngressStddevThresholdExceeded trap will be sent.
This applies only if the probe type (pingCtlType) provides one way
delay measurements.  Currently jnxPingIcmpTimeStamp is the only
supported probe type with this property."
     Units="microseconds"
 14: jnxPingResultsStddevIngressUs
     Syntax="Unsigned32"
     Descr="The standard deviation of the ingress trip delays measured over all
probes during this test.  Measured in microseconds.
This applies only if the probe type (pingCtlType)
provides one-way delay measurements.  For all other probe types, 
their values are irrelevant and will return 0."
     Units="microseconds"
EDESC
#
#
#
EVENT jnxPingIngressJitterThresholdExceeded .1.3.6.1.4.1.2636.4.9.0.9 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This notification is generated when the ingress time jitter
(jnxPingResultsMaxIngressUs minus jnxPingResultsMinIngressUs) 
exceeds the configured threshold (jnxPingCtlIngressJitterThreshold)
and the ingressJitterThreshold bit is set in 
jnxPingCtlTrapGeneration."
Variables:
  1: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  2: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  3: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  4: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  5: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
  6: jnxPingResultsMinIngressUs
     Syntax="Unsigned32"
     Descr="The minimum of the ingress trip delays measured for over all
probes during this test.  Measured in microseconds.
This applies only if the probe type (pingCtlType)
provides one-way delay measurements.  For all other probe types, 
their values are irrelevant and will return 0."
     Units="microseconds"
  7: jnxPingResultsMaxIngressUs
     Syntax="Unsigned32"
     Descr="The maximum of the ingress trip delays measured over all
probes during this test.  Measured in microseconds.
This applies only if the probe type (pingCtlType)
provides one-way delay measurements.  For all other probe types, 
their values are irrelevant and will return 0."
     Units="microseconds"
  8: jnxPingResultsAvgIngressUs
     Syntax="Unsigned32"
     Descr="The average of the ingress trip delays measured over all
probes during this test.  Measured in microseconds.
This applies only if the probe type (pingCtlType)
provides one-way delay measurements.  For all other probe types, 
their values are irrelevant and will return 0."
     Units="microseconds"
  9: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 10: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 11: cisco
     Syntax="Module Identity"
     Descr="The Structure of Management Information for the
Cisco enterprise."
 12: jnxPingCtlIngressJitterThreshold
     Syntax="Unsigned32 (0..60000000)"
     Descr="The maximum allowed jitter in the ingress trip time over the course
of any test.  Jitter is defined as the difference between the
maximum and minimum ingress trip times measured over the course of
a single test (jnxPingResultsMaxDstSrct minus jnxPingResultsMinDstSrct).
If the measured jitter exceeds this threshold, a
jnxPingIngressJitterThresholdExceeded trap will be sent.
This applies only if the probe type (pingCtlType) provides one way
delay measurements.  Currently jnxPingIcmpTimeStamp is the only
supported probe type with this property."
     Units="microseconds"
EDESC
#
#
#
EVENT jnxSpSvcSetZoneEntered .1.3.6.1.4.1.2636.4.10.0.1 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This indicates a Service PIC has entered a more severe memory-usage
zone from a less severe memory usage zone.  The zone entered
is identified by jnxSpSvcSetIfMemoryZone."
Variables:
  1: jnxSpSvcSetIfMemoryZone
	   Syntax="Integer"
     Descr="The memory-usage zone currently occupied by this Service PIC.  The 
definitions of each zone are:

Green  - All new flows are allowed.
Yellow - Unused memory is reclaimed. All new flows are allowed.
Orange - New flows are only allowed for service sets that are 
using less than their equal share of memory.
Red    - No new flows are allowed."
  2: jnxSpSvcSetIfTableName
	   Syntax="Display String"
     Descr="The ifName of the interface identifying the Service PIC.  If more 
than one interface is associated with the Service PIC, the name 
associated with the lowest layer interface is used for this object."
EDESC
#
#
#
EVENT jnxSpSvcSetZoneExited .1.3.6.1.4.1.2636.4.10.0.2 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This indicates a Service Pic has exited a more severe memory-usage
zone to a less severe memory usage zone.  The zone exited is
identified by jnxSpSvcSetIfMemoryZone."
Variables:
  1: jnxSpSvcSetIfMemoryZone
	   Syntax="Integer"
     Descr="The memory-usage zone currently occupied by this Service PIC.  The 
definitions of each zone are:

Green  - All new flows are allowed.
Yellow - Unused memory is reclaimed. All new flows are allowed.
Orange - New flows are only allowed for service sets that are 
using less than their equal share of memory.
Red    - No new flows are allowed."
  2: jnxSpSvcSetIfTableName
	   Syntax="Display String"
     Descr="The ifName of the interface identifying the Service PIC.  If more 
than one interface is associated with the Service PIC, the name 
associated with the lowest layer interface is used for this object."
EDESC
#
#
#
EVENT jnxSpSvcSetCpuExceeded .1.3.6.1.4.1.2636.4.10.0.3 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This indicates a Service Pic has exceeded its internal threshold
for CPU utilization (85%)."
Variables:
  1: jnxSpSvcSetIfCpuUtil
	   Syntax="Gauge"
     Descr="The amount of CPU used by this Service PIC, expressed as a
percentage of the total."
     Units="percent"
  2: jnxSpSvcSetIfTableName
	   Syntax="Display String"
     Descr="The ifName of the interface identifying the Service PIC.  If more 
than one interface is associated with the Service PIC, the name 
associated with the lowest layer interface is used for this object."
EDESC
#
#
#
EVENT jnxSpSvcSetCpuOk .1.3.6.1.4.1.2636.4.10.0.4 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"This indicates a Service Pic has crossed below its internal 
threshold for CPU utilization (85%)."
Variables:
  1: jnxSpSvcSetIfCpuUtil
	   Syntax="Gauge"
     Descr="The amount of CPU used by this Service PIC, expressed as a
percentage of the total."
     Units="percent"
  2: jnxSpSvcSetIfTableName
	   Syntax="Display String"
     Descr="The ifName of the interface identifying the Service PIC.  If more 
than one interface is associated with the Service PIC, the name 
associated with the lowest layer interface is used for this object."
EDESC
#
#
#
EVENT jnxBgpM2Established .1.3.6.1.4.1.2636.5.1.1.1.0.1 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The BGP Established event is generated when
the BGP FSM enters the ESTABLISHED state."
Variables:
  1: jnxBgpM2PeerLocalAddrType
     Syntax="InetAddressType"
     Descr="The address family of the local end of the peering
session."
  2: jnxBgpM2PeerLocalAddr
     Syntax="InetAddress"
     Descr="The address of the local end of the peering session."
  3: jnxBgpM2PeerRemoteAddrType
     Syntax="InetAddressType"
     Descr="The address family of the remote end of the peering
session."
  4: jnxBgpM2PeerRemoteAddr
     Syntax="InetAddress"
     Descr="The address of the remote end of the peering session."
  5: jnxBgpM2PeerLastErrorReceived
     Syntax="Octet String (SIZE(2))"
     Descr="The last error code and subcode received by this BGP
Speaker via a NOTIFICATION message for this peer.
If no error has occurred, this field is zero.
Otherwise, the first byte of this two byte
OCTET STRING contains the error code, and the second
byte contains the subcode."
  6: jnxBgpM2PeerState
     Syntax="Integer"
     Descr="The remote BGP peer's FSM state."
EDESC
#
#
#
EVENT jnxBgpM2BackwardTransition .1.3.6.1.4.1.2636.5.1.1.1.0.2 "LOGONLY" Normal
FORMAT NO FORMAT DEFINED
SDESC
Long Descr.:
"The BGPBackwardTransition Event is generated
when the BGP FSM moves from a higher numbered
state to a lower numbered state."
Variables:
  1: jnxBgpM2PeerLocalAddrType
     Syntax="InetAddressType"
     Descr="The address family of the local end of the peering
session."
  2: jnxBgpM2PeerLocalAddr
     Syntax="InetAddress"
     Descr="The address of the local end of the peering session."
  3: jnxBgpM2PeerRemoteAddrType
     Syntax="InetAddressType"
     Descr="The address family of the remote end of the peering
session."
  4: jnxBgpM2PeerRemoteAddr
     Syntax="InetAddress"
     Descr="The address of the remote end of the peering session."
  5: jnxBgpM2PeerLastErrorReceived
     Syntax="Octet String (SIZE(2))"
     Descr="The last error code and subcode received by this BGP
Speaker via a NOTIFICATION message for this peer.
If no error has occurred, this field is zero.
Otherwise, the first byte of this two byte
OCTET STRING contains the error code, and the second
byte contains the subcode."
  6: jnxBgpM2PeerLastErrorReceivedText
     Syntax="SnmpAdminString"
     Descr="This object contains an implementation specific
explanation of the error that was reported."
  7: jnxBgpM2PeerState
     Syntax="Integer"
     Descr="The remote BGP peer's FSM state."
EDESC
#
#
#
EVENT operationalStatusOperationalTrap .1.3.6.1.4.1.5655.4.0.1 "SCE2000" Normal
FORMAT Operational Status Normal
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"OperationalStatusOperational trap signifies that the agent
entity has detected the sysOperationalStatus object in this
MIB has changed to operational(3)."
Variables:
  1: sysOperationalStatus
     Syntax="Integer"
     Descr="Indicates the operational status of the system."
EDESC
#
#
#
EVENT operationalStatusWarningTrap .1.3.6.1.4.1.5655.4.0.2 "SCE2000" Minor
FORMAT Operational Status Warning
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"OperationalStatusWarning trap signifies that the agent
entity has detected the sysOperationalStatus object in this
MIB has changed to warning(4)."
Variables:
  1: sysOperationalStatus
     Syntax="Integer"
     Descr="Indicates the operational status of the system."
EDESC
#
#
#
EVENT operationalStatusFailureTrap .1.3.6.1.4.1.5655.4.0.3 "SCE2000" Critical
FORMAT Operational Status Failure
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"OperationalStatusFailure trap signifies that the agent
entity has detected the sysOperationalStatus object in this
MIB has changed to failure(5)."
Variables:
  1: sysOperationalStatus
     Syntax="Integer"
     Descr="Indicates the operational status of the system."
EDESC
#
#
#
EVENT systemResetTrap .1.3.6.1.4.1.5655.4.0.4 "SCE2000" Warning
FORMAT REBOOT DEL SISTEMA
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A systemReset trap signifies that the agent entity
is about to reset itself either per user's request or due to a fatal event."
EDESC
#
#
#
EVENT chassisTempAlarmOnTrap .1.3.6.1.4.1.5655.4.0.5 "SCE2000" Major
FORMAT Temperature too High
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A chassisTempAlarmOn trap signifies that the agent
entity has detected the chassisTempAlarm object in this
MIB has changed to the on(3) state (temperature is too high)."
Variables:
  1: chassisTempAlarm
     Syntax="Integer"
     Descr="The chassis temperature alarm status."
EDESC
#
#
#
EVENT chassisTempAlarmOffTrap .1.3.6.1.4.1.5655.4.0.6 "SCE2000" Normal
FORMAT Temperature is Normal
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A chassisTempAlarmOff trap signifies that the agent
entity has detected the chassisTempAlarm object in this
MIB has changed to the off(2) state (temperature level is back to normal)."
Variables:
  1: chassisTempAlarm
     Syntax="Integer"
     Descr="The chassis temperature alarm status."
EDESC
#
#
#
EVENT chassisVoltageAlarmOnTrap .1.3.6.1.4.1.5655.4.0.7 "SCE2000" Major
FORMAT Voltage too High
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A chassisVoltageAlarmOn trap signifies that the agent
entity has detected the chassisVoltageAlarm object in this
MIB has changed to the on(3) state (voltage level is too high)."
Variables:
  1: chassisVoltageAlarm
     Syntax="Integer"
     Descr="The chassis internal voltage alarm status.
If the alarm is 'on' it indicates that the 
voltage level of one or more HW units is not in the normal range."
EDESC
#
#
#
EVENT chassisFansAlarmOnTrap .1.3.6.1.4.1.5655.4.0.8 "SCE2000" Major
FORMAT Fan Problem
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A chassisFanStatusFailure trap signifies that the agent
entity has detected the chassisFansAlarm object in this
MIB has changed to the on(3) state."
Variables:
  1: chassisFansAlarm
     Syntax="Integer"
     Descr="Indicates if all the fans on the chassis are functional."
EDESC
#
#
#
EVENT chassisPowerSupplyAlarmOnTrap .1.3.6.1.4.1.5655.4.0.9 "SCE2000" Major
FORMAT Power Supply Problem
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A chassisPsuStatusFailure trap signifies that the agent
entity has detected the chassisPowerSupplyAlarm object in this
MIB has changed to the on(3) state."
Variables:
  1: chassisPowerSupplyAlarm
     Syntax="Integer"
     Descr="Indicates if the power supply to the chassis is normal. 
If the status is not 'ok' it means that one or more power supplies 
are not functional."
EDESC
#
#
#
EVENT rdrActiveConnectionTrap .1.3.6.1.4.1.5655.4.0.10 "IGNORE" Normal
FORMAT NO FORMAT DEFINED
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"RdrConnectionDestTypeActive trap signifies that the agent
entity has detected the rdrFormatterDestStatus object in this
MIB has changed to the active(2) state."
Variables:
  1: rdrFormatterDestIPAddr
     Syntax="IP Address"
     Descr="The IP address of a Data Collector."
  2: rdrFormatterDestStatus
     Syntax="Integer"
     Descr="In redundancy(2) and in simpleLoadBalancing(3) rdrFormatterForwardingMode there can be only 
one 'active' destination, which is where the reports are currently being sent to.
In multicast(4) modes all destination will receive the active(2) status"
EDESC
#
#
#
EVENT rdrNoActiveConnectionTrap .1.3.6.1.4.1.5655.4.0.11 "IGNORE" Normal
FORMAT NO FORMAT DEFINED
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A rdrNoActiveConnection trap signifies that the agent entity has detected 
there is no active connection between the RDR-formatter and any Data Collector."
EDESC
#
#
#
EVENT rdrConnectionUpTrap .1.3.6.1.4.1.5655.4.0.12 "SCE2000" Normal
FORMAT Connessione con CM Aperta
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"RdrConnectionStatusUp trap signifies that the agent entity has detected the 
rdrFormatterDestConnectionStatus object in this MIB has changed to up(2)."
Variables:
  1: rdrFormatterDestIPAddr
     Syntax="IP Address"
     Descr="The IP address of a Data Collector."
  2: rdrFormatterDestConnectionStatus
     Syntax="Integer"
     Descr="Indicates the status of TCP connection to this destination."
EDESC
#
#
#
EVENT rdrConnectionDownTrap .1.3.6.1.4.1.5655.4.0.13 "SCE2000" Warning
FORMAT Connessione con CM chiusa
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"RdrConnectionStatusDown trap signifies that the agent
entity has detected the rdrFormatterDestConnectionStatus object in this
MIB has changed to down(3)."
Variables:
  1: rdrFormatterDestIPAddr
     Syntax="IP Address"
     Descr="The IP address of a Data Collector."
  2: rdrFormatterDestConnectionStatus
     Syntax="Integer"
     Descr="Indicates the status of TCP connection to this destination."
EDESC
#
#
#
EVENT telnetSessionStartedTrap .1.3.6.1.4.1.5655.4.0.14 "IGNORE" Normal
FORMAT NO FORMAT DEFINED
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"Replaced by the more generic sessionStartedTrap."
EDESC
#
#
#
EVENT telnetSessionEndedTrap .1.3.6.1.4.1.5655.4.0.15 "IGNORE" Normal
FORMAT NO FORMAT DEFINED
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"Replaced by the more generic sessionEndedTrap."
EDESC
#
#
#
EVENT telnetSessionDeniedAccessTrap .1.3.6.1.4.1.5655.4.0.16 "IGNORE" Normal
FORMAT NO FORMAT DEFINED
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"Replaced by the more generic sessionDeniedAccessTrap."
EDESC
#
#
#
EVENT telnetSessionBadLoginTrap .1.3.6.1.4.1.5655.4.0.17 "IGNORE" Normal
FORMAT NO FORMAT DEFINED
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"Replaced by the more generic sessionBadLoginTrap."
EDESC
#
#
#
EVENT loggerUserLogIsFullTrap .1.3.6.1.4.1.5655.4.0.18 "SCE2000" Minor
FORMAT LOG File is Full
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A loggerUserLogIsFull trap signifies that the agent entity has detected 
the User log file is full. In such case the agent entity rolls to the next file."
EDESC
#
#
#
EVENT sntpClockDriftWarnTrap .1.3.6.1.4.1.5655.4.0.19 "IGNORE" Normal
FORMAT NO FORMAT DEFINED
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"An sntpClockDriftWarn trap signifies that the entity's SNTP agent did not receive 
time update for a long period, this may cause a time drift."
EDESC
#
#
#
EVENT linkModeBypassTrap .1.3.6.1.4.1.5655.4.0.20 "SCE2000" Normal
FORMAT Link mode is set to Bypass
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A linkModeBypass trap signifies that the agent entity has detected 
that the linkOperMode object in this MIB has changed to bypass(2)."
Variables:
  1: linkOperMode
     Syntax="LinkModeType  (Integer) "
     Descr="The operational mode of the link.
In Bypass mode the traffic is forwarded from one port to the other using an internal splitter.
In Forwarding mode the traffic is forwarded through the internal software and hardware modules of the SE.
In Sniffing mode the traffic is forwarded in the same manner as in Bypass mode, however the traffic
is passed through the internal software and hardware modules of the SE for analysing.
IN Cutoff mode the traffic is dropped by the SE platform."
EDESC
#
#
#
EVENT linkModeForwardingTrap .1.3.6.1.4.1.5655.4.0.21 "SCE2000" Normal
FORMAT Link mode is set to Forwarding
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A linkModeForwarding trap signifies that the agent entity has detected 
that the linkOperMode object in this MIB has changed to forwarding(3)."
Variables:
  1: linkOperMode
     Syntax="LinkModeType  (Integer) "
     Descr="The operational mode of the link.
In Bypass mode the traffic is forwarded from one port to the other using an internal splitter.
In Forwarding mode the traffic is forwarded through the internal software and hardware modules of the SE.
In Sniffing mode the traffic is forwarded in the same manner as in Bypass mode, however the traffic
is passed through the internal software and hardware modules of the SE for analysing.
IN Cutoff mode the traffic is dropped by the SE platform."
EDESC
#
#
#
EVENT linkModeCutoffTrap .1.3.6.1.4.1.5655.4.0.22 "SCE2000" Major
FORMAT Link mode is set to Cutoff
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A linkModeCutoff trap signifies that the agent entity has detected 
that the linkOperMode object in this MIB has changed to cutoff(4)."
Variables:
  1: linkOperMode
     Syntax="LinkModeType  (Integer) "
     Descr="The operational mode of the link.
In Bypass mode the traffic is forwarded from one port to the other using an internal splitter.
In Forwarding mode the traffic is forwarded through the internal software and hardware modules of the SE.
In Sniffing mode the traffic is forwarded in the same manner as in Bypass mode, however the traffic
is passed through the internal software and hardware modules of the SE for analysing.
IN Cutoff mode the traffic is dropped by the SE platform."
EDESC
#
#
#
EVENT moduleAttackFilterActivatedTrap .1.3.6.1.4.1.5655.4.0.25 "IGNORE" Normal
FORMAT NO FORMAT DEFINED
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A moduleAttackFilterActivated trap signifies that the agent entity's 
attack filter module has activated a filter. The pcubeSeEventGenericString1 
is the type of attack-filter, which was activated."
Variables:
  1: moduleIndex
     Syntax="Integer (1..255)"
     Descr="A unique value for each module within the chassis."
  2: pcubeSeEventGenericString1
     Syntax="Display String"
     Descr="Temporary string used for traps. Always returns an empty string."
EDESC
#
#
#
EVENT moduleAttackFilterDeactivatedTrap .1.3.6.1.4.1.5655.4.0.26 "IGNORE" Normal
FORMAT NO FORMAT DEFINED
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A portAttackFilterDeactivated trap signifies that the agent entity's 
attack filter module has removed a filter that was previously activated.
The pcubeSeEventGenericString1 is the attack-filter type, which was sent in the 
corresponding moduleAttackFilterActivatedTrap. the pcubeSeEventGenericString2
is the reason for deactivating the filter."
Variables:
  1: moduleIndex
     Syntax="Integer (1..255)"
     Descr="A unique value for each module within the chassis."
  2: pcubeSeEventGenericString1
     Syntax="Display String"
     Descr="Temporary string used for traps. Always returns an empty string."
  3: pcubeSeEventGenericString2
     Syntax="Display String"
     Descr="Temporary string used for traps. Always returns an empty string."
EDESC
#
#
#
EVENT moduleEmAgentGenericTrap .1.3.6.1.4.1.5655.4.0.27 "IGNORE" Normal
FORMAT NO FORMAT DEFINED
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A generic trap used by the P-Cube EM agent. pcubeSeEventGenericString1
specifies what trap is it, and pcubeSeEventGenericString2 is the relevant
parameter."
Variables:
  1: moduleIndex
     Syntax="Integer (1..255)"
     Descr="A unique value for each module within the chassis."
  2: pcubeSeEventGenericString1
     Syntax="Display String"
     Descr="Temporary string used for traps. Always returns an empty string."
  3: pcubeSeEventGenericString2
     Syntax="Display String"
     Descr="Temporary string used for traps. Always returns an empty string."
EDESC
#
#
#
EVENT linkModeSniffingTrap .1.3.6.1.4.1.5655.4.0.28 "SCE2000" Normal
FORMAT Link mode is set to sniffing
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A linkModeSniffing trap signifies that the agent entity has detected 
that the linkOperMode object in this MIB has changed to sniffing(5)."
Variables:
  1: linkOperMode
     Syntax="LinkModeType  (Integer) "
     Descr="The operational mode of the link.
In Bypass mode the traffic is forwarded from one port to the other using an internal splitter.
In Forwarding mode the traffic is forwarded through the internal software and hardware modules of the SE.
In Sniffing mode the traffic is forwarded in the same manner as in Bypass mode, however the traffic
is passed through the internal software and hardware modules of the SE for analysing.
IN Cutoff mode the traffic is dropped by the SE platform."
EDESC
#
#
#
EVENT moduleRedundancyReadyTrap .1.3.6.1.4.1.5655.4.0.29 "IGNORE" Normal
FORMAT NO FORMAT DEFINED
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A moduleRedundancyReady trap signifies that the module was able to connect
and synch with a redundant entity, and is now ready to handle fail-over if needed"
Variables:
  1: moduleIndex
     Syntax="Integer (1..255)"
     Descr="A unique value for each module within the chassis."
  2: moduleOperStatus
     Syntax="Integer"
     Descr="Indicates current module's role in respect to 
whether the module handles traffic."
EDESC
#
#
#
EVENT moduleRedundantConfigurationMismatchTrap .1.3.6.1.4.1.5655.4.0.30 "IGNORE" Normal
FORMAT NO FORMAT DEFINED
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A moduleRedundantConfigurationMismatch trap signifies that the module was not able
to synch with a redundant entity, due to a essential configuration parameters that 
are do not match between the module and the redundant entity"
Variables:
  1: moduleIndex
     Syntax="Integer (1..255)"
     Descr="A unique value for each module within the chassis."
EDESC
#
#
#
EVENT moduleLostRedundancyTrap .1.3.6.1.4.1.5655.4.0.31 "IGNORE" Normal
FORMAT NO FORMAT DEFINED
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A moduleLostRedundancy trap signifies that the module has lost the ability to 
perform the fail-over procedure"
Variables:
  1: moduleIndex
     Syntax="Integer (1..255)"
     Descr="A unique value for each module within the chassis."
  2: moduleOperStatus
     Syntax="Integer"
     Descr="Indicates current module's role in respect to 
whether the module handles traffic."
EDESC
#
#
#
EVENT moduleSmConnectionDownTrap .1.3.6.1.4.1.5655.4.0.32 "SCE2000" Warning
FORMAT Subscriber is not Reachable
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A moduleSmConnectionDown trap signifies that the module's virtual connection to 
the subscriber manager is broken"
Variables:
  1: moduleIndex
     Syntax="Integer (1..255)"
     Descr="A unique value for each module within the chassis."
EDESC
#
#
#
EVENT moduleSmConnectionUpTrap .1.3.6.1.4.1.5655.4.0.33 "SCE2000" Normal
FORMAT Subscriber is Reachable
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A moduleSmConnectionUp trap signifies that the module's virtual connection to 
the subscriber manager is up and working"
Variables:
  1: moduleIndex
     Syntax="Integer (1..255)"
     Descr="A unique value for each module within the chassis."
EDESC
#
#
#
EVENT moduleOperStatusChangeTrap .1.3.6.1.4.1.5655.4.0.34 "IGNORE" Normal
FORMAT NO FORMAT DEFINED
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A moduleOperStatusChangeTrap trap signifies that the moduleOperStatus has changed its value"
Variables:
  1: moduleIndex
     Syntax="Integer (1..255)"
     Descr="A unique value for each module within the chassis."
  2: moduleOperStatus
     Syntax="Integer"
     Descr="Indicates current module's role in respect to 
whether the module handles traffic."
EDESC
#
#
#
EVENT portOperStatusChangeTrap .1.3.6.1.4.1.5655.4.0.35 "SCE2000" Minor
FORMAT Port $2 is change to $3
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A portOperStatusChangeTrap trap signifies that the portOperStatus object of 
the portIndex has changed its value. i.e. the link was forced down or the force 
down was released"
Variables:
  1: moduleIndex
     Syntax="Integer (1..255)"
     Descr="A unique value for each module within the chassis."
  2: portIndex
     Syntax="Integer (1..255)"
     Descr="An index value that uniquely identifies this port within a module.  
The value is determined by the location of the port on the module.  
Valid entries are 1 to the value of moduleNumPorts for this module."
  3: portOperStatus
     Syntax="Integer"
     Descr="Indicates the status of the port and if the port is down indicates the reason."
EDESC
#
#
#
EVENT chassisLineFeedAlarmOnTrap .1.3.6.1.4.1.5655.4.0.36 "IGNORE" Normal
FORMAT NO FORMAT DEFINED
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A chassisLineFeedAlarmOn trap signifies that the agent
entity has detected the chassisLineFeed object in this
MIB has changed to the on(3) state."
Variables:
  1: chassisLineFeedAlarm
     Syntax="Integer"
     Descr="Indicates if the line feed to the chassis is normal. 
If the status is not 'ok' it means that one or more line feeds 
are not connected or have no power."
EDESC
#
#
#
EVENT rdrFormatterCategoryDiscardingReportsTrap .1.3.6.1.4.1.5655.4.0.37 "IGNORE" Normal
FORMAT NO FORMAT DEFINED
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"rdrCategoryDiscardingReportsTrap trap signifies that the agent entity has detected that 
reports send to this category are being discarded. 
The rdrFormatterCategoryNumReportsDiscarded object in this MIB is counting the amount of discarded reports."
Variables:
  1: rdrFormatterCategoryIndex
     Syntax="Integer (1..4)"
     Descr="The category number."
EDESC
#
#
#
EVENT rdrFormatterCategoryStoppedDiscardingReportsTrap .1.3.6.1.4.1.5655.4.0.38 "IGNORE" Normal
FORMAT NO FORMAT DEFINED
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"rdrCategoryStoppedDiscardingReportsTrap trap signifies that the agent entity has detected that 
reports send to this category are not being discarded any more. 
The rdrFormatterCategoryNumReportsDiscarded object in this MIB is counting the amount of discarded reports."
Variables:
  1: rdrFormatterCategoryIndex
     Syntax="Integer (1..4)"
     Descr="The category number."
EDESC
#
#
#
EVENT sessionStartedTrap .1.3.6.1.4.1.5655.4.0.39 "IGNORE" Normal
FORMAT NO FORMAT DEFINED
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A sessionStarted trap signifies that the agent
entity has accepted a new session. The pcubeSeEventGenericString1 
is the session type (telnet/SSH) and client IP address"
Variables:
  1: pcubeSeEventGenericString1
     Syntax="Display String"
     Descr="Temporary string used for traps. Always returns an empty string."
EDESC
#
#
#
EVENT sessionEndedTrap .1.3.6.1.4.1.5655.4.0.40 "IGNORE" Normal
FORMAT NO FORMAT DEFINED
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A sessionEnded trap signifies that the agent
entity has detected end of a session. The pcubeSeEventGenericString1 
is the session type (telnet/SSH) and client IP address"
Variables:
  1: pcubeSeEventGenericString1
     Syntax="Display String"
     Descr="Temporary string used for traps. Always returns an empty string."
EDESC
#
#
#
EVENT sessionDeniedAccessTrap .1.3.6.1.4.1.5655.4.0.41 "IGNORE" Normal
FORMAT NO FORMAT DEFINED
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A sessionDeniedAccess trap signifies that the agent
entity has refused a session from unauthorized source. The pcubeSeEventGenericString1 
is the session type (telnet/SSH) and client IP address"
EDESC
#
#
#
EVENT sessionBadLoginTrap .1.3.6.1.4.1.5655.4.0.42 "IGNORE" Normal
FORMAT NO FORMAT DEFINED
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A sessionBadLogin trap signifies that the agent
entity has detected attempt to login with a wrong password. The pcubeSeEventGenericString1 
is the session type (telnet/SSH) and client IP address"
EDESC
#
#
#
EVENT illegalSubscriberMappingTrap .1.3.6.1.4.1.5655.4.0.43 "SCE2000" Warning
FORMAT Illegal attempt of subscriber mapping
NODES BADE-NSTM01.ippubbl.wind BADE-NSTM02.ippubbl.wind BAZI-NSTM01.ippubbl.wind BOFI-NSTM01.ippubbl.wind BOTE-NSTM01.ippubbl.wind BOTE-NSTM02.ippubbl.wind FIAR-NSTM01.ippubbl.wind FICI-NSTM01.ippubbl.wind GECA-NSTM01.ippubbl.wind GEPA-NSTM01.ippubbl.wind MICA-NSTM01.ippubbl.wind MICA-NSTM02.ippubbl.wind MILO-NSTM01.ippubbl.wind MISG-NSTM01.ippubbl.wind MISG-NSTM02.ippubbl.wind NACD-NSTM01.ippubbl.wind NAGI-NSTM01.ippubbl.wind NAGI-NSTM02.ippubbl.wind PACR-NSTM01.ippubbl.wind PACR-NSTM02.ippubbl.wind PAVB-NSTM01.ippubbl.wind PDMA-NSTM01.ippubbl.wind PDMA-NSTM02.ippubbl.wind RMCA-NSTM01.ippubbl.wind RMCA-NSTM02.ippubbl.wind RMCC-NSTM01.ippubbl.wind RMCC-NSTM02.ippubbl.wind RMSA-NSTM01.ippubbl.wind RMSA-NSTM02.ippubbl.wind TOMA-NSTM01.ippubbl.wind TONI-NSTM01.ippubbl.wind TONI-NSTM02.ippubbl.wind VEMA-NSTM01.ippubbl.wind VEMA-NSTM02.ippubbl.wind
SDESC
Long Descr.:
"A illegalSubscriberMappingTrap trap signifies that some external entity
has attempted to create illegal or inconsistent subscriber mappings. 
The pcubeSeEventGenericString1 contains a message describing the problem."
Variables:
  1: moduleIndex
     Syntax="Integer (1..255)"
     Descr="A unique value for each module within the chassis."
  2: pcubeSeEventGenericString1
     Syntax="Display String"
     Descr="Temporary string used for traps. Always returns an empty string."
EDESC
#
#
#
EVENT ggsnTrapNew .1.3.6.1.4.1.10923.1.1.2.1 "Threshold Alarms" Normal
FORMAT ORIGINAL $1 $2 $3 $4 $5 $6 $7 $8
EXEC gprs_base "$A" "$7" "NEW" "$8" "$1" "$2" "$4" "$5" "$6"
SDESC
Long Descr.:
"A trap describing the newly generated event or
alarm. The text in ggsnTrapDescription indicates 
the nature of the problem."
Variables:
  1: ggsnAlarmId
     Syntax="Integer (1..2147483647)"
     Descr="A number uniquely identifying each event or alarm
in the Alarm Table."
  2: ggsnAlarmName
     Syntax="Display String"
     Descr="The name of the event or alarm."
  3: ggsnAlarmTime
     Syntax="TimeStamp  (Timeticks) "
     Descr="The value of sysUpTime when the event or alarm was sent."
  4: ggsnAlarmSourceId
     Syntax="Display String"
     Descr="The name of the event or alarm's originator."
  5: ggsnAlarmObjectClass
     Syntax="Display String"
     Descr="The class of the network resources associated
with the event or alarm."
  6: ggsnAlarmObjectInstance
     Syntax="Display String"
     Descr="The instance (of a class) of the network resource
associated with the event or alarm."
  7: ggsnAlarmSeverity
     Syntax="PerceivedSeverity  (Integer) "
     Descr="The perceived serverity of the event. The value
unknown (0) is not recommended to be used."
  8: ggsnAlarmDescription
     Syntax="Display String"
     Descr="A short textual explanation of the event or
alarm instance."
EDESC
#
#
#
EVENT ggsnTrapChanged .1.3.6.1.4.1.10923.1.1.2.2 "Threshold Alarms" Normal
FORMAT ORIGINAL $1 $2 $3 $4 $5 $6 $7 $8
EXEC gprs_base "$A" "$7" "CHANGE"  "$8" "$1" "$2" "$4" "$5" "$6"
SDESC
Long Descr.:
"A trap indicating a change in some of the alarm or
event's attributes has occured. The text in
ggsnTrapDescription indicates the nature
of the change."
Variables:
  1: ggsnAlarmId
     Syntax="Integer (1..2147483647)"
     Descr="A number uniquely identifying each event or alarm
in the Alarm Table."
  2: ggsnAlarmName
     Syntax="Display String"
     Descr="The name of the event or alarm."
  3: ggsnAlarmTime
     Syntax="TimeStamp  (Timeticks) "
     Descr="The value of sysUpTime when the event or alarm was sent."
  4: ggsnAlarmSourceId
     Syntax="Display String"
     Descr="The name of the event or alarm's originator."
  5: ggsnAlarmObjectClass
     Syntax="Display String"
     Descr="The class of the network resources associated
with the event or alarm."
  6: ggsnAlarmObjectInstance
     Syntax="Display String"
     Descr="The instance (of a class) of the network resource
associated with the event or alarm."
  7: ggsnAlarmSeverity
     Syntax="PerceivedSeverity  (Integer) "
     Descr="The perceived serverity of the event. The value
unknown (0) is not recommended to be used."
  8: ggsnAlarmDescription
     Syntax="Display String"
     Descr="A short textual explanation of the event or
alarm instance."
EDESC
#
#
#
EVENT ggsnTrapCleared .1.3.6.1.4.1.10923.1.1.2.3 "Threshold Alarms" Normal
FORMAT ORIGINAL $1 $2 $3 $4 $5 $6 $7 $8
EXEC gprs_base "$A" "$7" "CLEAR"  "$8" "$1" "$2" "$4" "$5" "$6"
SDESC
Long Descr.:
"A trap indicating the clear of the event or alarm."
Variables:
  1: ggsnAlarmId
     Syntax="Integer (1..2147483647)"
     Descr="A number uniquely identifying each event or alarm
in the Alarm Table."
  2: ggsnAlarmName
     Syntax="Display String"
     Descr="The name of the event or alarm."
  3: ggsnAlarmTime
     Syntax="TimeStamp  (Timeticks) "
     Descr="The value of sysUpTime when the event or alarm was sent."
  4: ggsnAlarmSourceId
     Syntax="Display String"
     Descr="The name of the event or alarm's originator."
  5: ggsnAlarmObjectClass
     Syntax="Display String"
     Descr="The class of the network resources associated
with the event or alarm."
  6: ggsnAlarmObjectInstance
     Syntax="Display String"
     Descr="The instance (of a class) of the network resource
associated with the event or alarm."
  7: ggsnAlarmSeverity
     Syntax="PerceivedSeverity  (Integer) "
     Descr="The perceived serverity of the event. The value
unknown (0) is not recommended to be used."
  8: ggsnAlarmDescription
     Syntax="Display String"
     Descr="A short textual explanation of the event or
alarm instance."
EDESC
#
#
#
EVENT SNMP_Cold_Start .1.3.6.1.6.3.1.1.5.1 "LOGONLY" Normal
FORMAT Agent Up with Possible Changes (coldStart Trap) enterprise:$E ($e) args($#):$*
SDESC
A coldStart trap signifies that the sending
protocol entity is reinitializing itself such
that the agent's configuration or the protocol
entity implementation may be altered.
EDESC
#
#
#
EVENT SNMP_Warm_Start .1.3.6.1.6.3.1.1.5.2 "LOGONLY" Normal
FORMAT Agent Up with No Changes (warmStart Trap) enterprise:$E ($e) args($#):$*
SDESC
A warmStart trap signifies that the sending
protocol entity is reinitializing itself such
that neither the agent configuration nor the
protocol entity implementation is altered.
EDESC
#
#
#
EVENT SNMP_Link_Down_J20 .1.3.6.1.6.3.1.1.5.3 "LOGONLY" Minor
FORMAT Agent Interface Down (linkDown Trap) on interface $1
EXEC snmp_monitor_J20.sh ".1.3.6.1.2.1.2.2.1.2.$1" $A 2001
NODES MIOT-G01.ippubbl.wind MIOT-U01.ippubbl.wind RMCC-G01.ippubbl.wind RMID-U01.ippubbl.wind
SDESC
A linkDown trap signifies that the sending
protocol entity recognizes a failure in one of
the communication links represented in the
agent's configuration.

The data passed with the event is
    1) The name and value of the ifIndex instance
       for the affected interface.  The name of
       the interface can be retrieved via an snmpget
       of .1.3.6.1.2.1.2.2.1.2.INST, where INST is
       the instance returned with the trap
EDESC
#
#
#
EVENT SNMP_Link_Down_M320 .1.3.6.1.6.3.1.1.5.3 "LOGONLY" Minor
FORMAT Agent Interface Down (linkDown Trap) enterprise:$E ($e) on interface $1
NODES ANTO-E03.ippubbl.wind BADE-E03.ippubbl.wind BOTE-E02.ippubbl.wind FICI-E09.ippubbl.wind FICI-E10.ippubbl.wind GECA-E03.ippubbl.wind MILO-E10.ippubbl.wind MILO-E11.ippubbl.wind NAGI-E01.ippubbl.wind PACR-E03.ippubbl.wind PDUR-E01.ippubbl.wind RMSA-E01.ippubbl.wind RMSA-E02.ippubbl.wind TONI-E04.ippubbl.wind
SDESC
A linkDown trap signifies that the sending
protocol entity recognizes a failure in one of
the communication links represented in the
agent's configuration.

The data passed with the event is
    1) The name and value of the ifIndex instance
       for the affected interface.  The name of
       the interface can be retrieved via an snmpget
       of .1.3.6.1.2.1.2.2.1.2.INST, where INST is
       the instance returned with the trap
EDESC
#
#
#
EVENT SNMP_Link_Down .1.3.6.1.6.3.1.1.5.3 "LOGONLY" Minor
FORMAT Agent Interface Down (linkDown Trap) enterprise:$E ($e) on interface $1
SDESC
A linkDown trap signifies that the sending
protocol entity recognizes a failure in one of
the communication links represented in the
agent's configuration.

The data passed with the event is
    1) The name and value of the ifIndex instance
       for the affected interface.  The name of
       the interface can be retrieved via an snmpget
       of .1.3.6.1.2.1.2.2.1.2.INST, where INST is
       the instance returned with the trap
EDESC
#
#
#
EVENT SNMP_Link_Down_Juniper .1.3.6.1.6.3.1.1.5.3 "LOGONLY" Minor
FORMAT Agent Interface Down (linkDown Trap) enterprise:$E ($e) on interface $1
EXEC snmp_monitor.sh ".1.3.6.1.2.1.2.2.1.2.$1" $A 2001
NODES j-rm4.wind.it
SDESC
A linkDown trap signifies that the sending
protocol entity recognizes a failure in one of
the communication links represented in the
agent's configuration.

The data passed with the event is
    1) The name and value of the ifIndex instance
       for the affected interface.  The name of
       the interface can be retrieved via an snmpget
       of .1.3.6.1.2.1.2.2.1.2.INST, where INST is
       the instance returned with the trap
EDESC
#
#
#
EVENT SNMP_Link_Up_Juniper .1.3.6.1.6.3.1.1.5.4 "LOGONLY" Normal
FORMAT Agent Interface Up (linkUp Trap) enterprise:$E ($e) on interface $1
EXEC snmp_monitor.sh ".1.3.6.1.2.1.2.2.1.2.$1" $A 2003
NODES j-rm4.wind.it
SDESC
A linkUp trap signifies that the sending
protocol entity recognizes that one of the
communication links represented in the agent's
configuration has come up.

The data passed with the event is
    1) The name and value of the ifIndex instance
       for the affected interface.  The name of
       the interface can be retrieved via an snmpget
       of .1.3.6.1.2.1.2.2.1.2.INST, where INST is
       the instance returned with the trap
EDESC
#
#
#
EVENT SNMP_Up_J20 .1.3.6.1.6.3.1.1.5.4 "LOGONLY" Normal
FORMAT Agent Interface Up (linkUp Trap) on interface $1
EXEC snmp_monitor_J20.sh ".1.3.6.1.2.1.2.2.1.2.$1" $A 2003
NODES MIOT-G01.ippubbl.wind MIOT-U01.ippubbl.wind RMCC-G01.ippubbl.wind RMID-U01.ippubbl.wind
SDESC
A linkUp trap signifies that the sending
protocol entity recognizes that one of the
communication links represented in the agent's
configuration has come up.

The data passed with the event is
    1) The name and value of the ifIndex instance
       for the affected interface.  The name of
       the interface can be retrieved via an snmpget
       of .1.3.6.1.2.1.2.2.1.2.INST, where INST is
       the instance returned with the trap
EDESC
#
#
#
EVENT SNMP_Link_Up .1.3.6.1.6.3.1.1.5.4 "LOGONLY" Normal
FORMAT Agent Interface Up (linkUp Trap) enterprise:$E ($e) on interface $1
SDESC
A linkUp trap signifies that the sending
protocol entity recognizes that one of the
communication links represented in the agent's
configuration has come up.

The data passed with the event is
    1) The name and value of the ifIndex instance
       for the affected interface.  The name of
       the interface can be retrieved via an snmpget
       of .1.3.6.1.2.1.2.2.1.2.INST, where INST is
       the instance returned with the trap
EDESC
#
#
#
EVENT SNMP_Authen_Failure .1.3.6.1.6.3.1.1.5.5 "LOGONLY" Warning
FORMAT Incorrect Community Name (authenticationFailure Trap) enterprise:$E ($e) args($#):$*
SDESC
An authentication failure trap signifies that
the sending protocol entity is the addressee
of a protocol message that is not properly
authenticated.  While implementations of the
SNMP must be capable of generating this trap,
they must also be capable of suppressing the
emission of such traps via an implementation-
specific mechanism.

HP-UX only:
On HP-UX agents, the valid community names can
be found in the /etc/snmpd.conf file.  The
IP address that caused the authentication
failure can be determined by either looking
in the log file (snmpd.log), or by
doing an snmpwalk on the SNMP variable
    .iso.org.dod.internet.private.enterprises.hp.nm.snmp.
    authfail.authFailTable.authFailEntry
This event is sent when an entity does an SNMPGET
with a community name that does not match
the get-community name in /etc/snmpd.conf.
It also is sent when an entity does an SNMPSET
with a community name that does not match
the set-community name AND does not match
the get-community name.  If no get-community
name is configured, authentication failure
traps will never be sent, because the get
community name matches all.  On HP-UX machines,
see snmpd(1M).
EDESC
#
#
#
EVENT SNMP_EGP_Down .1.3.6.1.6.3.1.1.5.6 "LOGONLY" Warning
FORMAT EGP Neighbor Down (egpNeighborLoss Trap) enterprise:$E ($e) neighbor $1
SDESC
An egpNeighborLoss trap signifies that an EGP
neighbor for whom the sending protocol entity
was an EGP peer has been marked down and the
peer relationship no longer obtains.

The data passed with the event is
    1) The name and value of the ifIndex egpNeighAddr
       for the affected neighbor
EDESC
#
#
#
EVENT GGSN_ALARM_NEW_TEMP .2.436841.1.2.1 "Threshold Alarms" Major
FORMAT ORIGINAL $2 $3 $4 $5 $6 $7 $8 $9
EXEC gprs_base "$A" "$8" "NEW" "$9" "$2" "$3" "$5" "$6" "$7"
SDESC
EDESC
#
#
#
EVENT GGSN_ALARM_CHANGED_TEMP .2.436841.1.2.2 "Threshold Alarms" Minor
FORMAT ORIGINAL $2 $3 $4 $5 $6 $7 $8 $9
EXEC gprs_base "$A" "$8" "CHANGE" "$9" "$2" "$3" "$5" "$6" "$7"
SDESC
EDESC
#
#
#
EVENT GGSN_ALARMS_CLEARED_TMP .2.436841.1.2.3 "Threshold Alarms" Normal
FORMAT ORIGINAL $2 $3 $4 $5 $6 $7 $8 $9
EXEC gprs_base "$A" "$8" "CLEAR" "$9" "$2" "$3" "$5" "$6" "$7"
SDESC
EDESC
#
# End of configuration for event formats and actions
#
